#! /usr/local/Cellar/icarus-verilog/10.3/bin/vvp
:ivl_version "10.3 (stable)" "(v10_3)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "system";
:vpi_module "vhdl_sys";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x7fabce38f220 .scope module, "ALU_32_Sim" "ALU_32_Sim" 2 3;
 .timescale -9 -12;
v0x7fabce3b74f0_0 .var "a", 31 0;
v0x7fabce3b75a0_0 .var "b", 31 0;
v0x7fabce3b7630_0 .var "operation", 3 0;
v0x7fabce3b7700_0 .net "overflow", 0 0, L_0x7fabccc4dbd0;  1 drivers
v0x7fabce3b77b0_0 .net "result", 31 0, L_0x7fabccc4c0a0;  1 drivers
v0x7fabce3b7880_0 .net "zero", 0 0, L_0x7fabccc4dae0;  1 drivers
S_0x7fabce38dda0 .scope module, "aha" "ALU_32" 2 9, 3 5 0, S_0x7fabce38f220;
 .timescale -9 -12;
    .port_info 0 /INPUT 32 "a"
    .port_info 1 /INPUT 32 "b"
    .port_info 2 /INPUT 4 "operation"
    .port_info 3 /OUTPUT 32 "result"
    .port_info 4 /OUTPUT 1 "overflow"
    .port_info 5 /OUTPUT 1 "zero"
L_0x7fabccc4dae0 .functor NOT 1, L_0x7fabccc4da40, C4<0>, C4<0>, C4<0>;
L_0x7fabccc4dbd0 .functor XOR 1, L_0x7fabccc4dc80, L_0x7fabccc4dd60, C4<0>, C4<0>;
v0x7fabce3b6da0_0 .net *"_s451", 0 0, L_0x7fabccc4da40;  1 drivers
v0x7fabce3b6e50_0 .net *"_s456", 0 0, L_0x7fabccc4dc80;  1 drivers
v0x7fabce3b6ef0_0 .net *"_s458", 0 0, L_0x7fabccc4dd60;  1 drivers
v0x7fabce3b6f80_0 .net "a", 31 0, v0x7fabce3b74f0_0;  1 drivers
v0x7fabce3b7010_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  1 drivers
v0x7fabce3a0dc0_0 .net "b", 31 0, v0x7fabce3b75a0_0;  1 drivers
v0x7fabce3a0e70_0 .net "bNegate", 0 0, L_0x7fabce3b79f0;  1 drivers
v0x7fabce3a0f00_0 .net "carryOut", 31 0, L_0x7fabccc4d290;  1 drivers
v0x7fabce3b70e0_0 .net "operation", 3 0, v0x7fabce3b7630_0;  1 drivers
v0x7fabce3b71f0_0 .net "overflow", 0 0, L_0x7fabccc4dbd0;  alias, 1 drivers
v0x7fabce3b7280_0 .net "result", 31 0, L_0x7fabccc4c0a0;  alias, 1 drivers
v0x7fabce3b7330_0 .net "set", 0 0, L_0x7fabccc4c910;  1 drivers
v0x7fabce3b73c0_0 .net "zero", 0 0, L_0x7fabccc4dae0;  alias, 1 drivers
L_0x7fabce3b7910 .part v0x7fabce3b7630_0, 3, 1;
L_0x7fabce3b79f0 .part v0x7fabce3b7630_0, 2, 1;
L_0x7fabccc25d70 .part v0x7fabce3b74f0_0, 0, 1;
L_0x7fabccc26230 .part v0x7fabce3b75a0_0, 0, 1;
L_0x7fabccc1ff70 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc27110 .part v0x7fabce3b74f0_0, 1, 1;
L_0x7fabccc27230 .part v0x7fabce3b75a0_0, 1, 1;
L_0x7fabccc272d0 .part L_0x7fabccc4d290, 0, 1;
L_0x7fabccc27370 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc28560 .part v0x7fabce3b74f0_0, 2, 1;
L_0x7fabccc28680 .part v0x7fabce3b75a0_0, 2, 1;
L_0x7fabccc28820 .part L_0x7fabccc4d290, 1, 1;
L_0x7fabccc288c0 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc29a20 .part v0x7fabce3b74f0_0, 3, 1;
L_0x7fabccc29b40 .part v0x7fabce3b75a0_0, 3, 1;
L_0x7fabccc29c60 .part L_0x7fabccc4d290, 2, 1;
L_0x7fabccc29d00 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc2ae50 .part v0x7fabce3b74f0_0, 4, 1;
L_0x7fabccc2af70 .part v0x7fabce3b75a0_0, 4, 1;
L_0x7fabccc2b0b0 .part L_0x7fabccc4d290, 3, 1;
L_0x7fabccc2b150 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc2c310 .part v0x7fabce3b74f0_0, 5, 1;
L_0x7fabccc2c430 .part v0x7fabce3b75a0_0, 5, 1;
L_0x7fabccc2b2f0 .part L_0x7fabccc4d290, 4, 1;
L_0x7fabccc2c590 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc2d770 .part v0x7fabce3b74f0_0, 6, 1;
L_0x7fabccc2d990 .part v0x7fabce3b75a0_0, 6, 1;
L_0x7fabccc2dc10 .part L_0x7fabccc4d290, 5, 1;
L_0x7fabccc2dcb0 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc2ec90 .part v0x7fabce3b74f0_0, 7, 1;
L_0x7fabccc2edb0 .part v0x7fabce3b75a0_0, 7, 1;
L_0x7fabccc2ef50 .part L_0x7fabccc4d290, 6, 1;
L_0x7fabccc2eff0 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc300c0 .part v0x7fabce3b74f0_0, 8, 1;
L_0x7fabccc301e0 .part v0x7fabce3b75a0_0, 8, 1;
L_0x7fabccc2f090 .part L_0x7fabccc4d290, 7, 1;
L_0x7fabccc304a0 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc31550 .part v0x7fabce3b74f0_0, 9, 1;
L_0x7fabccc31670 .part v0x7fabce3b75a0_0, 9, 1;
L_0x7fabccc305c0 .part L_0x7fabccc4d290, 8, 1;
L_0x7fabccc31850 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc329d0 .part v0x7fabce3b74f0_0, 10, 1;
L_0x7fabccc32af0 .part v0x7fabce3b75a0_0, 10, 1;
L_0x7fabccc318f0 .part L_0x7fabccc4d290, 9, 1;
L_0x7fabccc31990 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc33df0 .part v0x7fabce3b74f0_0, 11, 1;
L_0x7fabccc33f10 .part v0x7fabce3b75a0_0, 11, 1;
L_0x7fabccc32b90 .part L_0x7fabccc4d290, 10, 1;
L_0x7fabccc32c30 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc35210 .part v0x7fabce3b74f0_0, 12, 1;
L_0x7fabccc35330 .part v0x7fabce3b75a0_0, 12, 1;
L_0x7fabccc33fb0 .part L_0x7fabccc4d290, 11, 1;
L_0x7fabccc34050 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc36730 .part v0x7fabce3b74f0_0, 13, 1;
L_0x7fabccc36850 .part v0x7fabce3b75a0_0, 13, 1;
L_0x7fabccc35770 .part L_0x7fabccc4d290, 12, 1;
L_0x7fabccc35810 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc37b40 .part v0x7fabce3b74f0_0, 14, 1;
L_0x7fabccc2d890 .part v0x7fabce3b75a0_0, 14, 1;
L_0x7fabccc2da30 .part L_0x7fabccc4d290, 13, 1;
L_0x7fabccc368f0 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc39160 .part v0x7fabce3b74f0_0, 15, 1;
L_0x7fabccc39280 .part v0x7fabce3b75a0_0, 15, 1;
L_0x7fabccc38060 .part L_0x7fabccc4d290, 14, 1;
L_0x7fabccc38100 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc3a570 .part v0x7fabce3b74f0_0, 16, 1;
L_0x7fabccc3a690 .part v0x7fabce3b75a0_0, 16, 1;
L_0x7fabccc39320 .part L_0x7fabccc4d290, 15, 1;
L_0x7fabccc303a0 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc3ba80 .part v0x7fabce3b74f0_0, 17, 1;
L_0x7fabccc3bba0 .part v0x7fabce3b75a0_0, 17, 1;
L_0x7fabccc3ac50 .part L_0x7fabccc4d290, 16, 1;
L_0x7fabccc3be80 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc3cf30 .part v0x7fabce3b74f0_0, 18, 1;
L_0x7fabccc3d050 .part v0x7fabce3b75a0_0, 18, 1;
L_0x7fabccc3bf20 .part L_0x7fabccc4d290, 17, 1;
L_0x7fabccc3bfc0 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc3e350 .part v0x7fabce3b74f0_0, 19, 1;
L_0x7fabccc3e470 .part v0x7fabce3b75a0_0, 19, 1;
L_0x7fabccc3d0f0 .part L_0x7fabccc4d290, 18, 1;
L_0x7fabccc3d190 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc3f770 .part v0x7fabce3b74f0_0, 20, 1;
L_0x7fabccc3f890 .part v0x7fabce3b75a0_0, 20, 1;
L_0x7fabccc3e510 .part L_0x7fabccc4d290, 19, 1;
L_0x7fabccc3e5b0 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc40b90 .part v0x7fabce3b74f0_0, 21, 1;
L_0x7fabccc40cb0 .part v0x7fabce3b75a0_0, 21, 1;
L_0x7fabccc3f930 .part L_0x7fabccc4d290, 20, 1;
L_0x7fabccc3f9d0 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc41fb0 .part v0x7fabce3b74f0_0, 22, 1;
L_0x7fabccc420d0 .part v0x7fabce3b75a0_0, 22, 1;
L_0x7fabccc40d50 .part L_0x7fabccc4d290, 21, 1;
L_0x7fabccc40df0 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc433c0 .part v0x7fabce3b74f0_0, 23, 1;
L_0x7fabccc434e0 .part v0x7fabce3b75a0_0, 23, 1;
L_0x7fabccc42170 .part L_0x7fabccc4d290, 22, 1;
L_0x7fabccc42210 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc447d0 .part v0x7fabce3b74f0_0, 24, 1;
L_0x7fabccc448f0 .part v0x7fabce3b75a0_0, 24, 1;
L_0x7fabccc43580 .part L_0x7fabccc4d290, 23, 1;
L_0x7fabccc43620 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc45be0 .part v0x7fabce3b74f0_0, 25, 1;
L_0x7fabccc45d00 .part v0x7fabce3b75a0_0, 25, 1;
L_0x7fabccc44990 .part L_0x7fabccc4d290, 24, 1;
L_0x7fabccc44a30 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc46ff0 .part v0x7fabce3b74f0_0, 26, 1;
L_0x7fabccc47110 .part v0x7fabce3b75a0_0, 26, 1;
L_0x7fabccc45da0 .part L_0x7fabccc4d290, 25, 1;
L_0x7fabccc45e40 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc48400 .part v0x7fabce3b74f0_0, 27, 1;
L_0x7fabccc48520 .part v0x7fabce3b75a0_0, 27, 1;
L_0x7fabccc471b0 .part L_0x7fabccc4d290, 26, 1;
L_0x7fabccc47250 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc49810 .part v0x7fabce3b74f0_0, 28, 1;
L_0x7fabccc49930 .part v0x7fabce3b75a0_0, 28, 1;
L_0x7fabccc485c0 .part L_0x7fabccc4d290, 27, 1;
L_0x7fabccc48660 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc4aa30 .part v0x7fabce3b74f0_0, 29, 1;
L_0x7fabccc4ab50 .part v0x7fabce3b75a0_0, 29, 1;
L_0x7fabccc499d0 .part L_0x7fabccc4d290, 28, 1;
L_0x7fabccc49a70 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc4be40 .part v0x7fabce3b74f0_0, 30, 1;
L_0x7fabccc37c60 .part v0x7fabce3b75a0_0, 30, 1;
L_0x7fabccc37d00 .part L_0x7fabccc4d290, 29, 1;
L_0x7fabccc37da0 .part v0x7fabce3b7630_0, 0, 2;
L_0x7fabccc4ce50 .part v0x7fabce3b74f0_0, 31, 1;
L_0x7fabccc4cf70 .part v0x7fabce3b75a0_0, 31, 1;
L_0x7fabccc4bf60 .part L_0x7fabccc4d290, 30, 1;
L_0x7fabccc4c000 .part v0x7fabce3b7630_0, 0, 2;
LS_0x7fabccc4c0a0_0_0 .concat8 [ 1 1 1 1], v0x7fabce359920_0, v0x7fabce32d2b0_0, v0x7fabce372570_0, v0x7fabce313e90_0;
LS_0x7fabccc4c0a0_0_4 .concat8 [ 1 1 1 1], v0x7fabce34eb40_0, v0x7fabce30b650_0, v0x7fabce392f20_0, v0x7fabce3946a0_0;
LS_0x7fabccc4c0a0_0_8 .concat8 [ 1 1 1 1], v0x7fabce395e00_0, v0x7fabce3974d0_0, v0x7fabce398ba0_0, v0x7fabce39a270_0;
LS_0x7fabccc4c0a0_0_12 .concat8 [ 1 1 1 1], v0x7fabce39b940_0, v0x7fabce39d010_0, v0x7fabce39e6e0_0, v0x7fabce39fed0_0;
LS_0x7fabccc4c0a0_0_16 .concat8 [ 1 1 1 1], v0x7fabce3a1700_0, v0x7fabce3a2dd0_0, v0x7fabce3a44a0_0, v0x7fabce3a5b70_0;
LS_0x7fabccc4c0a0_0_20 .concat8 [ 1 1 1 1], v0x7fabce3a7240_0, v0x7fabce3a8910_0, v0x7fabce3a9fe0_0, v0x7fabce3ab6b0_0;
LS_0x7fabccc4c0a0_0_24 .concat8 [ 1 1 1 1], v0x7fabce3acd80_0, v0x7fabce3ae450_0, v0x7fabce3afb20_0, v0x7fabce3b11f0_0;
LS_0x7fabccc4c0a0_0_28 .concat8 [ 1 1 1 1], v0x7fabce3b28c0_0, v0x7fabce3b3f90_0, v0x7fabce3b5660_0, v0x7fabce3b6b50_0;
LS_0x7fabccc4c0a0_1_0 .concat8 [ 4 4 4 4], LS_0x7fabccc4c0a0_0_0, LS_0x7fabccc4c0a0_0_4, LS_0x7fabccc4c0a0_0_8, LS_0x7fabccc4c0a0_0_12;
LS_0x7fabccc4c0a0_1_4 .concat8 [ 4 4 4 4], LS_0x7fabccc4c0a0_0_16, LS_0x7fabccc4c0a0_0_20, LS_0x7fabccc4c0a0_0_24, LS_0x7fabccc4c0a0_0_28;
L_0x7fabccc4c0a0 .concat8 [ 16 16 0 0], LS_0x7fabccc4c0a0_1_0, LS_0x7fabccc4c0a0_1_4;
LS_0x7fabccc4d290_0_0 .concat8 [ 1 1 1 1], L_0x7fabce3b8700, L_0x7fabccc26e40, L_0x7fabccc283d0, L_0x7fabccc29890;
LS_0x7fabccc4d290_0_4 .concat8 [ 1 1 1 1], L_0x7fabccc2acc0, L_0x7fabccc2c180, L_0x7fabccc2d5e0, L_0x7fabccc2eb00;
LS_0x7fabccc4d290_0_8 .concat8 [ 1 1 1 1], L_0x7fabccc2ff30, L_0x7fabccc313c0, L_0x7fabccc32840, L_0x7fabccc33c60;
LS_0x7fabccc4d290_0_12 .concat8 [ 1 1 1 1], L_0x7fabccc35080, L_0x7fabccc365a0, L_0x7fabccc379b0, L_0x7fabccc38fd0;
LS_0x7fabccc4d290_0_16 .concat8 [ 1 1 1 1], L_0x7fabccc3a3e0, L_0x7fabccc3b8f0, L_0x7fabccc3cda0, L_0x7fabccc3e1c0;
LS_0x7fabccc4d290_0_20 .concat8 [ 1 1 1 1], L_0x7fabccc3f5e0, L_0x7fabccc40a00, L_0x7fabccc41e20, L_0x7fabccc43230;
LS_0x7fabccc4d290_0_24 .concat8 [ 1 1 1 1], L_0x7fabccc44640, L_0x7fabccc45a50, L_0x7fabccc46e60, L_0x7fabccc48270;
LS_0x7fabccc4d290_0_28 .concat8 [ 1 1 1 1], L_0x7fabccc49680, L_0x7fabccc4a8a0, L_0x7fabccc4bcb0, L_0x7fabccc4cce0;
LS_0x7fabccc4d290_1_0 .concat8 [ 4 4 4 4], LS_0x7fabccc4d290_0_0, LS_0x7fabccc4d290_0_4, LS_0x7fabccc4d290_0_8, LS_0x7fabccc4d290_0_12;
LS_0x7fabccc4d290_1_4 .concat8 [ 4 4 4 4], LS_0x7fabccc4d290_0_16, LS_0x7fabccc4d290_0_20, LS_0x7fabccc4d290_0_24, LS_0x7fabccc4d290_0_28;
L_0x7fabccc4d290 .concat8 [ 16 16 0 0], LS_0x7fabccc4d290_1_0, LS_0x7fabccc4d290_1_4;
L_0x7fabccc4da40 .reduce/or L_0x7fabccc4c0a0;
L_0x7fabccc4dc80 .part L_0x7fabccc4d290, 30, 1;
L_0x7fabccc4dd60 .part L_0x7fabccc4d290, 31, 1;
S_0x7fabce389940 .scope module, "alu01" "ALU_1" 3 18, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabce3b7a90 .functor XOR 1, L_0x7fabccc25d70, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabce3b7b40 .functor XOR 1, L_0x7fabccc26230, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabce3b7c10 .functor AND 1, L_0x7fabce3b7a90, L_0x7fabce3b7b40, C4<1>, C4<1>;
L_0x7fabce3b7d40 .functor OR 1, L_0x7fabce3b7a90, L_0x7fabce3b7b40, C4<0>, C4<0>;
L_0x7fabce3b7dd0 .functor XOR 1, L_0x7fabce3b7a90, L_0x7fabce3b7b40, C4<0>, C4<0>;
L_0x7fabce3b7f80 .functor XOR 1, L_0x7fabce3b7dd0, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabce3b8030 .functor AND 1, L_0x7fabccc25d70, L_0x7fabccc26230, C4<1>, C4<1>;
L_0x7fabce3b8160 .functor NOT 1, L_0x7fabce3b79f0, C4<0>, C4<0>, C4<0>;
L_0x7fabce3b81d0 .functor AND 1, L_0x7fabce3b8030, L_0x7fabce3b8160, C4<1>, C4<1>;
L_0x7fabce3b8310 .functor NOT 1, L_0x7fabccc25d70, C4<0>, C4<0>, C4<0>;
L_0x7fabce3b8380 .functor AND 1, L_0x7fabce3b8310, L_0x7fabccc26230, C4<1>, C4<1>;
L_0x7fabce3b8450 .functor AND 1, L_0x7fabce3b8380, L_0x7fabce3b79f0, C4<1>, C4<1>;
L_0x7fabce3b84c0 .functor OR 1, L_0x7fabce3b81d0, L_0x7fabce3b8450, C4<0>, C4<0>;
L_0x7fabce3b8620 .functor BUFZ 1, L_0x7fabce3b7f80, C4<0>, C4<0>, C4<0>;
L_0x7fabce3b8690 .functor AND 1, L_0x7fabce3b7a90, L_0x7fabce3b7b40, C4<1>, C4<1>;
L_0x7fabce3b85b0 .functor AND 1, L_0x7fabce3b7a90, L_0x7fabce3b79f0, C4<1>, C4<1>;
L_0x7fabce3b8780 .functor OR 1, L_0x7fabce3b8690, L_0x7fabce3b85b0, C4<0>, C4<0>;
L_0x7fabce3b8920 .functor AND 1, L_0x7fabce3b7b40, L_0x7fabce3b79f0, C4<1>, C4<1>;
L_0x7fabce3b8700 .functor OR 1, L_0x7fabce3b8780, L_0x7fabce3b8920, C4<0>, C4<0>;
v0x7fabce391460_0 .net *"_s10", 0 0, L_0x7fabce3b81d0;  1 drivers
v0x7fabce37fdc0_0 .net *"_s12", 0 0, L_0x7fabce3b8310;  1 drivers
v0x7fabce37fe60_0 .net *"_s14", 0 0, L_0x7fabce3b8380;  1 drivers
v0x7fabce37ae60_0 .net *"_s16", 0 0, L_0x7fabce3b8450;  1 drivers
v0x7fabce37aef0_0 .net *"_s22", 0 0, L_0x7fabce3b8690;  1 drivers
v0x7fabce37a4f0_0 .net *"_s24", 0 0, L_0x7fabce3b85b0;  1 drivers
v0x7fabce37a5a0_0 .net *"_s26", 0 0, L_0x7fabce3b8780;  1 drivers
v0x7fabce375580_0 .net *"_s28", 0 0, L_0x7fabce3b8920;  1 drivers
v0x7fabce375630_0 .net *"_s6", 0 0, L_0x7fabce3b8030;  1 drivers
v0x7fabce374c80_0 .net *"_s8", 0 0, L_0x7fabce3b8160;  1 drivers
v0x7fabce36fca0_0 .net "a", 0 0, L_0x7fabccc25d70;  1 drivers
v0x7fabce36fd30_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce36f320_0 .net "aOperand", 0 0, L_0x7fabce3b7a90;  1 drivers
v0x7fabce36f3b0_0 .net "adderResult", 0 0, L_0x7fabce3b7f80;  1 drivers
v0x7fabce36a3c0_0 .net "b", 0 0, L_0x7fabccc26230;  1 drivers
v0x7fabce36a450_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce369a40_0 .net "bOperand", 0 0, L_0x7fabce3b7b40;  1 drivers
v0x7fabce369ad0_0 .net "carryIn", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce364160_0 .net "carryOut", 0 0, L_0x7fabce3b8700;  1 drivers
v0x7fabce3641f0_0 .net "halfAdderResult", 0 0, L_0x7fabce3b7dd0;  1 drivers
v0x7fabce35f200_0 .net "less", 0 0, L_0x7fabccc4c910;  alias, 1 drivers
v0x7fabce35f290_0 .net "operation", 1 0, L_0x7fabccc1ff70;  1 drivers
v0x7fabce35e880_0 .net "overflow", 0 0, L_0x7fabce3b84c0;  1 drivers
v0x7fabce35e910_0 .net "product", 0 0, L_0x7fabce3b7c10;  1 drivers
v0x7fabce359920_0 .var "result", 0 0;
v0x7fabce3599b0_0 .net "set", 0 0, L_0x7fabce3b8620;  1 drivers
v0x7fabce358fa0_0 .net "sum", 0 0, L_0x7fabce3b7d40;  1 drivers
E_0x7fabce30bab0/0 .event edge, v0x7fabce35e880_0, v0x7fabce3599b0_0, v0x7fabce359920_0, v0x7fabce35f290_0;
E_0x7fabce30bab0/1 .event edge, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce35f200_0, v0x7fabce36a3c0_0;
E_0x7fabce30bab0/2 .event edge, v0x7fabce36fca0_0;
E_0x7fabce30bab0 .event/or E_0x7fabce30bab0/0, E_0x7fabce30bab0/1, E_0x7fabce30bab0/2;
S_0x7fabce354040 .scope module, "alu02" "ALU_1" 3 19, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc25e10 .functor XOR 1, L_0x7fabccc27110, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc26a00 .functor XOR 1, L_0x7fabccc27230, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc26a70 .functor AND 1, L_0x7fabccc25e10, L_0x7fabccc26a00, C4<1>, C4<1>;
L_0x7fabccc1fe00 .functor OR 1, L_0x7fabccc25e10, L_0x7fabccc26a00, C4<0>, C4<0>;
L_0x7fabccc1fe70 .functor XOR 1, L_0x7fabccc25e10, L_0x7fabccc26a00, C4<0>, C4<0>;
L_0x7fabccc232b0 .functor XOR 1, L_0x7fabccc1fe70, L_0x7fabccc272d0, C4<0>, C4<0>;
L_0x7fabccc23320 .functor AND 1, L_0x7fabccc27110, L_0x7fabccc27230, C4<1>, C4<1>;
L_0x7fabccc266f0 .functor NOT 1, L_0x7fabccc272d0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc26760 .functor AND 1, L_0x7fabccc23320, L_0x7fabccc266f0, C4<1>, C4<1>;
L_0x7fabccc23730 .functor NOT 1, L_0x7fabccc27110, C4<0>, C4<0>, C4<0>;
L_0x7fabccc237a0 .functor AND 1, L_0x7fabccc23730, L_0x7fabccc27230, C4<1>, C4<1>;
L_0x7fabccc260f0 .functor AND 1, L_0x7fabccc237a0, L_0x7fabccc272d0, C4<1>, C4<1>;
L_0x7fabccc261a0 .functor OR 1, L_0x7fabccc26760, L_0x7fabccc260f0, C4<0>, C4<0>;
L_0x7fabccc1fbb0 .functor BUFZ 1, L_0x7fabccc232b0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc1fc60 .functor AND 1, L_0x7fabccc25e10, L_0x7fabccc26a00, C4<1>, C4<1>;
L_0x7fabccc1fb40 .functor AND 1, L_0x7fabccc25e10, L_0x7fabccc272d0, C4<1>, C4<1>;
L_0x7fabccc26cd0 .functor OR 1, L_0x7fabccc1fc60, L_0x7fabccc1fb40, C4<0>, C4<0>;
L_0x7fabccc26dd0 .functor AND 1, L_0x7fabccc26a00, L_0x7fabccc272d0, C4<1>, C4<1>;
L_0x7fabccc26e40 .functor OR 1, L_0x7fabccc26cd0, L_0x7fabccc26dd0, C4<0>, C4<0>;
v0x7fabce359030_0 .net *"_s10", 0 0, L_0x7fabccc26760;  1 drivers
v0x7fabce34e760_0 .net *"_s12", 0 0, L_0x7fabccc23730;  1 drivers
v0x7fabce34e7f0_0 .net *"_s14", 0 0, L_0x7fabccc237a0;  1 drivers
v0x7fabce34dde0_0 .net *"_s16", 0 0, L_0x7fabccc260f0;  1 drivers
v0x7fabce34de70_0 .net *"_s22", 0 0, L_0x7fabccc1fc60;  1 drivers
v0x7fabce348e80_0 .net *"_s24", 0 0, L_0x7fabccc1fb40;  1 drivers
v0x7fabce348f10_0 .net *"_s26", 0 0, L_0x7fabccc26cd0;  1 drivers
v0x7fabce348500_0 .net *"_s28", 0 0, L_0x7fabccc26dd0;  1 drivers
v0x7fabce348590_0 .net *"_s6", 0 0, L_0x7fabccc23320;  1 drivers
v0x7fabce3435a0_0 .net *"_s8", 0 0, L_0x7fabccc266f0;  1 drivers
v0x7fabce343630_0 .net "a", 0 0, L_0x7fabccc27110;  1 drivers
v0x7fabce342c20_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce342cb0_0 .net "aOperand", 0 0, L_0x7fabccc25e10;  1 drivers
v0x7fabce33dcc0_0 .net "adderResult", 0 0, L_0x7fabccc232b0;  1 drivers
v0x7fabce33dd50_0 .net "b", 0 0, L_0x7fabccc27230;  1 drivers
v0x7fabce33d340_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce33d3d0_0 .net "bOperand", 0 0, L_0x7fabccc26a00;  1 drivers
v0x7fabce337a60_0 .net "carryIn", 0 0, L_0x7fabccc272d0;  1 drivers
v0x7fabce337af0_0 .net "carryOut", 0 0, L_0x7fabccc26e40;  1 drivers
v0x7fabce332b00_0 .net "halfAdderResult", 0 0, L_0x7fabccc1fe70;  1 drivers
L_0x7fabccd63008 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce332b90_0 .net "less", 0 0, L_0x7fabccd63008;  1 drivers
v0x7fabce332180_0 .net "operation", 1 0, L_0x7fabccc27370;  1 drivers
v0x7fabce332210_0 .net "overflow", 0 0, L_0x7fabccc261a0;  1 drivers
v0x7fabce32d220_0 .net "product", 0 0, L_0x7fabccc26a70;  1 drivers
v0x7fabce32d2b0_0 .var "result", 0 0;
v0x7fabce32c8a0_0 .net "set", 0 0, L_0x7fabccc1fbb0;  1 drivers
v0x7fabce32c930_0 .net "sum", 0 0, L_0x7fabccc1fe00;  1 drivers
E_0x7fabce36a4e0/0 .event edge, v0x7fabce332210_0, v0x7fabce32c8a0_0, v0x7fabce32d2b0_0, v0x7fabce332180_0;
E_0x7fabce36a4e0/1 .event edge, v0x7fabce337a60_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce332b90_0;
E_0x7fabce36a4e0/2 .event edge, v0x7fabce33dd50_0, v0x7fabce343630_0;
E_0x7fabce36a4e0 .event/or E_0x7fabce36a4e0/0, E_0x7fabce36a4e0/1, E_0x7fabce36a4e0/2;
S_0x7fabce327940 .scope module, "alu03" "ALU_1" 3 20, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc27410 .functor XOR 1, L_0x7fabccc28560, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc274c0 .functor XOR 1, L_0x7fabccc28680, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc27590 .functor AND 1, L_0x7fabccc27410, L_0x7fabccc274c0, C4<1>, C4<1>;
L_0x7fabccc27680 .functor OR 1, L_0x7fabccc27410, L_0x7fabccc274c0, C4<0>, C4<0>;
L_0x7fabccc27710 .functor XOR 1, L_0x7fabccc27410, L_0x7fabccc274c0, C4<0>, C4<0>;
L_0x7fabccc278c0 .functor XOR 1, L_0x7fabccc27710, L_0x7fabccc28820, C4<0>, C4<0>;
L_0x7fabccc27970 .functor AND 1, L_0x7fabccc28560, L_0x7fabccc28680, C4<1>, C4<1>;
L_0x7fabccc27a80 .functor NOT 1, L_0x7fabccc28820, C4<0>, C4<0>, C4<0>;
L_0x7fabccc27b30 .functor AND 1, L_0x7fabccc27970, L_0x7fabccc27a80, C4<1>, C4<1>;
L_0x7fabccc27c70 .functor NOT 1, L_0x7fabccc28560, C4<0>, C4<0>, C4<0>;
L_0x7fabccc27ce0 .functor AND 1, L_0x7fabccc27c70, L_0x7fabccc28680, C4<1>, C4<1>;
L_0x7fabccc27dd0 .functor AND 1, L_0x7fabccc27ce0, L_0x7fabccc28820, C4<1>, C4<1>;
L_0x7fabccc27ea0 .functor OR 1, L_0x7fabccc27b30, L_0x7fabccc27dd0, C4<0>, C4<0>;
L_0x7fabccc28000 .functor BUFZ 1, L_0x7fabccc278c0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc280b0 .functor AND 1, L_0x7fabccc27410, L_0x7fabccc274c0, C4<1>, C4<1>;
L_0x7fabccc27f90 .functor AND 1, L_0x7fabccc27410, L_0x7fabccc28820, C4<1>, C4<1>;
L_0x7fabccc28220 .functor OR 1, L_0x7fabccc280b0, L_0x7fabccc27f90, C4<0>, C4<0>;
L_0x7fabccc28360 .functor AND 1, L_0x7fabccc274c0, L_0x7fabccc28820, C4<1>, C4<1>;
L_0x7fabccc283d0 .functor OR 1, L_0x7fabccc28220, L_0x7fabccc28360, C4<0>, C4<0>;
v0x7fabce322060_0 .net *"_s10", 0 0, L_0x7fabccc27b30;  1 drivers
v0x7fabce3220f0_0 .net *"_s12", 0 0, L_0x7fabccc27c70;  1 drivers
v0x7fabce3216e0_0 .net *"_s14", 0 0, L_0x7fabccc27ce0;  1 drivers
v0x7fabce321770_0 .net *"_s16", 0 0, L_0x7fabccc27dd0;  1 drivers
v0x7fabce31c780_0 .net *"_s22", 0 0, L_0x7fabccc280b0;  1 drivers
v0x7fabce31c810_0 .net *"_s24", 0 0, L_0x7fabccc27f90;  1 drivers
v0x7fabce31be00_0 .net *"_s26", 0 0, L_0x7fabccc28220;  1 drivers
v0x7fabce31be90_0 .net *"_s28", 0 0, L_0x7fabccc28360;  1 drivers
v0x7fabce316ea0_0 .net *"_s6", 0 0, L_0x7fabccc27970;  1 drivers
v0x7fabce316f30_0 .net *"_s8", 0 0, L_0x7fabccc27a80;  1 drivers
v0x7fabce316520_0 .net "a", 0 0, L_0x7fabccc28560;  1 drivers
v0x7fabce3165b0_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce311530_0 .net "aOperand", 0 0, L_0x7fabccc27410;  1 drivers
v0x7fabce3115c0_0 .net "adderResult", 0 0, L_0x7fabccc278c0;  1 drivers
v0x7fabce310bb0_0 .net "b", 0 0, L_0x7fabccc28680;  1 drivers
v0x7fabce310c40_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce38e1d0_0 .net "bOperand", 0 0, L_0x7fabccc274c0;  1 drivers
v0x7fabce38e260_0 .net "carryIn", 0 0, L_0x7fabccc28820;  1 drivers
v0x7fabce383010_0 .net "carryOut", 0 0, L_0x7fabccc283d0;  1 drivers
v0x7fabce3830a0_0 .net "halfAdderResult", 0 0, L_0x7fabccc27710;  1 drivers
L_0x7fabccd63050 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce37d730_0 .net "less", 0 0, L_0x7fabccd63050;  1 drivers
v0x7fabce37d7c0_0 .net "operation", 1 0, L_0x7fabccc288c0;  1 drivers
v0x7fabce377e50_0 .net "overflow", 0 0, L_0x7fabccc27ea0;  1 drivers
v0x7fabce377ee0_0 .net "product", 0 0, L_0x7fabccc27590;  1 drivers
v0x7fabce372570_0 .var "result", 0 0;
v0x7fabce372600_0 .net "set", 0 0, L_0x7fabccc28000;  1 drivers
v0x7fabce36cc90_0 .net "sum", 0 0, L_0x7fabccc27680;  1 drivers
E_0x7fabce33d460/0 .event edge, v0x7fabce377e50_0, v0x7fabce372600_0, v0x7fabce372570_0, v0x7fabce37d7c0_0;
E_0x7fabce33d460/1 .event edge, v0x7fabce38e260_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce37d730_0;
E_0x7fabce33d460/2 .event edge, v0x7fabce310bb0_0, v0x7fabce316520_0;
E_0x7fabce33d460 .event/or E_0x7fabce33d460/0, E_0x7fabce33d460/1, E_0x7fabce33d460/2;
S_0x7fabce3673b0 .scope module, "alu04" "ALU_1" 3 21, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc289d0 .functor XOR 1, L_0x7fabccc29a20, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc28a40 .functor XOR 1, L_0x7fabccc29b40, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc28ab0 .functor AND 1, L_0x7fabccc289d0, L_0x7fabccc28a40, C4<1>, C4<1>;
L_0x7fabccc28b60 .functor OR 1, L_0x7fabccc289d0, L_0x7fabccc28a40, C4<0>, C4<0>;
L_0x7fabccc28bd0 .functor XOR 1, L_0x7fabccc289d0, L_0x7fabccc28a40, C4<0>, C4<0>;
L_0x7fabccc28d80 .functor XOR 1, L_0x7fabccc28bd0, L_0x7fabccc29c60, C4<0>, C4<0>;
L_0x7fabccc28e30 .functor AND 1, L_0x7fabccc29a20, L_0x7fabccc29b40, C4<1>, C4<1>;
L_0x7fabccc28f40 .functor NOT 1, L_0x7fabccc29c60, C4<0>, C4<0>, C4<0>;
L_0x7fabccc28ff0 .functor AND 1, L_0x7fabccc28e30, L_0x7fabccc28f40, C4<1>, C4<1>;
L_0x7fabccc29130 .functor NOT 1, L_0x7fabccc29a20, C4<0>, C4<0>, C4<0>;
L_0x7fabccc291a0 .functor AND 1, L_0x7fabccc29130, L_0x7fabccc29b40, C4<1>, C4<1>;
L_0x7fabccc29290 .functor AND 1, L_0x7fabccc291a0, L_0x7fabccc29c60, C4<1>, C4<1>;
L_0x7fabccc29360 .functor OR 1, L_0x7fabccc28ff0, L_0x7fabccc29290, C4<0>, C4<0>;
L_0x7fabccc294c0 .functor BUFZ 1, L_0x7fabccc28d80, C4<0>, C4<0>, C4<0>;
L_0x7fabccc29570 .functor AND 1, L_0x7fabccc289d0, L_0x7fabccc28a40, C4<1>, C4<1>;
L_0x7fabccc29450 .functor AND 1, L_0x7fabccc289d0, L_0x7fabccc29c60, C4<1>, C4<1>;
L_0x7fabccc296e0 .functor OR 1, L_0x7fabccc29570, L_0x7fabccc29450, C4<0>, C4<0>;
L_0x7fabccc29820 .functor AND 1, L_0x7fabccc28a40, L_0x7fabccc29c60, C4<1>, C4<1>;
L_0x7fabccc29890 .functor OR 1, L_0x7fabccc296e0, L_0x7fabccc29820, C4<0>, C4<0>;
v0x7fabce36cd20_0 .net *"_s10", 0 0, L_0x7fabccc28ff0;  1 drivers
v0x7fabce35c1f0_0 .net *"_s12", 0 0, L_0x7fabccc29130;  1 drivers
v0x7fabce35c280_0 .net *"_s14", 0 0, L_0x7fabccc291a0;  1 drivers
v0x7fabce356910_0 .net *"_s16", 0 0, L_0x7fabccc29290;  1 drivers
v0x7fabce3569a0_0 .net *"_s22", 0 0, L_0x7fabccc29570;  1 drivers
v0x7fabce351030_0 .net *"_s24", 0 0, L_0x7fabccc29450;  1 drivers
v0x7fabce3510c0_0 .net *"_s26", 0 0, L_0x7fabccc296e0;  1 drivers
v0x7fabce34b750_0 .net *"_s28", 0 0, L_0x7fabccc29820;  1 drivers
v0x7fabce34b7e0_0 .net *"_s6", 0 0, L_0x7fabccc28e30;  1 drivers
v0x7fabce345e70_0 .net *"_s8", 0 0, L_0x7fabccc28f40;  1 drivers
v0x7fabce345f00_0 .net "a", 0 0, L_0x7fabccc29a20;  1 drivers
v0x7fabce340590_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce340620_0 .net "aOperand", 0 0, L_0x7fabccc289d0;  1 drivers
v0x7fabce33acb0_0 .net "adderResult", 0 0, L_0x7fabccc28d80;  1 drivers
v0x7fabce33ad40_0 .net "b", 0 0, L_0x7fabccc29b40;  1 drivers
v0x7fabce3353d0_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce32faf0_0 .net "bOperand", 0 0, L_0x7fabccc28a40;  1 drivers
v0x7fabce32fb80_0 .net "carryIn", 0 0, L_0x7fabccc29c60;  1 drivers
v0x7fabce324930_0 .net "carryOut", 0 0, L_0x7fabccc29890;  1 drivers
v0x7fabce3249c0_0 .net "halfAdderResult", 0 0, L_0x7fabccc28bd0;  1 drivers
L_0x7fabccd63098 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce31f050_0 .net "less", 0 0, L_0x7fabccd63098;  1 drivers
v0x7fabce31f0e0_0 .net "operation", 1 0, L_0x7fabccc29d00;  1 drivers
v0x7fabce319770_0 .net "overflow", 0 0, L_0x7fabccc29360;  1 drivers
v0x7fabce319800_0 .net "product", 0 0, L_0x7fabccc28ab0;  1 drivers
v0x7fabce313e90_0 .var "result", 0 0;
v0x7fabce313f20_0 .net "set", 0 0, L_0x7fabccc294c0;  1 drivers
v0x7fabce30e520_0 .net "sum", 0 0, L_0x7fabccc28b60;  1 drivers
E_0x7fabce310cd0/0 .event edge, v0x7fabce319770_0, v0x7fabce313f20_0, v0x7fabce313e90_0, v0x7fabce31f0e0_0;
E_0x7fabce310cd0/1 .event edge, v0x7fabce32fb80_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce31f050_0;
E_0x7fabce310cd0/2 .event edge, v0x7fabce33ad40_0, v0x7fabce345f00_0;
E_0x7fabce310cd0 .event/or E_0x7fabce310cd0/0, E_0x7fabce310cd0/1, E_0x7fabce310cd0/2;
S_0x7fabce30b250 .scope module, "alu05" "ALU_1" 3 22, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc28960 .functor XOR 1, L_0x7fabccc2ae50, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc29e30 .functor XOR 1, L_0x7fabccc2af70, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc29ec0 .functor AND 1, L_0x7fabccc28960, L_0x7fabccc29e30, C4<1>, C4<1>;
L_0x7fabccc29fb0 .functor OR 1, L_0x7fabccc28960, L_0x7fabccc29e30, C4<0>, C4<0>;
L_0x7fabccc2a020 .functor XOR 1, L_0x7fabccc28960, L_0x7fabccc29e30, C4<0>, C4<0>;
L_0x7fabccc2a1b0 .functor XOR 1, L_0x7fabccc2a020, L_0x7fabccc2b0b0, C4<0>, C4<0>;
L_0x7fabccc2a260 .functor AND 1, L_0x7fabccc2ae50, L_0x7fabccc2af70, C4<1>, C4<1>;
L_0x7fabccc2a370 .functor NOT 1, L_0x7fabccc2b0b0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc2a420 .functor AND 1, L_0x7fabccc2a260, L_0x7fabccc2a370, C4<1>, C4<1>;
L_0x7fabccc2a560 .functor NOT 1, L_0x7fabccc2ae50, C4<0>, C4<0>, C4<0>;
L_0x7fabccc2a5d0 .functor AND 1, L_0x7fabccc2a560, L_0x7fabccc2af70, C4<1>, C4<1>;
L_0x7fabccc2a6c0 .functor AND 1, L_0x7fabccc2a5d0, L_0x7fabccc2b0b0, C4<1>, C4<1>;
L_0x7fabccc2a790 .functor OR 1, L_0x7fabccc2a420, L_0x7fabccc2a6c0, C4<0>, C4<0>;
L_0x7fabccc2a8f0 .functor BUFZ 1, L_0x7fabccc2a1b0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc2a9a0 .functor AND 1, L_0x7fabccc28960, L_0x7fabccc29e30, C4<1>, C4<1>;
L_0x7fabccc2a880 .functor AND 1, L_0x7fabccc28960, L_0x7fabccc2b0b0, C4<1>, C4<1>;
L_0x7fabccc2ab10 .functor OR 1, L_0x7fabccc2a9a0, L_0x7fabccc2a880, C4<0>, C4<0>;
L_0x7fabccc2ac50 .functor AND 1, L_0x7fabccc29e30, L_0x7fabccc2b0b0, C4<1>, C4<1>;
L_0x7fabccc2acc0 .functor OR 1, L_0x7fabccc2ab10, L_0x7fabccc2ac50, C4<0>, C4<0>;
v0x7fabce30bf70_0 .net *"_s10", 0 0, L_0x7fabccc2a420;  1 drivers
v0x7fabce30e5b0_0 .net *"_s12", 0 0, L_0x7fabccc2a560;  1 drivers
v0x7fabce30c020_0 .net *"_s14", 0 0, L_0x7fabccc2a5d0;  1 drivers
v0x7fabce30c0b0_0 .net *"_s16", 0 0, L_0x7fabccc2a6c0;  1 drivers
v0x7fabce30c140_0 .net *"_s22", 0 0, L_0x7fabccc2a9a0;  1 drivers
v0x7fabce3758d0_0 .net *"_s24", 0 0, L_0x7fabccc2a880;  1 drivers
v0x7fabce375960_0 .net *"_s26", 0 0, L_0x7fabccc2ab10;  1 drivers
v0x7fabce3759f0_0 .net *"_s28", 0 0, L_0x7fabccc2ac50;  1 drivers
v0x7fabce36fff0_0 .net *"_s6", 0 0, L_0x7fabccc2a260;  1 drivers
v0x7fabce370080_0 .net *"_s8", 0 0, L_0x7fabccc2a370;  1 drivers
v0x7fabce370110_0 .net "a", 0 0, L_0x7fabccc2ae50;  1 drivers
v0x7fabce36a710_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce36a820_0 .net "aOperand", 0 0, L_0x7fabccc28960;  1 drivers
v0x7fabce364e30_0 .net "adderResult", 0 0, L_0x7fabccc2a1b0;  1 drivers
v0x7fabce364ec0_0 .net "b", 0 0, L_0x7fabccc2af70;  1 drivers
v0x7fabce364f50_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce35f550_0 .net "bOperand", 0 0, L_0x7fabccc29e30;  1 drivers
v0x7fabce359c70_0 .net "carryIn", 0 0, L_0x7fabccc2b0b0;  1 drivers
v0x7fabce359d00_0 .net "carryOut", 0 0, L_0x7fabccc2acc0;  1 drivers
v0x7fabce359d90_0 .net "halfAdderResult", 0 0, L_0x7fabccc2a020;  1 drivers
L_0x7fabccd630e0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce354390_0 .net "less", 0 0, L_0x7fabccd630e0;  1 drivers
v0x7fabce354420_0 .net "operation", 1 0, L_0x7fabccc2b150;  1 drivers
v0x7fabce3544b0_0 .net "overflow", 0 0, L_0x7fabccc2a790;  1 drivers
v0x7fabce34eab0_0 .net "product", 0 0, L_0x7fabccc29ec0;  1 drivers
v0x7fabce34eb40_0 .var "result", 0 0;
v0x7fabce34ebd0_0 .net "set", 0 0, L_0x7fabccc2a8f0;  1 drivers
v0x7fabce3491d0_0 .net "sum", 0 0, L_0x7fabccc29fb0;  1 drivers
E_0x7fabce32fc10/0 .event edge, v0x7fabce3544b0_0, v0x7fabce34ebd0_0, v0x7fabce34eb40_0, v0x7fabce354420_0;
E_0x7fabce32fc10/1 .event edge, v0x7fabce359c70_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce354390_0;
E_0x7fabce32fc10/2 .event edge, v0x7fabce364ec0_0, v0x7fabce370110_0;
E_0x7fabce32fc10 .event/or E_0x7fabce32fc10/0, E_0x7fabce32fc10/1, E_0x7fabce32fc10/2;
S_0x7fabce349260 .scope module, "alu06" "ALU_1" 3 23, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc20010 .functor XOR 1, L_0x7fabccc2c310, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc29da0 .functor XOR 1, L_0x7fabccc2c430, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc2b3a0 .functor AND 1, L_0x7fabccc20010, L_0x7fabccc29da0, C4<1>, C4<1>;
L_0x7fabccc2b490 .functor OR 1, L_0x7fabccc20010, L_0x7fabccc29da0, C4<0>, C4<0>;
L_0x7fabccc2b500 .functor XOR 1, L_0x7fabccc20010, L_0x7fabccc29da0, C4<0>, C4<0>;
L_0x7fabccc2b670 .functor XOR 1, L_0x7fabccc2b500, L_0x7fabccc2b2f0, C4<0>, C4<0>;
L_0x7fabccc2b720 .functor AND 1, L_0x7fabccc2c310, L_0x7fabccc2c430, C4<1>, C4<1>;
L_0x7fabccc2b830 .functor NOT 1, L_0x7fabccc2b2f0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc2b8e0 .functor AND 1, L_0x7fabccc2b720, L_0x7fabccc2b830, C4<1>, C4<1>;
L_0x7fabccc2ba20 .functor NOT 1, L_0x7fabccc2c310, C4<0>, C4<0>, C4<0>;
L_0x7fabccc2ba90 .functor AND 1, L_0x7fabccc2ba20, L_0x7fabccc2c430, C4<1>, C4<1>;
L_0x7fabccc2bb80 .functor AND 1, L_0x7fabccc2ba90, L_0x7fabccc2b2f0, C4<1>, C4<1>;
L_0x7fabccc2bc50 .functor OR 1, L_0x7fabccc2b8e0, L_0x7fabccc2bb80, C4<0>, C4<0>;
L_0x7fabccc2bdb0 .functor BUFZ 1, L_0x7fabccc2b670, C4<0>, C4<0>, C4<0>;
L_0x7fabccc2be60 .functor AND 1, L_0x7fabccc20010, L_0x7fabccc29da0, C4<1>, C4<1>;
L_0x7fabccc2bd40 .functor AND 1, L_0x7fabccc20010, L_0x7fabccc2b2f0, C4<1>, C4<1>;
L_0x7fabccc2bfd0 .functor OR 1, L_0x7fabccc2be60, L_0x7fabccc2bd40, C4<0>, C4<0>;
L_0x7fabccc2c110 .functor AND 1, L_0x7fabccc29da0, L_0x7fabccc2b2f0, C4<1>, C4<1>;
L_0x7fabccc2c180 .functor OR 1, L_0x7fabccc2bfd0, L_0x7fabccc2c110, C4<0>, C4<0>;
v0x7fabce343a00_0 .net *"_s10", 0 0, L_0x7fabccc2b8e0;  1 drivers
v0x7fabce33e010_0 .net *"_s12", 0 0, L_0x7fabccc2ba20;  1 drivers
v0x7fabce33e0a0_0 .net *"_s14", 0 0, L_0x7fabccc2ba90;  1 drivers
v0x7fabce33e130_0 .net *"_s16", 0 0, L_0x7fabccc2bb80;  1 drivers
v0x7fabce338730_0 .net *"_s22", 0 0, L_0x7fabccc2be60;  1 drivers
v0x7fabce3387c0_0 .net *"_s24", 0 0, L_0x7fabccc2bd40;  1 drivers
v0x7fabce338850_0 .net *"_s26", 0 0, L_0x7fabccc2bfd0;  1 drivers
v0x7fabce332e50_0 .net *"_s28", 0 0, L_0x7fabccc2c110;  1 drivers
v0x7fabce332ee0_0 .net *"_s6", 0 0, L_0x7fabccc2b720;  1 drivers
v0x7fabce332f70_0 .net *"_s8", 0 0, L_0x7fabccc2b830;  1 drivers
v0x7fabce32d570_0 .net "a", 0 0, L_0x7fabccc2c310;  1 drivers
v0x7fabce32d600_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce32d690_0 .net "aOperand", 0 0, L_0x7fabccc20010;  1 drivers
v0x7fabce327c90_0 .net "adderResult", 0 0, L_0x7fabccc2b670;  1 drivers
v0x7fabce327d20_0 .net "b", 0 0, L_0x7fabccc2c430;  1 drivers
v0x7fabce327db0_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3223b0_0 .net "bOperand", 0 0, L_0x7fabccc29da0;  1 drivers
v0x7fabce31cad0_0 .net "carryIn", 0 0, L_0x7fabccc2b2f0;  1 drivers
v0x7fabce31cb60_0 .net "carryOut", 0 0, L_0x7fabccc2c180;  1 drivers
v0x7fabce31cbf0_0 .net "halfAdderResult", 0 0, L_0x7fabccc2b500;  1 drivers
L_0x7fabccd63128 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3171f0_0 .net "less", 0 0, L_0x7fabccd63128;  1 drivers
v0x7fabce317280_0 .net "operation", 1 0, L_0x7fabccc2c590;  1 drivers
v0x7fabce317310_0 .net "overflow", 0 0, L_0x7fabccc2bc50;  1 drivers
v0x7fabce30b5c0_0 .net "product", 0 0, L_0x7fabccc2b3a0;  1 drivers
v0x7fabce30b650_0 .var "result", 0 0;
v0x7fabce30b6e0_0 .net "set", 0 0, L_0x7fabccc2bdb0;  1 drivers
v0x7fabce30b770_0 .net "sum", 0 0, L_0x7fabccc2b490;  1 drivers
E_0x7fabce351160/0 .event edge, v0x7fabce317310_0, v0x7fabce30b6e0_0, v0x7fabce30b650_0, v0x7fabce317280_0;
E_0x7fabce351160/1 .event edge, v0x7fabce31cad0_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3171f0_0;
E_0x7fabce351160/2 .event edge, v0x7fabce327d20_0, v0x7fabce32d570_0;
E_0x7fabce351160 .event/or E_0x7fabce351160/0, E_0x7fabce351160/1, E_0x7fabce351160/2;
S_0x7fabce310f50 .scope module, "alu07" "ALU_1" 3 24, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc2b7b0 .functor XOR 1, L_0x7fabccc2d770, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc2c740 .functor XOR 1, L_0x7fabccc2d990, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc2c810 .functor AND 1, L_0x7fabccc2b7b0, L_0x7fabccc2c740, C4<1>, C4<1>;
L_0x7fabccc2c510 .functor OR 1, L_0x7fabccc2b7b0, L_0x7fabccc2c740, C4<0>, C4<0>;
L_0x7fabccc2c920 .functor XOR 1, L_0x7fabccc2b7b0, L_0x7fabccc2c740, C4<0>, C4<0>;
L_0x7fabccc2cad0 .functor XOR 1, L_0x7fabccc2c920, L_0x7fabccc2dc10, C4<0>, C4<0>;
L_0x7fabccc2cb80 .functor AND 1, L_0x7fabccc2d770, L_0x7fabccc2d990, C4<1>, C4<1>;
L_0x7fabccc2cc90 .functor NOT 1, L_0x7fabccc2dc10, C4<0>, C4<0>, C4<0>;
L_0x7fabccc2cd40 .functor AND 1, L_0x7fabccc2cb80, L_0x7fabccc2cc90, C4<1>, C4<1>;
L_0x7fabccc2ce80 .functor NOT 1, L_0x7fabccc2d770, C4<0>, C4<0>, C4<0>;
L_0x7fabccc2cef0 .functor AND 1, L_0x7fabccc2ce80, L_0x7fabccc2d990, C4<1>, C4<1>;
L_0x7fabccc2cfe0 .functor AND 1, L_0x7fabccc2cef0, L_0x7fabccc2dc10, C4<1>, C4<1>;
L_0x7fabccc2d0b0 .functor OR 1, L_0x7fabccc2cd40, L_0x7fabccc2cfe0, C4<0>, C4<0>;
L_0x7fabccc2d210 .functor BUFZ 1, L_0x7fabccc2cad0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc2d2c0 .functor AND 1, L_0x7fabccc2b7b0, L_0x7fabccc2c740, C4<1>, C4<1>;
L_0x7fabccc2d1a0 .functor AND 1, L_0x7fabccc2b7b0, L_0x7fabccc2dc10, C4<1>, C4<1>;
L_0x7fabccc2d430 .functor OR 1, L_0x7fabccc2d2c0, L_0x7fabccc2d1a0, C4<0>, C4<0>;
L_0x7fabccc2d570 .functor AND 1, L_0x7fabccc2c740, L_0x7fabccc2dc10, C4<1>, C4<1>;
L_0x7fabccc2d5e0 .functor OR 1, L_0x7fabccc2d430, L_0x7fabccc2d570, C4<0>, C4<0>;
v0x7fabce391530_0 .net *"_s10", 0 0, L_0x7fabccc2cd40;  1 drivers
v0x7fabce3915c0_0 .net *"_s12", 0 0, L_0x7fabccc2ce80;  1 drivers
v0x7fabce391650_0 .net *"_s14", 0 0, L_0x7fabccc2cef0;  1 drivers
v0x7fabce3916e0_0 .net *"_s16", 0 0, L_0x7fabccc2cfe0;  1 drivers
v0x7fabce391770_0 .net *"_s22", 0 0, L_0x7fabccc2d2c0;  1 drivers
v0x7fabce391800_0 .net *"_s24", 0 0, L_0x7fabccc2d1a0;  1 drivers
v0x7fabce391890_0 .net *"_s26", 0 0, L_0x7fabccc2d430;  1 drivers
v0x7fabce392350_0 .net *"_s28", 0 0, L_0x7fabccc2d570;  1 drivers
v0x7fabce3923f0_0 .net *"_s6", 0 0, L_0x7fabccc2cb80;  1 drivers
v0x7fabce392500_0 .net *"_s8", 0 0, L_0x7fabccc2cc90;  1 drivers
v0x7fabce3925b0_0 .net "a", 0 0, L_0x7fabccc2d770;  1 drivers
v0x7fabce392650_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3926e0_0 .net "aOperand", 0 0, L_0x7fabccc2b7b0;  1 drivers
v0x7fabce392780_0 .net "adderResult", 0 0, L_0x7fabccc2cad0;  1 drivers
v0x7fabce392820_0 .net "b", 0 0, L_0x7fabccc2d990;  1 drivers
v0x7fabce3928c0_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce392950_0 .net "bOperand", 0 0, L_0x7fabccc2c740;  1 drivers
v0x7fabce392ae0_0 .net "carryIn", 0 0, L_0x7fabccc2dc10;  1 drivers
v0x7fabce392b70_0 .net "carryOut", 0 0, L_0x7fabccc2d5e0;  1 drivers
v0x7fabce392c00_0 .net "halfAdderResult", 0 0, L_0x7fabccc2c920;  1 drivers
L_0x7fabccd63170 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce392c90_0 .net "less", 0 0, L_0x7fabccd63170;  1 drivers
v0x7fabce392d30_0 .net "operation", 1 0, L_0x7fabccc2dcb0;  1 drivers
v0x7fabce392de0_0 .net "overflow", 0 0, L_0x7fabccc2d0b0;  1 drivers
v0x7fabce392e80_0 .net "product", 0 0, L_0x7fabccc2c810;  1 drivers
v0x7fabce392f20_0 .var "result", 0 0;
v0x7fabce392fc0_0 .net "set", 0 0, L_0x7fabccc2d210;  1 drivers
v0x7fabce393060_0 .net "sum", 0 0, L_0x7fabccc2c510;  1 drivers
E_0x7fabce32a350/0 .event edge, v0x7fabce392de0_0, v0x7fabce392fc0_0, v0x7fabce392f20_0, v0x7fabce392d30_0;
E_0x7fabce32a350/1 .event edge, v0x7fabce392ae0_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce392c90_0;
E_0x7fabce32a350/2 .event edge, v0x7fabce392820_0, v0x7fabce3925b0_0;
E_0x7fabce32a350 .event/or E_0x7fabce32a350/0, E_0x7fabce32a350/1, E_0x7fabce32a350/2;
S_0x7fabce393210 .scope module, "alu08" "ALU_1" 3 25, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc287a0 .functor XOR 1, L_0x7fabccc2ec90, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc2d4e0 .functor XOR 1, L_0x7fabccc2edb0, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc2c630 .functor AND 1, L_0x7fabccc287a0, L_0x7fabccc2d4e0, C4<1>, C4<1>;
L_0x7fabccc2db70 .functor OR 1, L_0x7fabccc287a0, L_0x7fabccc2d4e0, C4<0>, C4<0>;
L_0x7fabccc2de40 .functor XOR 1, L_0x7fabccc287a0, L_0x7fabccc2d4e0, C4<0>, C4<0>;
L_0x7fabccc2dff0 .functor XOR 1, L_0x7fabccc2de40, L_0x7fabccc2ef50, C4<0>, C4<0>;
L_0x7fabccc2e0a0 .functor AND 1, L_0x7fabccc2ec90, L_0x7fabccc2edb0, C4<1>, C4<1>;
L_0x7fabccc2e1b0 .functor NOT 1, L_0x7fabccc2ef50, C4<0>, C4<0>, C4<0>;
L_0x7fabccc2e260 .functor AND 1, L_0x7fabccc2e0a0, L_0x7fabccc2e1b0, C4<1>, C4<1>;
L_0x7fabccc2e3a0 .functor NOT 1, L_0x7fabccc2ec90, C4<0>, C4<0>, C4<0>;
L_0x7fabccc2e410 .functor AND 1, L_0x7fabccc2e3a0, L_0x7fabccc2edb0, C4<1>, C4<1>;
L_0x7fabccc2e500 .functor AND 1, L_0x7fabccc2e410, L_0x7fabccc2ef50, C4<1>, C4<1>;
L_0x7fabccc2e5d0 .functor OR 1, L_0x7fabccc2e260, L_0x7fabccc2e500, C4<0>, C4<0>;
L_0x7fabccc2e730 .functor BUFZ 1, L_0x7fabccc2dff0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc2e7e0 .functor AND 1, L_0x7fabccc287a0, L_0x7fabccc2d4e0, C4<1>, C4<1>;
L_0x7fabccc2e6c0 .functor AND 1, L_0x7fabccc287a0, L_0x7fabccc2ef50, C4<1>, C4<1>;
L_0x7fabccc2e950 .functor OR 1, L_0x7fabccc2e7e0, L_0x7fabccc2e6c0, C4<0>, C4<0>;
L_0x7fabccc2ea90 .functor AND 1, L_0x7fabccc2d4e0, L_0x7fabccc2ef50, C4<1>, C4<1>;
L_0x7fabccc2eb00 .functor OR 1, L_0x7fabccc2e950, L_0x7fabccc2ea90, C4<0>, C4<0>;
v0x7fabce3934e0_0 .net *"_s10", 0 0, L_0x7fabccc2e260;  1 drivers
v0x7fabce3935a0_0 .net *"_s12", 0 0, L_0x7fabccc2e3a0;  1 drivers
v0x7fabce393650_0 .net *"_s14", 0 0, L_0x7fabccc2e410;  1 drivers
v0x7fabce393710_0 .net *"_s16", 0 0, L_0x7fabccc2e500;  1 drivers
v0x7fabce3937c0_0 .net *"_s22", 0 0, L_0x7fabccc2e7e0;  1 drivers
v0x7fabce3938b0_0 .net *"_s24", 0 0, L_0x7fabccc2e6c0;  1 drivers
v0x7fabce393960_0 .net *"_s26", 0 0, L_0x7fabccc2e950;  1 drivers
v0x7fabce393a10_0 .net *"_s28", 0 0, L_0x7fabccc2ea90;  1 drivers
v0x7fabce393ac0_0 .net *"_s6", 0 0, L_0x7fabccc2e0a0;  1 drivers
v0x7fabce393bd0_0 .net *"_s8", 0 0, L_0x7fabccc2e1b0;  1 drivers
v0x7fabce393c80_0 .net "a", 0 0, L_0x7fabccc2ec90;  1 drivers
v0x7fabce393d20_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce393db0_0 .net "aOperand", 0 0, L_0x7fabccc287a0;  1 drivers
v0x7fabce393e50_0 .net "adderResult", 0 0, L_0x7fabccc2dff0;  1 drivers
v0x7fabce393ef0_0 .net "b", 0 0, L_0x7fabccc2edb0;  1 drivers
v0x7fabce393f90_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce394120_0 .net "bOperand", 0 0, L_0x7fabccc2d4e0;  1 drivers
v0x7fabce3942b0_0 .net "carryIn", 0 0, L_0x7fabccc2ef50;  1 drivers
v0x7fabce394340_0 .net "carryOut", 0 0, L_0x7fabccc2eb00;  1 drivers
v0x7fabce3943d0_0 .net "halfAdderResult", 0 0, L_0x7fabccc2de40;  1 drivers
L_0x7fabccd631b8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce394460_0 .net "less", 0 0, L_0x7fabccd631b8;  1 drivers
v0x7fabce3944f0_0 .net "operation", 1 0, L_0x7fabccc2eff0;  1 drivers
v0x7fabce394580_0 .net "overflow", 0 0, L_0x7fabccc2e5d0;  1 drivers
v0x7fabce394610_0 .net "product", 0 0, L_0x7fabccc2c630;  1 drivers
v0x7fabce3946a0_0 .var "result", 0 0;
v0x7fabce394730_0 .net "set", 0 0, L_0x7fabccc2e730;  1 drivers
v0x7fabce3947c0_0 .net "sum", 0 0, L_0x7fabccc2db70;  1 drivers
E_0x7fabce3924d0/0 .event edge, v0x7fabce394580_0, v0x7fabce394730_0, v0x7fabce3946a0_0, v0x7fabce3944f0_0;
E_0x7fabce3924d0/1 .event edge, v0x7fabce3942b0_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce394460_0;
E_0x7fabce3924d0/2 .event edge, v0x7fabce393ef0_0, v0x7fabce393c80_0;
E_0x7fabce3924d0 .event/or E_0x7fabce3924d0/0, E_0x7fabce3924d0/1, E_0x7fabce3924d0/2;
S_0x7fabce394960 .scope module, "alu09" "ALU_1" 3 26, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc2e130 .functor XOR 1, L_0x7fabccc300c0, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc2ee70 .functor XOR 1, L_0x7fabccc301e0, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc2f1a0 .functor AND 1, L_0x7fabccc2e130, L_0x7fabccc2ee70, C4<1>, C4<1>;
L_0x7fabccc2dd90 .functor OR 1, L_0x7fabccc2e130, L_0x7fabccc2ee70, C4<0>, C4<0>;
L_0x7fabccc2f290 .functor XOR 1, L_0x7fabccc2e130, L_0x7fabccc2ee70, C4<0>, C4<0>;
L_0x7fabccc2f420 .functor XOR 1, L_0x7fabccc2f290, L_0x7fabccc2f090, C4<0>, C4<0>;
L_0x7fabccc2f4d0 .functor AND 1, L_0x7fabccc300c0, L_0x7fabccc301e0, C4<1>, C4<1>;
L_0x7fabccc2f5e0 .functor NOT 1, L_0x7fabccc2f090, C4<0>, C4<0>, C4<0>;
L_0x7fabccc2f690 .functor AND 1, L_0x7fabccc2f4d0, L_0x7fabccc2f5e0, C4<1>, C4<1>;
L_0x7fabccc2f7d0 .functor NOT 1, L_0x7fabccc300c0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc2f840 .functor AND 1, L_0x7fabccc2f7d0, L_0x7fabccc301e0, C4<1>, C4<1>;
L_0x7fabccc2f930 .functor AND 1, L_0x7fabccc2f840, L_0x7fabccc2f090, C4<1>, C4<1>;
L_0x7fabccc2fa00 .functor OR 1, L_0x7fabccc2f690, L_0x7fabccc2f930, C4<0>, C4<0>;
L_0x7fabccc2fb60 .functor BUFZ 1, L_0x7fabccc2f420, C4<0>, C4<0>, C4<0>;
L_0x7fabccc2fc10 .functor AND 1, L_0x7fabccc2e130, L_0x7fabccc2ee70, C4<1>, C4<1>;
L_0x7fabccc2faf0 .functor AND 1, L_0x7fabccc2e130, L_0x7fabccc2f090, C4<1>, C4<1>;
L_0x7fabccc2fd80 .functor OR 1, L_0x7fabccc2fc10, L_0x7fabccc2faf0, C4<0>, C4<0>;
L_0x7fabccc2fec0 .functor AND 1, L_0x7fabccc2ee70, L_0x7fabccc2f090, C4<1>, C4<1>;
L_0x7fabccc2ff30 .functor OR 1, L_0x7fabccc2fd80, L_0x7fabccc2fec0, C4<0>, C4<0>;
v0x7fabce394cb0_0 .net *"_s10", 0 0, L_0x7fabccc2f690;  1 drivers
v0x7fabce394d70_0 .net *"_s12", 0 0, L_0x7fabccc2f7d0;  1 drivers
v0x7fabce394e10_0 .net *"_s14", 0 0, L_0x7fabccc2f840;  1 drivers
v0x7fabce394ea0_0 .net *"_s16", 0 0, L_0x7fabccc2f930;  1 drivers
v0x7fabce394f50_0 .net *"_s22", 0 0, L_0x7fabccc2fc10;  1 drivers
v0x7fabce395040_0 .net *"_s24", 0 0, L_0x7fabccc2faf0;  1 drivers
v0x7fabce3950f0_0 .net *"_s26", 0 0, L_0x7fabccc2fd80;  1 drivers
v0x7fabce3951a0_0 .net *"_s28", 0 0, L_0x7fabccc2fec0;  1 drivers
v0x7fabce395250_0 .net *"_s6", 0 0, L_0x7fabccc2f4d0;  1 drivers
v0x7fabce395360_0 .net *"_s8", 0 0, L_0x7fabccc2f5e0;  1 drivers
v0x7fabce395410_0 .net "a", 0 0, L_0x7fabccc300c0;  1 drivers
v0x7fabce3954b0_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce395640_0 .net "aOperand", 0 0, L_0x7fabccc2e130;  1 drivers
v0x7fabce3956d0_0 .net "adderResult", 0 0, L_0x7fabccc2f420;  1 drivers
v0x7fabce395760_0 .net "b", 0 0, L_0x7fabccc301e0;  1 drivers
v0x7fabce3957f0_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce395880_0 .net "bOperand", 0 0, L_0x7fabccc2ee70;  1 drivers
v0x7fabce395a10_0 .net "carryIn", 0 0, L_0x7fabccc2f090;  1 drivers
v0x7fabce395aa0_0 .net "carryOut", 0 0, L_0x7fabccc2ff30;  1 drivers
v0x7fabce395b30_0 .net "halfAdderResult", 0 0, L_0x7fabccc2f290;  1 drivers
L_0x7fabccd63200 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce395bc0_0 .net "less", 0 0, L_0x7fabccd63200;  1 drivers
v0x7fabce395c50_0 .net "operation", 1 0, L_0x7fabccc304a0;  1 drivers
v0x7fabce395ce0_0 .net "overflow", 0 0, L_0x7fabccc2fa00;  1 drivers
v0x7fabce395d70_0 .net "product", 0 0, L_0x7fabccc2f1a0;  1 drivers
v0x7fabce395e00_0 .var "result", 0 0;
v0x7fabce395ea0_0 .net "set", 0 0, L_0x7fabccc2fb60;  1 drivers
v0x7fabce395f40_0 .net "sum", 0 0, L_0x7fabccc2dd90;  1 drivers
E_0x7fabce393ba0/0 .event edge, v0x7fabce395ce0_0, v0x7fabce395ea0_0, v0x7fabce395e00_0, v0x7fabce395c50_0;
E_0x7fabce393ba0/1 .event edge, v0x7fabce395a10_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce395bc0_0;
E_0x7fabce393ba0/2 .event edge, v0x7fabce395760_0, v0x7fabce395410_0;
E_0x7fabce393ba0 .event/or E_0x7fabce393ba0/0, E_0x7fabce393ba0/1, E_0x7fabce393ba0/2;
S_0x7fabce3960f0 .scope module, "alu10" "ALU_1" 3 27, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc2f130 .functor XOR 1, L_0x7fabccc31550, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc30280 .functor XOR 1, L_0x7fabccc31670, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc302f0 .functor AND 1, L_0x7fabccc2f130, L_0x7fabccc30280, C4<1>, C4<1>;
L_0x7fabccc306b0 .functor OR 1, L_0x7fabccc2f130, L_0x7fabccc30280, C4<0>, C4<0>;
L_0x7fabccc30720 .functor XOR 1, L_0x7fabccc2f130, L_0x7fabccc30280, C4<0>, C4<0>;
L_0x7fabccc308b0 .functor XOR 1, L_0x7fabccc30720, L_0x7fabccc305c0, C4<0>, C4<0>;
L_0x7fabccc30960 .functor AND 1, L_0x7fabccc31550, L_0x7fabccc31670, C4<1>, C4<1>;
L_0x7fabccc30a70 .functor NOT 1, L_0x7fabccc305c0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc30b20 .functor AND 1, L_0x7fabccc30960, L_0x7fabccc30a70, C4<1>, C4<1>;
L_0x7fabccc30c60 .functor NOT 1, L_0x7fabccc31550, C4<0>, C4<0>, C4<0>;
L_0x7fabccc30cd0 .functor AND 1, L_0x7fabccc30c60, L_0x7fabccc31670, C4<1>, C4<1>;
L_0x7fabccc30dc0 .functor AND 1, L_0x7fabccc30cd0, L_0x7fabccc305c0, C4<1>, C4<1>;
L_0x7fabccc30e90 .functor OR 1, L_0x7fabccc30b20, L_0x7fabccc30dc0, C4<0>, C4<0>;
L_0x7fabccc30ff0 .functor BUFZ 1, L_0x7fabccc308b0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc310a0 .functor AND 1, L_0x7fabccc2f130, L_0x7fabccc30280, C4<1>, C4<1>;
L_0x7fabccc30f80 .functor AND 1, L_0x7fabccc2f130, L_0x7fabccc305c0, C4<1>, C4<1>;
L_0x7fabccc31210 .functor OR 1, L_0x7fabccc310a0, L_0x7fabccc30f80, C4<0>, C4<0>;
L_0x7fabccc31350 .functor AND 1, L_0x7fabccc30280, L_0x7fabccc305c0, C4<1>, C4<1>;
L_0x7fabccc313c0 .functor OR 1, L_0x7fabccc31210, L_0x7fabccc31350, C4<0>, C4<0>;
v0x7fabce3963c0_0 .net *"_s10", 0 0, L_0x7fabccc30b20;  1 drivers
v0x7fabce396480_0 .net *"_s12", 0 0, L_0x7fabccc30c60;  1 drivers
v0x7fabce396530_0 .net *"_s14", 0 0, L_0x7fabccc30cd0;  1 drivers
v0x7fabce3965f0_0 .net *"_s16", 0 0, L_0x7fabccc30dc0;  1 drivers
v0x7fabce3966a0_0 .net *"_s22", 0 0, L_0x7fabccc310a0;  1 drivers
v0x7fabce396790_0 .net *"_s24", 0 0, L_0x7fabccc30f80;  1 drivers
v0x7fabce396840_0 .net *"_s26", 0 0, L_0x7fabccc31210;  1 drivers
v0x7fabce3968f0_0 .net *"_s28", 0 0, L_0x7fabccc31350;  1 drivers
v0x7fabce3969a0_0 .net *"_s6", 0 0, L_0x7fabccc30960;  1 drivers
v0x7fabce396ab0_0 .net *"_s8", 0 0, L_0x7fabccc30a70;  1 drivers
v0x7fabce396b60_0 .net "a", 0 0, L_0x7fabccc31550;  1 drivers
v0x7fabce396c00_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce396c90_0 .net "aOperand", 0 0, L_0x7fabccc2f130;  1 drivers
v0x7fabce396d30_0 .net "adderResult", 0 0, L_0x7fabccc308b0;  1 drivers
v0x7fabce396dd0_0 .net "b", 0 0, L_0x7fabccc31670;  1 drivers
v0x7fabce396e70_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce396f00_0 .net "bOperand", 0 0, L_0x7fabccc30280;  1 drivers
v0x7fabce397090_0 .net "carryIn", 0 0, L_0x7fabccc305c0;  1 drivers
v0x7fabce397120_0 .net "carryOut", 0 0, L_0x7fabccc313c0;  1 drivers
v0x7fabce3971b0_0 .net "halfAdderResult", 0 0, L_0x7fabccc30720;  1 drivers
L_0x7fabccd63248 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce397240_0 .net "less", 0 0, L_0x7fabccd63248;  1 drivers
v0x7fabce3972e0_0 .net "operation", 1 0, L_0x7fabccc31850;  1 drivers
v0x7fabce397390_0 .net "overflow", 0 0, L_0x7fabccc30e90;  1 drivers
v0x7fabce397430_0 .net "product", 0 0, L_0x7fabccc302f0;  1 drivers
v0x7fabce3974d0_0 .var "result", 0 0;
v0x7fabce397570_0 .net "set", 0 0, L_0x7fabccc30ff0;  1 drivers
v0x7fabce397610_0 .net "sum", 0 0, L_0x7fabccc306b0;  1 drivers
E_0x7fabce395330/0 .event edge, v0x7fabce397390_0, v0x7fabce397570_0, v0x7fabce3974d0_0, v0x7fabce3972e0_0;
E_0x7fabce395330/1 .event edge, v0x7fabce397090_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce397240_0;
E_0x7fabce395330/2 .event edge, v0x7fabce396dd0_0, v0x7fabce396b60_0;
E_0x7fabce395330 .event/or E_0x7fabce395330/0, E_0x7fabce395330/1, E_0x7fabce395330/2;
S_0x7fabce3977c0 .scope module, "alu11" "ALU_1" 3 28, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc309f0 .functor XOR 1, L_0x7fabccc329d0, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc31730 .functor XOR 1, L_0x7fabccc32af0, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc31a40 .functor AND 1, L_0x7fabccc309f0, L_0x7fabccc31730, C4<1>, C4<1>;
L_0x7fabccc31af0 .functor OR 1, L_0x7fabccc309f0, L_0x7fabccc31730, C4<0>, C4<0>;
L_0x7fabccc31b80 .functor XOR 1, L_0x7fabccc309f0, L_0x7fabccc31730, C4<0>, C4<0>;
L_0x7fabccc31d30 .functor XOR 1, L_0x7fabccc31b80, L_0x7fabccc318f0, C4<0>, C4<0>;
L_0x7fabccc31de0 .functor AND 1, L_0x7fabccc329d0, L_0x7fabccc32af0, C4<1>, C4<1>;
L_0x7fabccc31ef0 .functor NOT 1, L_0x7fabccc318f0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc31fa0 .functor AND 1, L_0x7fabccc31de0, L_0x7fabccc31ef0, C4<1>, C4<1>;
L_0x7fabccc320e0 .functor NOT 1, L_0x7fabccc329d0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc32150 .functor AND 1, L_0x7fabccc320e0, L_0x7fabccc32af0, C4<1>, C4<1>;
L_0x7fabccc32240 .functor AND 1, L_0x7fabccc32150, L_0x7fabccc318f0, C4<1>, C4<1>;
L_0x7fabccc32310 .functor OR 1, L_0x7fabccc31fa0, L_0x7fabccc32240, C4<0>, C4<0>;
L_0x7fabccc32470 .functor BUFZ 1, L_0x7fabccc31d30, C4<0>, C4<0>, C4<0>;
L_0x7fabccc32520 .functor AND 1, L_0x7fabccc309f0, L_0x7fabccc31730, C4<1>, C4<1>;
L_0x7fabccc32400 .functor AND 1, L_0x7fabccc309f0, L_0x7fabccc318f0, C4<1>, C4<1>;
L_0x7fabccc32690 .functor OR 1, L_0x7fabccc32520, L_0x7fabccc32400, C4<0>, C4<0>;
L_0x7fabccc327d0 .functor AND 1, L_0x7fabccc31730, L_0x7fabccc318f0, C4<1>, C4<1>;
L_0x7fabccc32840 .functor OR 1, L_0x7fabccc32690, L_0x7fabccc327d0, C4<0>, C4<0>;
v0x7fabce397a90_0 .net *"_s10", 0 0, L_0x7fabccc31fa0;  1 drivers
v0x7fabce397b50_0 .net *"_s12", 0 0, L_0x7fabccc320e0;  1 drivers
v0x7fabce397c00_0 .net *"_s14", 0 0, L_0x7fabccc32150;  1 drivers
v0x7fabce397cc0_0 .net *"_s16", 0 0, L_0x7fabccc32240;  1 drivers
v0x7fabce397d70_0 .net *"_s22", 0 0, L_0x7fabccc32520;  1 drivers
v0x7fabce397e60_0 .net *"_s24", 0 0, L_0x7fabccc32400;  1 drivers
v0x7fabce397f10_0 .net *"_s26", 0 0, L_0x7fabccc32690;  1 drivers
v0x7fabce397fc0_0 .net *"_s28", 0 0, L_0x7fabccc327d0;  1 drivers
v0x7fabce398070_0 .net *"_s6", 0 0, L_0x7fabccc31de0;  1 drivers
v0x7fabce398180_0 .net *"_s8", 0 0, L_0x7fabccc31ef0;  1 drivers
v0x7fabce398230_0 .net "a", 0 0, L_0x7fabccc329d0;  1 drivers
v0x7fabce3982d0_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce398360_0 .net "aOperand", 0 0, L_0x7fabccc309f0;  1 drivers
v0x7fabce398400_0 .net "adderResult", 0 0, L_0x7fabccc31d30;  1 drivers
v0x7fabce3984a0_0 .net "b", 0 0, L_0x7fabccc32af0;  1 drivers
v0x7fabce398540_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3985d0_0 .net "bOperand", 0 0, L_0x7fabccc31730;  1 drivers
v0x7fabce398760_0 .net "carryIn", 0 0, L_0x7fabccc318f0;  1 drivers
v0x7fabce3987f0_0 .net "carryOut", 0 0, L_0x7fabccc32840;  1 drivers
v0x7fabce398880_0 .net "halfAdderResult", 0 0, L_0x7fabccc31b80;  1 drivers
L_0x7fabccd63290 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce398910_0 .net "less", 0 0, L_0x7fabccd63290;  1 drivers
v0x7fabce3989b0_0 .net "operation", 1 0, L_0x7fabccc31990;  1 drivers
v0x7fabce398a60_0 .net "overflow", 0 0, L_0x7fabccc32310;  1 drivers
v0x7fabce398b00_0 .net "product", 0 0, L_0x7fabccc31a40;  1 drivers
v0x7fabce398ba0_0 .var "result", 0 0;
v0x7fabce398c40_0 .net "set", 0 0, L_0x7fabccc32470;  1 drivers
v0x7fabce398ce0_0 .net "sum", 0 0, L_0x7fabccc31af0;  1 drivers
E_0x7fabce396a80/0 .event edge, v0x7fabce398a60_0, v0x7fabce398c40_0, v0x7fabce398ba0_0, v0x7fabce3989b0_0;
E_0x7fabce396a80/1 .event edge, v0x7fabce398760_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce398910_0;
E_0x7fabce396a80/2 .event edge, v0x7fabce3984a0_0, v0x7fabce398230_0;
E_0x7fabce396a80 .event/or E_0x7fabce396a80/0, E_0x7fabce396a80/1, E_0x7fabce396a80/2;
S_0x7fabce398e90 .scope module, "alu12" "ALU_1" 3 29, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc32d00 .functor XOR 1, L_0x7fabccc33df0, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc32d70 .functor XOR 1, L_0x7fabccc33f10, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc32e20 .functor AND 1, L_0x7fabccc32d00, L_0x7fabccc32d70, C4<1>, C4<1>;
L_0x7fabccc32f10 .functor OR 1, L_0x7fabccc32d00, L_0x7fabccc32d70, C4<0>, C4<0>;
L_0x7fabccc32fa0 .functor XOR 1, L_0x7fabccc32d00, L_0x7fabccc32d70, C4<0>, C4<0>;
L_0x7fabccc33150 .functor XOR 1, L_0x7fabccc32fa0, L_0x7fabccc32b90, C4<0>, C4<0>;
L_0x7fabccc33200 .functor AND 1, L_0x7fabccc33df0, L_0x7fabccc33f10, C4<1>, C4<1>;
L_0x7fabccc33310 .functor NOT 1, L_0x7fabccc32b90, C4<0>, C4<0>, C4<0>;
L_0x7fabccc333c0 .functor AND 1, L_0x7fabccc33200, L_0x7fabccc33310, C4<1>, C4<1>;
L_0x7fabccc33500 .functor NOT 1, L_0x7fabccc33df0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc33570 .functor AND 1, L_0x7fabccc33500, L_0x7fabccc33f10, C4<1>, C4<1>;
L_0x7fabccc33660 .functor AND 1, L_0x7fabccc33570, L_0x7fabccc32b90, C4<1>, C4<1>;
L_0x7fabccc33730 .functor OR 1, L_0x7fabccc333c0, L_0x7fabccc33660, C4<0>, C4<0>;
L_0x7fabccc33890 .functor BUFZ 1, L_0x7fabccc33150, C4<0>, C4<0>, C4<0>;
L_0x7fabccc33940 .functor AND 1, L_0x7fabccc32d00, L_0x7fabccc32d70, C4<1>, C4<1>;
L_0x7fabccc33820 .functor AND 1, L_0x7fabccc32d00, L_0x7fabccc32b90, C4<1>, C4<1>;
L_0x7fabccc33ab0 .functor OR 1, L_0x7fabccc33940, L_0x7fabccc33820, C4<0>, C4<0>;
L_0x7fabccc33bf0 .functor AND 1, L_0x7fabccc32d70, L_0x7fabccc32b90, C4<1>, C4<1>;
L_0x7fabccc33c60 .functor OR 1, L_0x7fabccc33ab0, L_0x7fabccc33bf0, C4<0>, C4<0>;
v0x7fabce399160_0 .net *"_s10", 0 0, L_0x7fabccc333c0;  1 drivers
v0x7fabce399220_0 .net *"_s12", 0 0, L_0x7fabccc33500;  1 drivers
v0x7fabce3992d0_0 .net *"_s14", 0 0, L_0x7fabccc33570;  1 drivers
v0x7fabce399390_0 .net *"_s16", 0 0, L_0x7fabccc33660;  1 drivers
v0x7fabce399440_0 .net *"_s22", 0 0, L_0x7fabccc33940;  1 drivers
v0x7fabce399530_0 .net *"_s24", 0 0, L_0x7fabccc33820;  1 drivers
v0x7fabce3995e0_0 .net *"_s26", 0 0, L_0x7fabccc33ab0;  1 drivers
v0x7fabce399690_0 .net *"_s28", 0 0, L_0x7fabccc33bf0;  1 drivers
v0x7fabce399740_0 .net *"_s6", 0 0, L_0x7fabccc33200;  1 drivers
v0x7fabce399850_0 .net *"_s8", 0 0, L_0x7fabccc33310;  1 drivers
v0x7fabce399900_0 .net "a", 0 0, L_0x7fabccc33df0;  1 drivers
v0x7fabce3999a0_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce399a30_0 .net "aOperand", 0 0, L_0x7fabccc32d00;  1 drivers
v0x7fabce399ad0_0 .net "adderResult", 0 0, L_0x7fabccc33150;  1 drivers
v0x7fabce399b70_0 .net "b", 0 0, L_0x7fabccc33f10;  1 drivers
v0x7fabce399c10_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce399ca0_0 .net "bOperand", 0 0, L_0x7fabccc32d70;  1 drivers
v0x7fabce399e30_0 .net "carryIn", 0 0, L_0x7fabccc32b90;  1 drivers
v0x7fabce399ec0_0 .net "carryOut", 0 0, L_0x7fabccc33c60;  1 drivers
v0x7fabce399f50_0 .net "halfAdderResult", 0 0, L_0x7fabccc32fa0;  1 drivers
L_0x7fabccd632d8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce399fe0_0 .net "less", 0 0, L_0x7fabccd632d8;  1 drivers
v0x7fabce39a080_0 .net "operation", 1 0, L_0x7fabccc32c30;  1 drivers
v0x7fabce39a130_0 .net "overflow", 0 0, L_0x7fabccc33730;  1 drivers
v0x7fabce39a1d0_0 .net "product", 0 0, L_0x7fabccc32e20;  1 drivers
v0x7fabce39a270_0 .var "result", 0 0;
v0x7fabce39a310_0 .net "set", 0 0, L_0x7fabccc33890;  1 drivers
v0x7fabce39a3b0_0 .net "sum", 0 0, L_0x7fabccc32f10;  1 drivers
E_0x7fabce398150/0 .event edge, v0x7fabce39a130_0, v0x7fabce39a310_0, v0x7fabce39a270_0, v0x7fabce39a080_0;
E_0x7fabce398150/1 .event edge, v0x7fabce399e30_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce399fe0_0;
E_0x7fabce398150/2 .event edge, v0x7fabce399b70_0, v0x7fabce399900_0;
E_0x7fabce398150 .event/or E_0x7fabce398150/0, E_0x7fabce398150/1, E_0x7fabce398150/2;
S_0x7fabce39a560 .scope module, "alu13" "ALU_1" 3 30, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc34140 .functor XOR 1, L_0x7fabccc35210, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc341b0 .functor XOR 1, L_0x7fabccc35330, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc34240 .functor AND 1, L_0x7fabccc34140, L_0x7fabccc341b0, C4<1>, C4<1>;
L_0x7fabccc34330 .functor OR 1, L_0x7fabccc34140, L_0x7fabccc341b0, C4<0>, C4<0>;
L_0x7fabccc343c0 .functor XOR 1, L_0x7fabccc34140, L_0x7fabccc341b0, C4<0>, C4<0>;
L_0x7fabccc34570 .functor XOR 1, L_0x7fabccc343c0, L_0x7fabccc33fb0, C4<0>, C4<0>;
L_0x7fabccc34620 .functor AND 1, L_0x7fabccc35210, L_0x7fabccc35330, C4<1>, C4<1>;
L_0x7fabccc34730 .functor NOT 1, L_0x7fabccc33fb0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc347e0 .functor AND 1, L_0x7fabccc34620, L_0x7fabccc34730, C4<1>, C4<1>;
L_0x7fabccc34920 .functor NOT 1, L_0x7fabccc35210, C4<0>, C4<0>, C4<0>;
L_0x7fabccc34990 .functor AND 1, L_0x7fabccc34920, L_0x7fabccc35330, C4<1>, C4<1>;
L_0x7fabccc34a80 .functor AND 1, L_0x7fabccc34990, L_0x7fabccc33fb0, C4<1>, C4<1>;
L_0x7fabccc34b50 .functor OR 1, L_0x7fabccc347e0, L_0x7fabccc34a80, C4<0>, C4<0>;
L_0x7fabccc34cb0 .functor BUFZ 1, L_0x7fabccc34570, C4<0>, C4<0>, C4<0>;
L_0x7fabccc34d60 .functor AND 1, L_0x7fabccc34140, L_0x7fabccc341b0, C4<1>, C4<1>;
L_0x7fabccc34c40 .functor AND 1, L_0x7fabccc34140, L_0x7fabccc33fb0, C4<1>, C4<1>;
L_0x7fabccc34ed0 .functor OR 1, L_0x7fabccc34d60, L_0x7fabccc34c40, C4<0>, C4<0>;
L_0x7fabccc35010 .functor AND 1, L_0x7fabccc341b0, L_0x7fabccc33fb0, C4<1>, C4<1>;
L_0x7fabccc35080 .functor OR 1, L_0x7fabccc34ed0, L_0x7fabccc35010, C4<0>, C4<0>;
v0x7fabce39a830_0 .net *"_s10", 0 0, L_0x7fabccc347e0;  1 drivers
v0x7fabce39a8f0_0 .net *"_s12", 0 0, L_0x7fabccc34920;  1 drivers
v0x7fabce39a9a0_0 .net *"_s14", 0 0, L_0x7fabccc34990;  1 drivers
v0x7fabce39aa60_0 .net *"_s16", 0 0, L_0x7fabccc34a80;  1 drivers
v0x7fabce39ab10_0 .net *"_s22", 0 0, L_0x7fabccc34d60;  1 drivers
v0x7fabce39ac00_0 .net *"_s24", 0 0, L_0x7fabccc34c40;  1 drivers
v0x7fabce39acb0_0 .net *"_s26", 0 0, L_0x7fabccc34ed0;  1 drivers
v0x7fabce39ad60_0 .net *"_s28", 0 0, L_0x7fabccc35010;  1 drivers
v0x7fabce39ae10_0 .net *"_s6", 0 0, L_0x7fabccc34620;  1 drivers
v0x7fabce39af20_0 .net *"_s8", 0 0, L_0x7fabccc34730;  1 drivers
v0x7fabce39afd0_0 .net "a", 0 0, L_0x7fabccc35210;  1 drivers
v0x7fabce39b070_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce39b100_0 .net "aOperand", 0 0, L_0x7fabccc34140;  1 drivers
v0x7fabce39b1a0_0 .net "adderResult", 0 0, L_0x7fabccc34570;  1 drivers
v0x7fabce39b240_0 .net "b", 0 0, L_0x7fabccc35330;  1 drivers
v0x7fabce39b2e0_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce39b370_0 .net "bOperand", 0 0, L_0x7fabccc341b0;  1 drivers
v0x7fabce39b500_0 .net "carryIn", 0 0, L_0x7fabccc33fb0;  1 drivers
v0x7fabce39b590_0 .net "carryOut", 0 0, L_0x7fabccc35080;  1 drivers
v0x7fabce39b620_0 .net "halfAdderResult", 0 0, L_0x7fabccc343c0;  1 drivers
L_0x7fabccd63320 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce39b6b0_0 .net "less", 0 0, L_0x7fabccd63320;  1 drivers
v0x7fabce39b750_0 .net "operation", 1 0, L_0x7fabccc34050;  1 drivers
v0x7fabce39b800_0 .net "overflow", 0 0, L_0x7fabccc34b50;  1 drivers
v0x7fabce39b8a0_0 .net "product", 0 0, L_0x7fabccc34240;  1 drivers
v0x7fabce39b940_0 .var "result", 0 0;
v0x7fabce39b9e0_0 .net "set", 0 0, L_0x7fabccc34cb0;  1 drivers
v0x7fabce39ba80_0 .net "sum", 0 0, L_0x7fabccc34330;  1 drivers
E_0x7fabce399820/0 .event edge, v0x7fabce39b800_0, v0x7fabce39b9e0_0, v0x7fabce39b940_0, v0x7fabce39b750_0;
E_0x7fabce399820/1 .event edge, v0x7fabce39b500_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce39b6b0_0;
E_0x7fabce399820/2 .event edge, v0x7fabce39b240_0, v0x7fabce39afd0_0;
E_0x7fabce399820 .event/or E_0x7fabce399820/0, E_0x7fabce399820/1, E_0x7fabce399820/2;
S_0x7fabce39bc30 .scope module, "alu14" "ALU_1" 3 31, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc2b1f0 .functor XOR 1, L_0x7fabccc36730, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc2b260 .functor XOR 1, L_0x7fabccc36850, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc353d0 .functor AND 1, L_0x7fabccc2b1f0, L_0x7fabccc2b260, C4<1>, C4<1>;
L_0x7fabccc354a0 .functor OR 1, L_0x7fabccc2b1f0, L_0x7fabccc2b260, C4<0>, C4<0>;
L_0x7fabccc35920 .functor XOR 1, L_0x7fabccc2b1f0, L_0x7fabccc2b260, C4<0>, C4<0>;
L_0x7fabccc35a90 .functor XOR 1, L_0x7fabccc35920, L_0x7fabccc35770, C4<0>, C4<0>;
L_0x7fabccc35b40 .functor AND 1, L_0x7fabccc36730, L_0x7fabccc36850, C4<1>, C4<1>;
L_0x7fabccc35c50 .functor NOT 1, L_0x7fabccc35770, C4<0>, C4<0>, C4<0>;
L_0x7fabccc35d00 .functor AND 1, L_0x7fabccc35b40, L_0x7fabccc35c50, C4<1>, C4<1>;
L_0x7fabccc35e40 .functor NOT 1, L_0x7fabccc36730, C4<0>, C4<0>, C4<0>;
L_0x7fabccc35eb0 .functor AND 1, L_0x7fabccc35e40, L_0x7fabccc36850, C4<1>, C4<1>;
L_0x7fabccc35fa0 .functor AND 1, L_0x7fabccc35eb0, L_0x7fabccc35770, C4<1>, C4<1>;
L_0x7fabccc36070 .functor OR 1, L_0x7fabccc35d00, L_0x7fabccc35fa0, C4<0>, C4<0>;
L_0x7fabccc361d0 .functor BUFZ 1, L_0x7fabccc35a90, C4<0>, C4<0>, C4<0>;
L_0x7fabccc36280 .functor AND 1, L_0x7fabccc2b1f0, L_0x7fabccc2b260, C4<1>, C4<1>;
L_0x7fabccc36160 .functor AND 1, L_0x7fabccc2b1f0, L_0x7fabccc35770, C4<1>, C4<1>;
L_0x7fabccc363f0 .functor OR 1, L_0x7fabccc36280, L_0x7fabccc36160, C4<0>, C4<0>;
L_0x7fabccc36530 .functor AND 1, L_0x7fabccc2b260, L_0x7fabccc35770, C4<1>, C4<1>;
L_0x7fabccc365a0 .functor OR 1, L_0x7fabccc363f0, L_0x7fabccc36530, C4<0>, C4<0>;
v0x7fabce39bf00_0 .net *"_s10", 0 0, L_0x7fabccc35d00;  1 drivers
v0x7fabce39bfc0_0 .net *"_s12", 0 0, L_0x7fabccc35e40;  1 drivers
v0x7fabce39c070_0 .net *"_s14", 0 0, L_0x7fabccc35eb0;  1 drivers
v0x7fabce39c130_0 .net *"_s16", 0 0, L_0x7fabccc35fa0;  1 drivers
v0x7fabce39c1e0_0 .net *"_s22", 0 0, L_0x7fabccc36280;  1 drivers
v0x7fabce39c2d0_0 .net *"_s24", 0 0, L_0x7fabccc36160;  1 drivers
v0x7fabce39c380_0 .net *"_s26", 0 0, L_0x7fabccc363f0;  1 drivers
v0x7fabce39c430_0 .net *"_s28", 0 0, L_0x7fabccc36530;  1 drivers
v0x7fabce39c4e0_0 .net *"_s6", 0 0, L_0x7fabccc35b40;  1 drivers
v0x7fabce39c5f0_0 .net *"_s8", 0 0, L_0x7fabccc35c50;  1 drivers
v0x7fabce39c6a0_0 .net "a", 0 0, L_0x7fabccc36730;  1 drivers
v0x7fabce39c740_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce39c7d0_0 .net "aOperand", 0 0, L_0x7fabccc2b1f0;  1 drivers
v0x7fabce39c870_0 .net "adderResult", 0 0, L_0x7fabccc35a90;  1 drivers
v0x7fabce39c910_0 .net "b", 0 0, L_0x7fabccc36850;  1 drivers
v0x7fabce39c9b0_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce39ca40_0 .net "bOperand", 0 0, L_0x7fabccc2b260;  1 drivers
v0x7fabce39cbd0_0 .net "carryIn", 0 0, L_0x7fabccc35770;  1 drivers
v0x7fabce39cc60_0 .net "carryOut", 0 0, L_0x7fabccc365a0;  1 drivers
v0x7fabce39ccf0_0 .net "halfAdderResult", 0 0, L_0x7fabccc35920;  1 drivers
L_0x7fabccd63368 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce39cd80_0 .net "less", 0 0, L_0x7fabccd63368;  1 drivers
v0x7fabce39ce20_0 .net "operation", 1 0, L_0x7fabccc35810;  1 drivers
v0x7fabce39ced0_0 .net "overflow", 0 0, L_0x7fabccc36070;  1 drivers
v0x7fabce39cf70_0 .net "product", 0 0, L_0x7fabccc353d0;  1 drivers
v0x7fabce39d010_0 .var "result", 0 0;
v0x7fabce39d0b0_0 .net "set", 0 0, L_0x7fabccc361d0;  1 drivers
v0x7fabce39d150_0 .net "sum", 0 0, L_0x7fabccc354a0;  1 drivers
E_0x7fabce39aef0/0 .event edge, v0x7fabce39ced0_0, v0x7fabce39d0b0_0, v0x7fabce39d010_0, v0x7fabce39ce20_0;
E_0x7fabce39aef0/1 .event edge, v0x7fabce39cbd0_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce39cd80_0;
E_0x7fabce39aef0/2 .event edge, v0x7fabce39c910_0, v0x7fabce39c6a0_0;
E_0x7fabce39aef0 .event/or E_0x7fabce39aef0/0, E_0x7fabce39aef0/1, E_0x7fabce39aef0/2;
S_0x7fabce39d300 .scope module, "alu15" "ALU_1" 3 32, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc358b0 .functor XOR 1, L_0x7fabccc37b40, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc36ac0 .functor XOR 1, L_0x7fabccc2d890, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc36b70 .functor AND 1, L_0x7fabccc358b0, L_0x7fabccc36ac0, C4<1>, C4<1>;
L_0x7fabccc36c60 .functor OR 1, L_0x7fabccc358b0, L_0x7fabccc36ac0, C4<0>, C4<0>;
L_0x7fabccc36cf0 .functor XOR 1, L_0x7fabccc358b0, L_0x7fabccc36ac0, C4<0>, C4<0>;
L_0x7fabccc36ea0 .functor XOR 1, L_0x7fabccc36cf0, L_0x7fabccc2da30, C4<0>, C4<0>;
L_0x7fabccc36f50 .functor AND 1, L_0x7fabccc37b40, L_0x7fabccc2d890, C4<1>, C4<1>;
L_0x7fabccc37060 .functor NOT 1, L_0x7fabccc2da30, C4<0>, C4<0>, C4<0>;
L_0x7fabccc37110 .functor AND 1, L_0x7fabccc36f50, L_0x7fabccc37060, C4<1>, C4<1>;
L_0x7fabccc37250 .functor NOT 1, L_0x7fabccc37b40, C4<0>, C4<0>, C4<0>;
L_0x7fabccc372c0 .functor AND 1, L_0x7fabccc37250, L_0x7fabccc2d890, C4<1>, C4<1>;
L_0x7fabccc373b0 .functor AND 1, L_0x7fabccc372c0, L_0x7fabccc2da30, C4<1>, C4<1>;
L_0x7fabccc37480 .functor OR 1, L_0x7fabccc37110, L_0x7fabccc373b0, C4<0>, C4<0>;
L_0x7fabccc375e0 .functor BUFZ 1, L_0x7fabccc36ea0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc37690 .functor AND 1, L_0x7fabccc358b0, L_0x7fabccc36ac0, C4<1>, C4<1>;
L_0x7fabccc37570 .functor AND 1, L_0x7fabccc358b0, L_0x7fabccc2da30, C4<1>, C4<1>;
L_0x7fabccc37800 .functor OR 1, L_0x7fabccc37690, L_0x7fabccc37570, C4<0>, C4<0>;
L_0x7fabccc37940 .functor AND 1, L_0x7fabccc36ac0, L_0x7fabccc2da30, C4<1>, C4<1>;
L_0x7fabccc379b0 .functor OR 1, L_0x7fabccc37800, L_0x7fabccc37940, C4<0>, C4<0>;
v0x7fabce39d5d0_0 .net *"_s10", 0 0, L_0x7fabccc37110;  1 drivers
v0x7fabce39d690_0 .net *"_s12", 0 0, L_0x7fabccc37250;  1 drivers
v0x7fabce39d740_0 .net *"_s14", 0 0, L_0x7fabccc372c0;  1 drivers
v0x7fabce39d800_0 .net *"_s16", 0 0, L_0x7fabccc373b0;  1 drivers
v0x7fabce39d8b0_0 .net *"_s22", 0 0, L_0x7fabccc37690;  1 drivers
v0x7fabce39d9a0_0 .net *"_s24", 0 0, L_0x7fabccc37570;  1 drivers
v0x7fabce39da50_0 .net *"_s26", 0 0, L_0x7fabccc37800;  1 drivers
v0x7fabce39db00_0 .net *"_s28", 0 0, L_0x7fabccc37940;  1 drivers
v0x7fabce39dbb0_0 .net *"_s6", 0 0, L_0x7fabccc36f50;  1 drivers
v0x7fabce39dcc0_0 .net *"_s8", 0 0, L_0x7fabccc37060;  1 drivers
v0x7fabce39dd70_0 .net "a", 0 0, L_0x7fabccc37b40;  1 drivers
v0x7fabce39de10_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce39dea0_0 .net "aOperand", 0 0, L_0x7fabccc358b0;  1 drivers
v0x7fabce39df40_0 .net "adderResult", 0 0, L_0x7fabccc36ea0;  1 drivers
v0x7fabce39dfe0_0 .net "b", 0 0, L_0x7fabccc2d890;  1 drivers
v0x7fabce39e080_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce39e110_0 .net "bOperand", 0 0, L_0x7fabccc36ac0;  1 drivers
v0x7fabce39e2a0_0 .net "carryIn", 0 0, L_0x7fabccc2da30;  1 drivers
v0x7fabce39e330_0 .net "carryOut", 0 0, L_0x7fabccc379b0;  1 drivers
v0x7fabce39e3c0_0 .net "halfAdderResult", 0 0, L_0x7fabccc36cf0;  1 drivers
L_0x7fabccd633b0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce39e450_0 .net "less", 0 0, L_0x7fabccd633b0;  1 drivers
v0x7fabce39e4f0_0 .net "operation", 1 0, L_0x7fabccc368f0;  1 drivers
v0x7fabce39e5a0_0 .net "overflow", 0 0, L_0x7fabccc37480;  1 drivers
v0x7fabce39e640_0 .net "product", 0 0, L_0x7fabccc36b70;  1 drivers
v0x7fabce39e6e0_0 .var "result", 0 0;
v0x7fabce39e780_0 .net "set", 0 0, L_0x7fabccc375e0;  1 drivers
v0x7fabce39e820_0 .net "sum", 0 0, L_0x7fabccc36c60;  1 drivers
E_0x7fabce39c5c0/0 .event edge, v0x7fabce39e5a0_0, v0x7fabce39e780_0, v0x7fabce39e6e0_0, v0x7fabce39e4f0_0;
E_0x7fabce39c5c0/1 .event edge, v0x7fabce39e2a0_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce39e450_0;
E_0x7fabce39c5c0/2 .event edge, v0x7fabce39dfe0_0, v0x7fabce39dd70_0;
E_0x7fabce39c5c0 .event/or E_0x7fabce39c5c0/0, E_0x7fabce39c5c0/1, E_0x7fabce39c5c0/2;
S_0x7fabce39e9d0 .scope module, "alu16" "ALU_1" 3 33, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc36990 .functor XOR 1, L_0x7fabccc39160, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc36a00 .functor XOR 1, L_0x7fabccc39280, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc38250 .functor AND 1, L_0x7fabccc36990, L_0x7fabccc36a00, C4<1>, C4<1>;
L_0x7fabccc382c0 .functor OR 1, L_0x7fabccc36990, L_0x7fabccc36a00, C4<0>, C4<0>;
L_0x7fabccc38330 .functor XOR 1, L_0x7fabccc36990, L_0x7fabccc36a00, C4<0>, C4<0>;
L_0x7fabccc384c0 .functor XOR 1, L_0x7fabccc38330, L_0x7fabccc38060, C4<0>, C4<0>;
L_0x7fabccc38570 .functor AND 1, L_0x7fabccc39160, L_0x7fabccc39280, C4<1>, C4<1>;
L_0x7fabccc38680 .functor NOT 1, L_0x7fabccc38060, C4<0>, C4<0>, C4<0>;
L_0x7fabccc38730 .functor AND 1, L_0x7fabccc38570, L_0x7fabccc38680, C4<1>, C4<1>;
L_0x7fabccc38870 .functor NOT 1, L_0x7fabccc39160, C4<0>, C4<0>, C4<0>;
L_0x7fabccc388e0 .functor AND 1, L_0x7fabccc38870, L_0x7fabccc39280, C4<1>, C4<1>;
L_0x7fabccc389d0 .functor AND 1, L_0x7fabccc388e0, L_0x7fabccc38060, C4<1>, C4<1>;
L_0x7fabccc38aa0 .functor OR 1, L_0x7fabccc38730, L_0x7fabccc389d0, C4<0>, C4<0>;
L_0x7fabccc38c00 .functor BUFZ 1, L_0x7fabccc384c0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc38cb0 .functor AND 1, L_0x7fabccc36990, L_0x7fabccc36a00, C4<1>, C4<1>;
L_0x7fabccc38b90 .functor AND 1, L_0x7fabccc36990, L_0x7fabccc38060, C4<1>, C4<1>;
L_0x7fabccc38e20 .functor OR 1, L_0x7fabccc38cb0, L_0x7fabccc38b90, C4<0>, C4<0>;
L_0x7fabccc38f60 .functor AND 1, L_0x7fabccc36a00, L_0x7fabccc38060, C4<1>, C4<1>;
L_0x7fabccc38fd0 .functor OR 1, L_0x7fabccc38e20, L_0x7fabccc38f60, C4<0>, C4<0>;
v0x7fabce39eca0_0 .net *"_s10", 0 0, L_0x7fabccc38730;  1 drivers
v0x7fabce39ed60_0 .net *"_s12", 0 0, L_0x7fabccc38870;  1 drivers
v0x7fabce39ee10_0 .net *"_s14", 0 0, L_0x7fabccc388e0;  1 drivers
v0x7fabce39eed0_0 .net *"_s16", 0 0, L_0x7fabccc389d0;  1 drivers
v0x7fabce39ef80_0 .net *"_s22", 0 0, L_0x7fabccc38cb0;  1 drivers
v0x7fabce39f070_0 .net *"_s24", 0 0, L_0x7fabccc38b90;  1 drivers
v0x7fabce39f120_0 .net *"_s26", 0 0, L_0x7fabccc38e20;  1 drivers
v0x7fabce39f1d0_0 .net *"_s28", 0 0, L_0x7fabccc38f60;  1 drivers
v0x7fabce39f280_0 .net *"_s6", 0 0, L_0x7fabccc38570;  1 drivers
v0x7fabce39f390_0 .net *"_s8", 0 0, L_0x7fabccc38680;  1 drivers
v0x7fabce39f440_0 .net "a", 0 0, L_0x7fabccc39160;  1 drivers
v0x7fabce39f4e0_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce39f570_0 .net "aOperand", 0 0, L_0x7fabccc36990;  1 drivers
v0x7fabce39f610_0 .net "adderResult", 0 0, L_0x7fabccc384c0;  1 drivers
v0x7fabce39f6b0_0 .net "b", 0 0, L_0x7fabccc39280;  1 drivers
v0x7fabce39f750_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce394020_0 .net "bOperand", 0 0, L_0x7fabccc36a00;  1 drivers
v0x7fabce39fae0_0 .net "carryIn", 0 0, L_0x7fabccc38060;  1 drivers
v0x7fabce39fb70_0 .net "carryOut", 0 0, L_0x7fabccc38fd0;  1 drivers
v0x7fabce39fc00_0 .net "halfAdderResult", 0 0, L_0x7fabccc38330;  1 drivers
L_0x7fabccd633f8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce39fc90_0 .net "less", 0 0, L_0x7fabccd633f8;  1 drivers
v0x7fabce39fd20_0 .net "operation", 1 0, L_0x7fabccc38100;  1 drivers
v0x7fabce39fdb0_0 .net "overflow", 0 0, L_0x7fabccc38aa0;  1 drivers
v0x7fabce39fe40_0 .net "product", 0 0, L_0x7fabccc38250;  1 drivers
v0x7fabce39fed0_0 .var "result", 0 0;
v0x7fabce39ff60_0 .net "set", 0 0, L_0x7fabccc38c00;  1 drivers
v0x7fabce39fff0_0 .net "sum", 0 0, L_0x7fabccc382c0;  1 drivers
E_0x7fabce39dc90/0 .event edge, v0x7fabce39fdb0_0, v0x7fabce39ff60_0, v0x7fabce39fed0_0, v0x7fabce39fd20_0;
E_0x7fabce39dc90/1 .event edge, v0x7fabce39fae0_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce39fc90_0;
E_0x7fabce39dc90/2 .event edge, v0x7fabce39f6b0_0, v0x7fabce39f440_0;
E_0x7fabce39dc90 .event/or E_0x7fabce39dc90/0, E_0x7fabce39dc90/1, E_0x7fabce39dc90/2;
S_0x7fabce3a01a0 .scope module, "alu17" "ALU_1" 3 34, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc381a0 .functor XOR 1, L_0x7fabccc3a570, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc39530 .functor XOR 1, L_0x7fabccc3a690, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc395a0 .functor AND 1, L_0x7fabccc381a0, L_0x7fabccc39530, C4<1>, C4<1>;
L_0x7fabccc39690 .functor OR 1, L_0x7fabccc381a0, L_0x7fabccc39530, C4<0>, C4<0>;
L_0x7fabccc39720 .functor XOR 1, L_0x7fabccc381a0, L_0x7fabccc39530, C4<0>, C4<0>;
L_0x7fabccc398d0 .functor XOR 1, L_0x7fabccc39720, L_0x7fabccc39320, C4<0>, C4<0>;
L_0x7fabccc39980 .functor AND 1, L_0x7fabccc3a570, L_0x7fabccc3a690, C4<1>, C4<1>;
L_0x7fabccc39a90 .functor NOT 1, L_0x7fabccc39320, C4<0>, C4<0>, C4<0>;
L_0x7fabccc39b40 .functor AND 1, L_0x7fabccc39980, L_0x7fabccc39a90, C4<1>, C4<1>;
L_0x7fabccc39c80 .functor NOT 1, L_0x7fabccc3a570, C4<0>, C4<0>, C4<0>;
L_0x7fabccc39cf0 .functor AND 1, L_0x7fabccc39c80, L_0x7fabccc3a690, C4<1>, C4<1>;
L_0x7fabccc39de0 .functor AND 1, L_0x7fabccc39cf0, L_0x7fabccc39320, C4<1>, C4<1>;
L_0x7fabccc39eb0 .functor OR 1, L_0x7fabccc39b40, L_0x7fabccc39de0, C4<0>, C4<0>;
L_0x7fabccc3a010 .functor BUFZ 1, L_0x7fabccc398d0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc3a0c0 .functor AND 1, L_0x7fabccc381a0, L_0x7fabccc39530, C4<1>, C4<1>;
L_0x7fabccc39fa0 .functor AND 1, L_0x7fabccc381a0, L_0x7fabccc39320, C4<1>, C4<1>;
L_0x7fabccc3a230 .functor OR 1, L_0x7fabccc3a0c0, L_0x7fabccc39fa0, C4<0>, C4<0>;
L_0x7fabccc3a370 .functor AND 1, L_0x7fabccc39530, L_0x7fabccc39320, C4<1>, C4<1>;
L_0x7fabccc3a3e0 .functor OR 1, L_0x7fabccc3a230, L_0x7fabccc3a370, C4<0>, C4<0>;
v0x7fabce3a0570_0 .net *"_s10", 0 0, L_0x7fabccc39b40;  1 drivers
v0x7fabce3a0630_0 .net *"_s12", 0 0, L_0x7fabccc39c80;  1 drivers
v0x7fabce3a06d0_0 .net *"_s14", 0 0, L_0x7fabccc39cf0;  1 drivers
v0x7fabce3a0760_0 .net *"_s16", 0 0, L_0x7fabccc39de0;  1 drivers
v0x7fabce3a07f0_0 .net *"_s22", 0 0, L_0x7fabccc3a0c0;  1 drivers
v0x7fabce3a08c0_0 .net *"_s24", 0 0, L_0x7fabccc39fa0;  1 drivers
v0x7fabce3a0970_0 .net *"_s26", 0 0, L_0x7fabccc3a230;  1 drivers
v0x7fabce3a0a20_0 .net *"_s28", 0 0, L_0x7fabccc3a370;  1 drivers
v0x7fabce3a0ad0_0 .net *"_s6", 0 0, L_0x7fabccc39980;  1 drivers
v0x7fabce3a0be0_0 .net *"_s8", 0 0, L_0x7fabccc39a90;  1 drivers
v0x7fabce3a0c90_0 .net "a", 0 0, L_0x7fabccc3a570;  1 drivers
v0x7fabce3a0d30_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce395540_0 .net "aOperand", 0 0, L_0x7fabccc381a0;  1 drivers
v0x7fabce3a0fc0_0 .net "adderResult", 0 0, L_0x7fabccc398d0;  1 drivers
v0x7fabce3a1050_0 .net "b", 0 0, L_0x7fabccc3a690;  1 drivers
v0x7fabce3a10e0_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3a1170_0 .net "bOperand", 0 0, L_0x7fabccc39530;  1 drivers
v0x7fabce3a1300_0 .net "carryIn", 0 0, L_0x7fabccc39320;  1 drivers
v0x7fabce3a1390_0 .net "carryOut", 0 0, L_0x7fabccc3a3e0;  1 drivers
v0x7fabce3a1420_0 .net "halfAdderResult", 0 0, L_0x7fabccc39720;  1 drivers
L_0x7fabccd63440 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3a14b0_0 .net "less", 0 0, L_0x7fabccd63440;  1 drivers
v0x7fabce3a1540_0 .net "operation", 1 0, L_0x7fabccc303a0;  1 drivers
v0x7fabce3a15d0_0 .net "overflow", 0 0, L_0x7fabccc39eb0;  1 drivers
v0x7fabce3a1660_0 .net "product", 0 0, L_0x7fabccc395a0;  1 drivers
v0x7fabce3a1700_0 .var "result", 0 0;
v0x7fabce3a17a0_0 .net "set", 0 0, L_0x7fabccc3a010;  1 drivers
v0x7fabce3a1840_0 .net "sum", 0 0, L_0x7fabccc39690;  1 drivers
E_0x7fabce39f360/0 .event edge, v0x7fabce3a15d0_0, v0x7fabce3a17a0_0, v0x7fabce3a1700_0, v0x7fabce3a1540_0;
E_0x7fabce39f360/1 .event edge, v0x7fabce3a1300_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3a14b0_0;
E_0x7fabce39f360/2 .event edge, v0x7fabce3a1050_0, v0x7fabce3a0c90_0;
E_0x7fabce39f360 .event/or E_0x7fabce39f360/0, E_0x7fabce39f360/1, E_0x7fabce39f360/2;
S_0x7fabce3a19f0 .scope module, "alu18" "ALU_1" 3 35, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc393c0 .functor XOR 1, L_0x7fabccc3ba80, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc39430 .functor XOR 1, L_0x7fabccc3bba0, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc394a0 .functor AND 1, L_0x7fabccc393c0, L_0x7fabccc39430, C4<1>, C4<1>;
L_0x7fabccc3a770 .functor OR 1, L_0x7fabccc393c0, L_0x7fabccc39430, C4<0>, C4<0>;
L_0x7fabccc3a800 .functor XOR 1, L_0x7fabccc393c0, L_0x7fabccc39430, C4<0>, C4<0>;
L_0x7fabccc3ae00 .functor XOR 1, L_0x7fabccc3a800, L_0x7fabccc3ac50, C4<0>, C4<0>;
L_0x7fabccc3ae70 .functor AND 1, L_0x7fabccc3ba80, L_0x7fabccc3bba0, C4<1>, C4<1>;
L_0x7fabccc3afa0 .functor NOT 1, L_0x7fabccc3ac50, C4<0>, C4<0>, C4<0>;
L_0x7fabccc3b050 .functor AND 1, L_0x7fabccc3ae70, L_0x7fabccc3afa0, C4<1>, C4<1>;
L_0x7fabccc3b190 .functor NOT 1, L_0x7fabccc3ba80, C4<0>, C4<0>, C4<0>;
L_0x7fabccc3b200 .functor AND 1, L_0x7fabccc3b190, L_0x7fabccc3bba0, C4<1>, C4<1>;
L_0x7fabccc3b2f0 .functor AND 1, L_0x7fabccc3b200, L_0x7fabccc3ac50, C4<1>, C4<1>;
L_0x7fabccc3b3c0 .functor OR 1, L_0x7fabccc3b050, L_0x7fabccc3b2f0, C4<0>, C4<0>;
L_0x7fabccc3b520 .functor BUFZ 1, L_0x7fabccc3ae00, C4<0>, C4<0>, C4<0>;
L_0x7fabccc3b5d0 .functor AND 1, L_0x7fabccc393c0, L_0x7fabccc39430, C4<1>, C4<1>;
L_0x7fabccc3b4b0 .functor AND 1, L_0x7fabccc393c0, L_0x7fabccc3ac50, C4<1>, C4<1>;
L_0x7fabccc3b740 .functor OR 1, L_0x7fabccc3b5d0, L_0x7fabccc3b4b0, C4<0>, C4<0>;
L_0x7fabccc3b880 .functor AND 1, L_0x7fabccc39430, L_0x7fabccc3ac50, C4<1>, C4<1>;
L_0x7fabccc3b8f0 .functor OR 1, L_0x7fabccc3b740, L_0x7fabccc3b880, C4<0>, C4<0>;
v0x7fabce3a1cc0_0 .net *"_s10", 0 0, L_0x7fabccc3b050;  1 drivers
v0x7fabce3a1d80_0 .net *"_s12", 0 0, L_0x7fabccc3b190;  1 drivers
v0x7fabce3a1e30_0 .net *"_s14", 0 0, L_0x7fabccc3b200;  1 drivers
v0x7fabce3a1ef0_0 .net *"_s16", 0 0, L_0x7fabccc3b2f0;  1 drivers
v0x7fabce3a1fa0_0 .net *"_s22", 0 0, L_0x7fabccc3b5d0;  1 drivers
v0x7fabce3a2090_0 .net *"_s24", 0 0, L_0x7fabccc3b4b0;  1 drivers
v0x7fabce3a2140_0 .net *"_s26", 0 0, L_0x7fabccc3b740;  1 drivers
v0x7fabce3a21f0_0 .net *"_s28", 0 0, L_0x7fabccc3b880;  1 drivers
v0x7fabce3a22a0_0 .net *"_s6", 0 0, L_0x7fabccc3ae70;  1 drivers
v0x7fabce3a23b0_0 .net *"_s8", 0 0, L_0x7fabccc3afa0;  1 drivers
v0x7fabce3a2460_0 .net "a", 0 0, L_0x7fabccc3ba80;  1 drivers
v0x7fabce3a2500_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3a2590_0 .net "aOperand", 0 0, L_0x7fabccc393c0;  1 drivers
v0x7fabce3a2630_0 .net "adderResult", 0 0, L_0x7fabccc3ae00;  1 drivers
v0x7fabce3a26d0_0 .net "b", 0 0, L_0x7fabccc3bba0;  1 drivers
v0x7fabce3a2770_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3a2800_0 .net "bOperand", 0 0, L_0x7fabccc39430;  1 drivers
v0x7fabce3a2990_0 .net "carryIn", 0 0, L_0x7fabccc3ac50;  1 drivers
v0x7fabce3a2a20_0 .net "carryOut", 0 0, L_0x7fabccc3b8f0;  1 drivers
v0x7fabce3a2ab0_0 .net "halfAdderResult", 0 0, L_0x7fabccc3a800;  1 drivers
L_0x7fabccd63488 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3a2b40_0 .net "less", 0 0, L_0x7fabccd63488;  1 drivers
v0x7fabce3a2be0_0 .net "operation", 1 0, L_0x7fabccc3be80;  1 drivers
v0x7fabce3a2c90_0 .net "overflow", 0 0, L_0x7fabccc3b3c0;  1 drivers
v0x7fabce3a2d30_0 .net "product", 0 0, L_0x7fabccc394a0;  1 drivers
v0x7fabce3a2dd0_0 .var "result", 0 0;
v0x7fabce3a2e70_0 .net "set", 0 0, L_0x7fabccc3b520;  1 drivers
v0x7fabce3a2f10_0 .net "sum", 0 0, L_0x7fabccc3a770;  1 drivers
E_0x7fabce3a0bb0/0 .event edge, v0x7fabce3a2c90_0, v0x7fabce3a2e70_0, v0x7fabce3a2dd0_0, v0x7fabce3a2be0_0;
E_0x7fabce3a0bb0/1 .event edge, v0x7fabce3a2990_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3a2b40_0;
E_0x7fabce3a0bb0/2 .event edge, v0x7fabce3a26d0_0, v0x7fabce3a2460_0;
E_0x7fabce3a0bb0 .event/or E_0x7fabce3a0bb0/0, E_0x7fabce3a0bb0/1, E_0x7fabce3a0bb0/2;
S_0x7fabce3a30c0 .scope module, "alu19" "ALU_1" 3 36, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc3af20 .functor XOR 1, L_0x7fabccc3cf30, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc3ad10 .functor XOR 1, L_0x7fabccc3d050, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc3bca0 .functor AND 1, L_0x7fabccc3af20, L_0x7fabccc3ad10, C4<1>, C4<1>;
L_0x7fabccc3bd90 .functor OR 1, L_0x7fabccc3af20, L_0x7fabccc3ad10, C4<0>, C4<0>;
L_0x7fabccc3be00 .functor XOR 1, L_0x7fabccc3af20, L_0x7fabccc3ad10, C4<0>, C4<0>;
L_0x7fabccc3c290 .functor XOR 1, L_0x7fabccc3be00, L_0x7fabccc3bf20, C4<0>, C4<0>;
L_0x7fabccc3c340 .functor AND 1, L_0x7fabccc3cf30, L_0x7fabccc3d050, C4<1>, C4<1>;
L_0x7fabccc3c450 .functor NOT 1, L_0x7fabccc3bf20, C4<0>, C4<0>, C4<0>;
L_0x7fabccc3c500 .functor AND 1, L_0x7fabccc3c340, L_0x7fabccc3c450, C4<1>, C4<1>;
L_0x7fabccc3c640 .functor NOT 1, L_0x7fabccc3cf30, C4<0>, C4<0>, C4<0>;
L_0x7fabccc3c6b0 .functor AND 1, L_0x7fabccc3c640, L_0x7fabccc3d050, C4<1>, C4<1>;
L_0x7fabccc3c7a0 .functor AND 1, L_0x7fabccc3c6b0, L_0x7fabccc3bf20, C4<1>, C4<1>;
L_0x7fabccc3c870 .functor OR 1, L_0x7fabccc3c500, L_0x7fabccc3c7a0, C4<0>, C4<0>;
L_0x7fabccc3c9d0 .functor BUFZ 1, L_0x7fabccc3c290, C4<0>, C4<0>, C4<0>;
L_0x7fabccc3ca80 .functor AND 1, L_0x7fabccc3af20, L_0x7fabccc3ad10, C4<1>, C4<1>;
L_0x7fabccc3c960 .functor AND 1, L_0x7fabccc3af20, L_0x7fabccc3bf20, C4<1>, C4<1>;
L_0x7fabccc3cbf0 .functor OR 1, L_0x7fabccc3ca80, L_0x7fabccc3c960, C4<0>, C4<0>;
L_0x7fabccc3cd30 .functor AND 1, L_0x7fabccc3ad10, L_0x7fabccc3bf20, C4<1>, C4<1>;
L_0x7fabccc3cda0 .functor OR 1, L_0x7fabccc3cbf0, L_0x7fabccc3cd30, C4<0>, C4<0>;
v0x7fabce3a3390_0 .net *"_s10", 0 0, L_0x7fabccc3c500;  1 drivers
v0x7fabce3a3450_0 .net *"_s12", 0 0, L_0x7fabccc3c640;  1 drivers
v0x7fabce3a3500_0 .net *"_s14", 0 0, L_0x7fabccc3c6b0;  1 drivers
v0x7fabce3a35c0_0 .net *"_s16", 0 0, L_0x7fabccc3c7a0;  1 drivers
v0x7fabce3a3670_0 .net *"_s22", 0 0, L_0x7fabccc3ca80;  1 drivers
v0x7fabce3a3760_0 .net *"_s24", 0 0, L_0x7fabccc3c960;  1 drivers
v0x7fabce3a3810_0 .net *"_s26", 0 0, L_0x7fabccc3cbf0;  1 drivers
v0x7fabce3a38c0_0 .net *"_s28", 0 0, L_0x7fabccc3cd30;  1 drivers
v0x7fabce3a3970_0 .net *"_s6", 0 0, L_0x7fabccc3c340;  1 drivers
v0x7fabce3a3a80_0 .net *"_s8", 0 0, L_0x7fabccc3c450;  1 drivers
v0x7fabce3a3b30_0 .net "a", 0 0, L_0x7fabccc3cf30;  1 drivers
v0x7fabce3a3bd0_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3a3c60_0 .net "aOperand", 0 0, L_0x7fabccc3af20;  1 drivers
v0x7fabce3a3d00_0 .net "adderResult", 0 0, L_0x7fabccc3c290;  1 drivers
v0x7fabce3a3da0_0 .net "b", 0 0, L_0x7fabccc3d050;  1 drivers
v0x7fabce3a3e40_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3a3ed0_0 .net "bOperand", 0 0, L_0x7fabccc3ad10;  1 drivers
v0x7fabce3a4060_0 .net "carryIn", 0 0, L_0x7fabccc3bf20;  1 drivers
v0x7fabce3a40f0_0 .net "carryOut", 0 0, L_0x7fabccc3cda0;  1 drivers
v0x7fabce3a4180_0 .net "halfAdderResult", 0 0, L_0x7fabccc3be00;  1 drivers
L_0x7fabccd634d0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3a4210_0 .net "less", 0 0, L_0x7fabccd634d0;  1 drivers
v0x7fabce3a42b0_0 .net "operation", 1 0, L_0x7fabccc3bfc0;  1 drivers
v0x7fabce3a4360_0 .net "overflow", 0 0, L_0x7fabccc3c870;  1 drivers
v0x7fabce3a4400_0 .net "product", 0 0, L_0x7fabccc3bca0;  1 drivers
v0x7fabce3a44a0_0 .var "result", 0 0;
v0x7fabce3a4540_0 .net "set", 0 0, L_0x7fabccc3c9d0;  1 drivers
v0x7fabce3a45e0_0 .net "sum", 0 0, L_0x7fabccc3bd90;  1 drivers
E_0x7fabce3a2380/0 .event edge, v0x7fabce3a4360_0, v0x7fabce3a4540_0, v0x7fabce3a44a0_0, v0x7fabce3a42b0_0;
E_0x7fabce3a2380/1 .event edge, v0x7fabce3a4060_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3a4210_0;
E_0x7fabce3a2380/2 .event edge, v0x7fabce3a3da0_0, v0x7fabce3a3b30_0;
E_0x7fabce3a2380 .event/or E_0x7fabce3a2380/0, E_0x7fabce3a2380/1, E_0x7fabce3a2380/2;
S_0x7fabce3a4790 .scope module, "alu20" "ALU_1" 3 37, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc3c060 .functor XOR 1, L_0x7fabccc3e350, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc3c0d0 .functor XOR 1, L_0x7fabccc3e470, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc3d380 .functor AND 1, L_0x7fabccc3c060, L_0x7fabccc3c0d0, C4<1>, C4<1>;
L_0x7fabccc3d470 .functor OR 1, L_0x7fabccc3c060, L_0x7fabccc3c0d0, C4<0>, C4<0>;
L_0x7fabccc3d500 .functor XOR 1, L_0x7fabccc3c060, L_0x7fabccc3c0d0, C4<0>, C4<0>;
L_0x7fabccc3d6b0 .functor XOR 1, L_0x7fabccc3d500, L_0x7fabccc3d0f0, C4<0>, C4<0>;
L_0x7fabccc3d720 .functor AND 1, L_0x7fabccc3e350, L_0x7fabccc3e470, C4<1>, C4<1>;
L_0x7fabccc3d890 .functor NOT 1, L_0x7fabccc3d0f0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc3d940 .functor AND 1, L_0x7fabccc3d720, L_0x7fabccc3d890, C4<1>, C4<1>;
L_0x7fabccc3da80 .functor NOT 1, L_0x7fabccc3e350, C4<0>, C4<0>, C4<0>;
L_0x7fabccc3daf0 .functor AND 1, L_0x7fabccc3da80, L_0x7fabccc3e470, C4<1>, C4<1>;
L_0x7fabccc3dbc0 .functor AND 1, L_0x7fabccc3daf0, L_0x7fabccc3d0f0, C4<1>, C4<1>;
L_0x7fabccc3dc90 .functor OR 1, L_0x7fabccc3d940, L_0x7fabccc3dbc0, C4<0>, C4<0>;
L_0x7fabccc3ddf0 .functor BUFZ 1, L_0x7fabccc3d6b0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc3dea0 .functor AND 1, L_0x7fabccc3c060, L_0x7fabccc3c0d0, C4<1>, C4<1>;
L_0x7fabccc3dd80 .functor AND 1, L_0x7fabccc3c060, L_0x7fabccc3d0f0, C4<1>, C4<1>;
L_0x7fabccc3e010 .functor OR 1, L_0x7fabccc3dea0, L_0x7fabccc3dd80, C4<0>, C4<0>;
L_0x7fabccc3e150 .functor AND 1, L_0x7fabccc3c0d0, L_0x7fabccc3d0f0, C4<1>, C4<1>;
L_0x7fabccc3e1c0 .functor OR 1, L_0x7fabccc3e010, L_0x7fabccc3e150, C4<0>, C4<0>;
v0x7fabce3a4a60_0 .net *"_s10", 0 0, L_0x7fabccc3d940;  1 drivers
v0x7fabce3a4b20_0 .net *"_s12", 0 0, L_0x7fabccc3da80;  1 drivers
v0x7fabce3a4bd0_0 .net *"_s14", 0 0, L_0x7fabccc3daf0;  1 drivers
v0x7fabce3a4c90_0 .net *"_s16", 0 0, L_0x7fabccc3dbc0;  1 drivers
v0x7fabce3a4d40_0 .net *"_s22", 0 0, L_0x7fabccc3dea0;  1 drivers
v0x7fabce3a4e30_0 .net *"_s24", 0 0, L_0x7fabccc3dd80;  1 drivers
v0x7fabce3a4ee0_0 .net *"_s26", 0 0, L_0x7fabccc3e010;  1 drivers
v0x7fabce3a4f90_0 .net *"_s28", 0 0, L_0x7fabccc3e150;  1 drivers
v0x7fabce3a5040_0 .net *"_s6", 0 0, L_0x7fabccc3d720;  1 drivers
v0x7fabce3a5150_0 .net *"_s8", 0 0, L_0x7fabccc3d890;  1 drivers
v0x7fabce3a5200_0 .net "a", 0 0, L_0x7fabccc3e350;  1 drivers
v0x7fabce3a52a0_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3a5330_0 .net "aOperand", 0 0, L_0x7fabccc3c060;  1 drivers
v0x7fabce3a53d0_0 .net "adderResult", 0 0, L_0x7fabccc3d6b0;  1 drivers
v0x7fabce3a5470_0 .net "b", 0 0, L_0x7fabccc3e470;  1 drivers
v0x7fabce3a5510_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3a55a0_0 .net "bOperand", 0 0, L_0x7fabccc3c0d0;  1 drivers
v0x7fabce3a5730_0 .net "carryIn", 0 0, L_0x7fabccc3d0f0;  1 drivers
v0x7fabce3a57c0_0 .net "carryOut", 0 0, L_0x7fabccc3e1c0;  1 drivers
v0x7fabce3a5850_0 .net "halfAdderResult", 0 0, L_0x7fabccc3d500;  1 drivers
L_0x7fabccd63518 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3a58e0_0 .net "less", 0 0, L_0x7fabccd63518;  1 drivers
v0x7fabce3a5980_0 .net "operation", 1 0, L_0x7fabccc3d190;  1 drivers
v0x7fabce3a5a30_0 .net "overflow", 0 0, L_0x7fabccc3dc90;  1 drivers
v0x7fabce3a5ad0_0 .net "product", 0 0, L_0x7fabccc3d380;  1 drivers
v0x7fabce3a5b70_0 .var "result", 0 0;
v0x7fabce3a5c10_0 .net "set", 0 0, L_0x7fabccc3ddf0;  1 drivers
v0x7fabce3a5cb0_0 .net "sum", 0 0, L_0x7fabccc3d470;  1 drivers
E_0x7fabce3a3a50/0 .event edge, v0x7fabce3a5a30_0, v0x7fabce3a5c10_0, v0x7fabce3a5b70_0, v0x7fabce3a5980_0;
E_0x7fabce3a3a50/1 .event edge, v0x7fabce3a5730_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3a58e0_0;
E_0x7fabce3a3a50/2 .event edge, v0x7fabce3a5470_0, v0x7fabce3a5200_0;
E_0x7fabce3a3a50 .event/or E_0x7fabce3a3a50/0, E_0x7fabce3a3a50/1, E_0x7fabce3a3a50/2;
S_0x7fabce3a5e60 .scope module, "alu21" "ALU_1" 3 38, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc3d230 .functor XOR 1, L_0x7fabccc3f770, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc3d2a0 .functor XOR 1, L_0x7fabccc3f890, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc3e7a0 .functor AND 1, L_0x7fabccc3d230, L_0x7fabccc3d2a0, C4<1>, C4<1>;
L_0x7fabccc3e890 .functor OR 1, L_0x7fabccc3d230, L_0x7fabccc3d2a0, C4<0>, C4<0>;
L_0x7fabccc3e920 .functor XOR 1, L_0x7fabccc3d230, L_0x7fabccc3d2a0, C4<0>, C4<0>;
L_0x7fabccc3ead0 .functor XOR 1, L_0x7fabccc3e920, L_0x7fabccc3e510, C4<0>, C4<0>;
L_0x7fabccc3eb80 .functor AND 1, L_0x7fabccc3f770, L_0x7fabccc3f890, C4<1>, C4<1>;
L_0x7fabccc3ec90 .functor NOT 1, L_0x7fabccc3e510, C4<0>, C4<0>, C4<0>;
L_0x7fabccc3ed40 .functor AND 1, L_0x7fabccc3eb80, L_0x7fabccc3ec90, C4<1>, C4<1>;
L_0x7fabccc3ee80 .functor NOT 1, L_0x7fabccc3f770, C4<0>, C4<0>, C4<0>;
L_0x7fabccc3eef0 .functor AND 1, L_0x7fabccc3ee80, L_0x7fabccc3f890, C4<1>, C4<1>;
L_0x7fabccc3efe0 .functor AND 1, L_0x7fabccc3eef0, L_0x7fabccc3e510, C4<1>, C4<1>;
L_0x7fabccc3f0b0 .functor OR 1, L_0x7fabccc3ed40, L_0x7fabccc3efe0, C4<0>, C4<0>;
L_0x7fabccc3f210 .functor BUFZ 1, L_0x7fabccc3ead0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc3f2c0 .functor AND 1, L_0x7fabccc3d230, L_0x7fabccc3d2a0, C4<1>, C4<1>;
L_0x7fabccc3f1a0 .functor AND 1, L_0x7fabccc3d230, L_0x7fabccc3e510, C4<1>, C4<1>;
L_0x7fabccc3f430 .functor OR 1, L_0x7fabccc3f2c0, L_0x7fabccc3f1a0, C4<0>, C4<0>;
L_0x7fabccc3f570 .functor AND 1, L_0x7fabccc3d2a0, L_0x7fabccc3e510, C4<1>, C4<1>;
L_0x7fabccc3f5e0 .functor OR 1, L_0x7fabccc3f430, L_0x7fabccc3f570, C4<0>, C4<0>;
v0x7fabce3a6130_0 .net *"_s10", 0 0, L_0x7fabccc3ed40;  1 drivers
v0x7fabce3a61f0_0 .net *"_s12", 0 0, L_0x7fabccc3ee80;  1 drivers
v0x7fabce3a62a0_0 .net *"_s14", 0 0, L_0x7fabccc3eef0;  1 drivers
v0x7fabce3a6360_0 .net *"_s16", 0 0, L_0x7fabccc3efe0;  1 drivers
v0x7fabce3a6410_0 .net *"_s22", 0 0, L_0x7fabccc3f2c0;  1 drivers
v0x7fabce3a6500_0 .net *"_s24", 0 0, L_0x7fabccc3f1a0;  1 drivers
v0x7fabce3a65b0_0 .net *"_s26", 0 0, L_0x7fabccc3f430;  1 drivers
v0x7fabce3a6660_0 .net *"_s28", 0 0, L_0x7fabccc3f570;  1 drivers
v0x7fabce3a6710_0 .net *"_s6", 0 0, L_0x7fabccc3eb80;  1 drivers
v0x7fabce3a6820_0 .net *"_s8", 0 0, L_0x7fabccc3ec90;  1 drivers
v0x7fabce3a68d0_0 .net "a", 0 0, L_0x7fabccc3f770;  1 drivers
v0x7fabce3a6970_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3a6a00_0 .net "aOperand", 0 0, L_0x7fabccc3d230;  1 drivers
v0x7fabce3a6aa0_0 .net "adderResult", 0 0, L_0x7fabccc3ead0;  1 drivers
v0x7fabce3a6b40_0 .net "b", 0 0, L_0x7fabccc3f890;  1 drivers
v0x7fabce3a6be0_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3a6c70_0 .net "bOperand", 0 0, L_0x7fabccc3d2a0;  1 drivers
v0x7fabce3a6e00_0 .net "carryIn", 0 0, L_0x7fabccc3e510;  1 drivers
v0x7fabce3a6e90_0 .net "carryOut", 0 0, L_0x7fabccc3f5e0;  1 drivers
v0x7fabce3a6f20_0 .net "halfAdderResult", 0 0, L_0x7fabccc3e920;  1 drivers
L_0x7fabccd63560 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3a6fb0_0 .net "less", 0 0, L_0x7fabccd63560;  1 drivers
v0x7fabce3a7050_0 .net "operation", 1 0, L_0x7fabccc3e5b0;  1 drivers
v0x7fabce3a7100_0 .net "overflow", 0 0, L_0x7fabccc3f0b0;  1 drivers
v0x7fabce3a71a0_0 .net "product", 0 0, L_0x7fabccc3e7a0;  1 drivers
v0x7fabce3a7240_0 .var "result", 0 0;
v0x7fabce3a72e0_0 .net "set", 0 0, L_0x7fabccc3f210;  1 drivers
v0x7fabce3a7380_0 .net "sum", 0 0, L_0x7fabccc3e890;  1 drivers
E_0x7fabce3a5120/0 .event edge, v0x7fabce3a7100_0, v0x7fabce3a72e0_0, v0x7fabce3a7240_0, v0x7fabce3a7050_0;
E_0x7fabce3a5120/1 .event edge, v0x7fabce3a6e00_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3a6fb0_0;
E_0x7fabce3a5120/2 .event edge, v0x7fabce3a6b40_0, v0x7fabce3a68d0_0;
E_0x7fabce3a5120 .event/or E_0x7fabce3a5120/0, E_0x7fabce3a5120/1, E_0x7fabce3a5120/2;
S_0x7fabce3a7530 .scope module, "alu22" "ALU_1" 3 39, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc3e650 .functor XOR 1, L_0x7fabccc40b90, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc3e6c0 .functor XOR 1, L_0x7fabccc40cb0, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc3fbe0 .functor AND 1, L_0x7fabccc3e650, L_0x7fabccc3e6c0, C4<1>, C4<1>;
L_0x7fabccc3fcb0 .functor OR 1, L_0x7fabccc3e650, L_0x7fabccc3e6c0, C4<0>, C4<0>;
L_0x7fabccc3fd40 .functor XOR 1, L_0x7fabccc3e650, L_0x7fabccc3e6c0, C4<0>, C4<0>;
L_0x7fabccc3fef0 .functor XOR 1, L_0x7fabccc3fd40, L_0x7fabccc3f930, C4<0>, C4<0>;
L_0x7fabccc3ffa0 .functor AND 1, L_0x7fabccc40b90, L_0x7fabccc40cb0, C4<1>, C4<1>;
L_0x7fabccc400b0 .functor NOT 1, L_0x7fabccc3f930, C4<0>, C4<0>, C4<0>;
L_0x7fabccc40160 .functor AND 1, L_0x7fabccc3ffa0, L_0x7fabccc400b0, C4<1>, C4<1>;
L_0x7fabccc402a0 .functor NOT 1, L_0x7fabccc40b90, C4<0>, C4<0>, C4<0>;
L_0x7fabccc40310 .functor AND 1, L_0x7fabccc402a0, L_0x7fabccc40cb0, C4<1>, C4<1>;
L_0x7fabccc40400 .functor AND 1, L_0x7fabccc40310, L_0x7fabccc3f930, C4<1>, C4<1>;
L_0x7fabccc404d0 .functor OR 1, L_0x7fabccc40160, L_0x7fabccc40400, C4<0>, C4<0>;
L_0x7fabccc40630 .functor BUFZ 1, L_0x7fabccc3fef0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc406e0 .functor AND 1, L_0x7fabccc3e650, L_0x7fabccc3e6c0, C4<1>, C4<1>;
L_0x7fabccc405c0 .functor AND 1, L_0x7fabccc3e650, L_0x7fabccc3f930, C4<1>, C4<1>;
L_0x7fabccc40850 .functor OR 1, L_0x7fabccc406e0, L_0x7fabccc405c0, C4<0>, C4<0>;
L_0x7fabccc40990 .functor AND 1, L_0x7fabccc3e6c0, L_0x7fabccc3f930, C4<1>, C4<1>;
L_0x7fabccc40a00 .functor OR 1, L_0x7fabccc40850, L_0x7fabccc40990, C4<0>, C4<0>;
v0x7fabce3a7800_0 .net *"_s10", 0 0, L_0x7fabccc40160;  1 drivers
v0x7fabce3a78c0_0 .net *"_s12", 0 0, L_0x7fabccc402a0;  1 drivers
v0x7fabce3a7970_0 .net *"_s14", 0 0, L_0x7fabccc40310;  1 drivers
v0x7fabce3a7a30_0 .net *"_s16", 0 0, L_0x7fabccc40400;  1 drivers
v0x7fabce3a7ae0_0 .net *"_s22", 0 0, L_0x7fabccc406e0;  1 drivers
v0x7fabce3a7bd0_0 .net *"_s24", 0 0, L_0x7fabccc405c0;  1 drivers
v0x7fabce3a7c80_0 .net *"_s26", 0 0, L_0x7fabccc40850;  1 drivers
v0x7fabce3a7d30_0 .net *"_s28", 0 0, L_0x7fabccc40990;  1 drivers
v0x7fabce3a7de0_0 .net *"_s6", 0 0, L_0x7fabccc3ffa0;  1 drivers
v0x7fabce3a7ef0_0 .net *"_s8", 0 0, L_0x7fabccc400b0;  1 drivers
v0x7fabce3a7fa0_0 .net "a", 0 0, L_0x7fabccc40b90;  1 drivers
v0x7fabce3a8040_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3a80d0_0 .net "aOperand", 0 0, L_0x7fabccc3e650;  1 drivers
v0x7fabce3a8170_0 .net "adderResult", 0 0, L_0x7fabccc3fef0;  1 drivers
v0x7fabce3a8210_0 .net "b", 0 0, L_0x7fabccc40cb0;  1 drivers
v0x7fabce3a82b0_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3a8340_0 .net "bOperand", 0 0, L_0x7fabccc3e6c0;  1 drivers
v0x7fabce3a84d0_0 .net "carryIn", 0 0, L_0x7fabccc3f930;  1 drivers
v0x7fabce3a8560_0 .net "carryOut", 0 0, L_0x7fabccc40a00;  1 drivers
v0x7fabce3a85f0_0 .net "halfAdderResult", 0 0, L_0x7fabccc3fd40;  1 drivers
L_0x7fabccd635a8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3a8680_0 .net "less", 0 0, L_0x7fabccd635a8;  1 drivers
v0x7fabce3a8720_0 .net "operation", 1 0, L_0x7fabccc3f9d0;  1 drivers
v0x7fabce3a87d0_0 .net "overflow", 0 0, L_0x7fabccc404d0;  1 drivers
v0x7fabce3a8870_0 .net "product", 0 0, L_0x7fabccc3fbe0;  1 drivers
v0x7fabce3a8910_0 .var "result", 0 0;
v0x7fabce3a89b0_0 .net "set", 0 0, L_0x7fabccc40630;  1 drivers
v0x7fabce3a8a50_0 .net "sum", 0 0, L_0x7fabccc3fcb0;  1 drivers
E_0x7fabce3a67f0/0 .event edge, v0x7fabce3a87d0_0, v0x7fabce3a89b0_0, v0x7fabce3a8910_0, v0x7fabce3a8720_0;
E_0x7fabce3a67f0/1 .event edge, v0x7fabce3a84d0_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3a8680_0;
E_0x7fabce3a67f0/2 .event edge, v0x7fabce3a8210_0, v0x7fabce3a7fa0_0;
E_0x7fabce3a67f0 .event/or E_0x7fabce3a67f0/0, E_0x7fabce3a67f0/1, E_0x7fabce3a67f0/2;
S_0x7fabce3a8c00 .scope module, "alu23" "ALU_1" 3 40, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc3fa70 .functor XOR 1, L_0x7fabccc41fb0, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc3fae0 .functor XOR 1, L_0x7fabccc420d0, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc41020 .functor AND 1, L_0x7fabccc3fa70, L_0x7fabccc3fae0, C4<1>, C4<1>;
L_0x7fabccc410d0 .functor OR 1, L_0x7fabccc3fa70, L_0x7fabccc3fae0, C4<0>, C4<0>;
L_0x7fabccc41160 .functor XOR 1, L_0x7fabccc3fa70, L_0x7fabccc3fae0, C4<0>, C4<0>;
L_0x7fabccc41310 .functor XOR 1, L_0x7fabccc41160, L_0x7fabccc40d50, C4<0>, C4<0>;
L_0x7fabccc413c0 .functor AND 1, L_0x7fabccc41fb0, L_0x7fabccc420d0, C4<1>, C4<1>;
L_0x7fabccc414d0 .functor NOT 1, L_0x7fabccc40d50, C4<0>, C4<0>, C4<0>;
L_0x7fabccc41580 .functor AND 1, L_0x7fabccc413c0, L_0x7fabccc414d0, C4<1>, C4<1>;
L_0x7fabccc416c0 .functor NOT 1, L_0x7fabccc41fb0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc41730 .functor AND 1, L_0x7fabccc416c0, L_0x7fabccc420d0, C4<1>, C4<1>;
L_0x7fabccc41820 .functor AND 1, L_0x7fabccc41730, L_0x7fabccc40d50, C4<1>, C4<1>;
L_0x7fabccc418f0 .functor OR 1, L_0x7fabccc41580, L_0x7fabccc41820, C4<0>, C4<0>;
L_0x7fabccc41a50 .functor BUFZ 1, L_0x7fabccc41310, C4<0>, C4<0>, C4<0>;
L_0x7fabccc41b00 .functor AND 1, L_0x7fabccc3fa70, L_0x7fabccc3fae0, C4<1>, C4<1>;
L_0x7fabccc419e0 .functor AND 1, L_0x7fabccc3fa70, L_0x7fabccc40d50, C4<1>, C4<1>;
L_0x7fabccc41c70 .functor OR 1, L_0x7fabccc41b00, L_0x7fabccc419e0, C4<0>, C4<0>;
L_0x7fabccc41db0 .functor AND 1, L_0x7fabccc3fae0, L_0x7fabccc40d50, C4<1>, C4<1>;
L_0x7fabccc41e20 .functor OR 1, L_0x7fabccc41c70, L_0x7fabccc41db0, C4<0>, C4<0>;
v0x7fabce3a8ed0_0 .net *"_s10", 0 0, L_0x7fabccc41580;  1 drivers
v0x7fabce3a8f90_0 .net *"_s12", 0 0, L_0x7fabccc416c0;  1 drivers
v0x7fabce3a9040_0 .net *"_s14", 0 0, L_0x7fabccc41730;  1 drivers
v0x7fabce3a9100_0 .net *"_s16", 0 0, L_0x7fabccc41820;  1 drivers
v0x7fabce3a91b0_0 .net *"_s22", 0 0, L_0x7fabccc41b00;  1 drivers
v0x7fabce3a92a0_0 .net *"_s24", 0 0, L_0x7fabccc419e0;  1 drivers
v0x7fabce3a9350_0 .net *"_s26", 0 0, L_0x7fabccc41c70;  1 drivers
v0x7fabce3a9400_0 .net *"_s28", 0 0, L_0x7fabccc41db0;  1 drivers
v0x7fabce3a94b0_0 .net *"_s6", 0 0, L_0x7fabccc413c0;  1 drivers
v0x7fabce3a95c0_0 .net *"_s8", 0 0, L_0x7fabccc414d0;  1 drivers
v0x7fabce3a9670_0 .net "a", 0 0, L_0x7fabccc41fb0;  1 drivers
v0x7fabce3a9710_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3a97a0_0 .net "aOperand", 0 0, L_0x7fabccc3fa70;  1 drivers
v0x7fabce3a9840_0 .net "adderResult", 0 0, L_0x7fabccc41310;  1 drivers
v0x7fabce3a98e0_0 .net "b", 0 0, L_0x7fabccc420d0;  1 drivers
v0x7fabce3a9980_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3a9a10_0 .net "bOperand", 0 0, L_0x7fabccc3fae0;  1 drivers
v0x7fabce3a9ba0_0 .net "carryIn", 0 0, L_0x7fabccc40d50;  1 drivers
v0x7fabce3a9c30_0 .net "carryOut", 0 0, L_0x7fabccc41e20;  1 drivers
v0x7fabce3a9cc0_0 .net "halfAdderResult", 0 0, L_0x7fabccc41160;  1 drivers
L_0x7fabccd635f0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3a9d50_0 .net "less", 0 0, L_0x7fabccd635f0;  1 drivers
v0x7fabce3a9df0_0 .net "operation", 1 0, L_0x7fabccc40df0;  1 drivers
v0x7fabce3a9ea0_0 .net "overflow", 0 0, L_0x7fabccc418f0;  1 drivers
v0x7fabce3a9f40_0 .net "product", 0 0, L_0x7fabccc41020;  1 drivers
v0x7fabce3a9fe0_0 .var "result", 0 0;
v0x7fabce3aa080_0 .net "set", 0 0, L_0x7fabccc41a50;  1 drivers
v0x7fabce3aa120_0 .net "sum", 0 0, L_0x7fabccc410d0;  1 drivers
E_0x7fabce3a7ec0/0 .event edge, v0x7fabce3a9ea0_0, v0x7fabce3aa080_0, v0x7fabce3a9fe0_0, v0x7fabce3a9df0_0;
E_0x7fabce3a7ec0/1 .event edge, v0x7fabce3a9ba0_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3a9d50_0;
E_0x7fabce3a7ec0/2 .event edge, v0x7fabce3a98e0_0, v0x7fabce3a9670_0;
E_0x7fabce3a7ec0 .event/or E_0x7fabce3a7ec0/0, E_0x7fabce3a7ec0/1, E_0x7fabce3a7ec0/2;
S_0x7fabce3aa2d0 .scope module, "alu24" "ALU_1" 3 41, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc40e90 .functor XOR 1, L_0x7fabccc433c0, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc40f00 .functor XOR 1, L_0x7fabccc434e0, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc40fb0 .functor AND 1, L_0x7fabccc40e90, L_0x7fabccc40f00, C4<1>, C4<1>;
L_0x7fabccc424e0 .functor OR 1, L_0x7fabccc40e90, L_0x7fabccc40f00, C4<0>, C4<0>;
L_0x7fabccc42570 .functor XOR 1, L_0x7fabccc40e90, L_0x7fabccc40f00, C4<0>, C4<0>;
L_0x7fabccc42720 .functor XOR 1, L_0x7fabccc42570, L_0x7fabccc42170, C4<0>, C4<0>;
L_0x7fabccc427d0 .functor AND 1, L_0x7fabccc433c0, L_0x7fabccc434e0, C4<1>, C4<1>;
L_0x7fabccc428e0 .functor NOT 1, L_0x7fabccc42170, C4<0>, C4<0>, C4<0>;
L_0x7fabccc42990 .functor AND 1, L_0x7fabccc427d0, L_0x7fabccc428e0, C4<1>, C4<1>;
L_0x7fabccc42ad0 .functor NOT 1, L_0x7fabccc433c0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc42b40 .functor AND 1, L_0x7fabccc42ad0, L_0x7fabccc434e0, C4<1>, C4<1>;
L_0x7fabccc42c30 .functor AND 1, L_0x7fabccc42b40, L_0x7fabccc42170, C4<1>, C4<1>;
L_0x7fabccc42d00 .functor OR 1, L_0x7fabccc42990, L_0x7fabccc42c30, C4<0>, C4<0>;
L_0x7fabccc42e60 .functor BUFZ 1, L_0x7fabccc42720, C4<0>, C4<0>, C4<0>;
L_0x7fabccc42f10 .functor AND 1, L_0x7fabccc40e90, L_0x7fabccc40f00, C4<1>, C4<1>;
L_0x7fabccc42df0 .functor AND 1, L_0x7fabccc40e90, L_0x7fabccc42170, C4<1>, C4<1>;
L_0x7fabccc43080 .functor OR 1, L_0x7fabccc42f10, L_0x7fabccc42df0, C4<0>, C4<0>;
L_0x7fabccc431c0 .functor AND 1, L_0x7fabccc40f00, L_0x7fabccc42170, C4<1>, C4<1>;
L_0x7fabccc43230 .functor OR 1, L_0x7fabccc43080, L_0x7fabccc431c0, C4<0>, C4<0>;
v0x7fabce3aa5a0_0 .net *"_s10", 0 0, L_0x7fabccc42990;  1 drivers
v0x7fabce3aa660_0 .net *"_s12", 0 0, L_0x7fabccc42ad0;  1 drivers
v0x7fabce3aa710_0 .net *"_s14", 0 0, L_0x7fabccc42b40;  1 drivers
v0x7fabce3aa7d0_0 .net *"_s16", 0 0, L_0x7fabccc42c30;  1 drivers
v0x7fabce3aa880_0 .net *"_s22", 0 0, L_0x7fabccc42f10;  1 drivers
v0x7fabce3aa970_0 .net *"_s24", 0 0, L_0x7fabccc42df0;  1 drivers
v0x7fabce3aaa20_0 .net *"_s26", 0 0, L_0x7fabccc43080;  1 drivers
v0x7fabce3aaad0_0 .net *"_s28", 0 0, L_0x7fabccc431c0;  1 drivers
v0x7fabce3aab80_0 .net *"_s6", 0 0, L_0x7fabccc427d0;  1 drivers
v0x7fabce3aac90_0 .net *"_s8", 0 0, L_0x7fabccc428e0;  1 drivers
v0x7fabce3aad40_0 .net "a", 0 0, L_0x7fabccc433c0;  1 drivers
v0x7fabce3aade0_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3aae70_0 .net "aOperand", 0 0, L_0x7fabccc40e90;  1 drivers
v0x7fabce3aaf10_0 .net "adderResult", 0 0, L_0x7fabccc42720;  1 drivers
v0x7fabce3aafb0_0 .net "b", 0 0, L_0x7fabccc434e0;  1 drivers
v0x7fabce3ab050_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3ab0e0_0 .net "bOperand", 0 0, L_0x7fabccc40f00;  1 drivers
v0x7fabce3ab270_0 .net "carryIn", 0 0, L_0x7fabccc42170;  1 drivers
v0x7fabce3ab300_0 .net "carryOut", 0 0, L_0x7fabccc43230;  1 drivers
v0x7fabce3ab390_0 .net "halfAdderResult", 0 0, L_0x7fabccc42570;  1 drivers
L_0x7fabccd63638 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3ab420_0 .net "less", 0 0, L_0x7fabccd63638;  1 drivers
v0x7fabce3ab4c0_0 .net "operation", 1 0, L_0x7fabccc42210;  1 drivers
v0x7fabce3ab570_0 .net "overflow", 0 0, L_0x7fabccc42d00;  1 drivers
v0x7fabce3ab610_0 .net "product", 0 0, L_0x7fabccc40fb0;  1 drivers
v0x7fabce3ab6b0_0 .var "result", 0 0;
v0x7fabce3ab750_0 .net "set", 0 0, L_0x7fabccc42e60;  1 drivers
v0x7fabce3ab7f0_0 .net "sum", 0 0, L_0x7fabccc424e0;  1 drivers
E_0x7fabce3a9590/0 .event edge, v0x7fabce3ab570_0, v0x7fabce3ab750_0, v0x7fabce3ab6b0_0, v0x7fabce3ab4c0_0;
E_0x7fabce3a9590/1 .event edge, v0x7fabce3ab270_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3ab420_0;
E_0x7fabce3a9590/2 .event edge, v0x7fabce3aafb0_0, v0x7fabce3aad40_0;
E_0x7fabce3a9590 .event/or E_0x7fabce3a9590/0, E_0x7fabce3a9590/1, E_0x7fabce3a9590/2;
S_0x7fabce3ab9a0 .scope module, "alu25" "ALU_1" 3 42, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc422b0 .functor XOR 1, L_0x7fabccc447d0, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc42320 .functor XOR 1, L_0x7fabccc448f0, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc423d0 .functor AND 1, L_0x7fabccc422b0, L_0x7fabccc42320, C4<1>, C4<1>;
L_0x7fabccc438f0 .functor OR 1, L_0x7fabccc422b0, L_0x7fabccc42320, C4<0>, C4<0>;
L_0x7fabccc43980 .functor XOR 1, L_0x7fabccc422b0, L_0x7fabccc42320, C4<0>, C4<0>;
L_0x7fabccc43b30 .functor XOR 1, L_0x7fabccc43980, L_0x7fabccc43580, C4<0>, C4<0>;
L_0x7fabccc43be0 .functor AND 1, L_0x7fabccc447d0, L_0x7fabccc448f0, C4<1>, C4<1>;
L_0x7fabccc43cf0 .functor NOT 1, L_0x7fabccc43580, C4<0>, C4<0>, C4<0>;
L_0x7fabccc43da0 .functor AND 1, L_0x7fabccc43be0, L_0x7fabccc43cf0, C4<1>, C4<1>;
L_0x7fabccc43ee0 .functor NOT 1, L_0x7fabccc447d0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc43f50 .functor AND 1, L_0x7fabccc43ee0, L_0x7fabccc448f0, C4<1>, C4<1>;
L_0x7fabccc44040 .functor AND 1, L_0x7fabccc43f50, L_0x7fabccc43580, C4<1>, C4<1>;
L_0x7fabccc44110 .functor OR 1, L_0x7fabccc43da0, L_0x7fabccc44040, C4<0>, C4<0>;
L_0x7fabccc44270 .functor BUFZ 1, L_0x7fabccc43b30, C4<0>, C4<0>, C4<0>;
L_0x7fabccc44320 .functor AND 1, L_0x7fabccc422b0, L_0x7fabccc42320, C4<1>, C4<1>;
L_0x7fabccc44200 .functor AND 1, L_0x7fabccc422b0, L_0x7fabccc43580, C4<1>, C4<1>;
L_0x7fabccc44490 .functor OR 1, L_0x7fabccc44320, L_0x7fabccc44200, C4<0>, C4<0>;
L_0x7fabccc445d0 .functor AND 1, L_0x7fabccc42320, L_0x7fabccc43580, C4<1>, C4<1>;
L_0x7fabccc44640 .functor OR 1, L_0x7fabccc44490, L_0x7fabccc445d0, C4<0>, C4<0>;
v0x7fabce3abc70_0 .net *"_s10", 0 0, L_0x7fabccc43da0;  1 drivers
v0x7fabce3abd30_0 .net *"_s12", 0 0, L_0x7fabccc43ee0;  1 drivers
v0x7fabce3abde0_0 .net *"_s14", 0 0, L_0x7fabccc43f50;  1 drivers
v0x7fabce3abea0_0 .net *"_s16", 0 0, L_0x7fabccc44040;  1 drivers
v0x7fabce3abf50_0 .net *"_s22", 0 0, L_0x7fabccc44320;  1 drivers
v0x7fabce3ac040_0 .net *"_s24", 0 0, L_0x7fabccc44200;  1 drivers
v0x7fabce3ac0f0_0 .net *"_s26", 0 0, L_0x7fabccc44490;  1 drivers
v0x7fabce3ac1a0_0 .net *"_s28", 0 0, L_0x7fabccc445d0;  1 drivers
v0x7fabce3ac250_0 .net *"_s6", 0 0, L_0x7fabccc43be0;  1 drivers
v0x7fabce3ac360_0 .net *"_s8", 0 0, L_0x7fabccc43cf0;  1 drivers
v0x7fabce3ac410_0 .net "a", 0 0, L_0x7fabccc447d0;  1 drivers
v0x7fabce3ac4b0_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3ac540_0 .net "aOperand", 0 0, L_0x7fabccc422b0;  1 drivers
v0x7fabce3ac5e0_0 .net "adderResult", 0 0, L_0x7fabccc43b30;  1 drivers
v0x7fabce3ac680_0 .net "b", 0 0, L_0x7fabccc448f0;  1 drivers
v0x7fabce3ac720_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3ac7b0_0 .net "bOperand", 0 0, L_0x7fabccc42320;  1 drivers
v0x7fabce3ac940_0 .net "carryIn", 0 0, L_0x7fabccc43580;  1 drivers
v0x7fabce3ac9d0_0 .net "carryOut", 0 0, L_0x7fabccc44640;  1 drivers
v0x7fabce3aca60_0 .net "halfAdderResult", 0 0, L_0x7fabccc43980;  1 drivers
L_0x7fabccd63680 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3acaf0_0 .net "less", 0 0, L_0x7fabccd63680;  1 drivers
v0x7fabce3acb90_0 .net "operation", 1 0, L_0x7fabccc43620;  1 drivers
v0x7fabce3acc40_0 .net "overflow", 0 0, L_0x7fabccc44110;  1 drivers
v0x7fabce3acce0_0 .net "product", 0 0, L_0x7fabccc423d0;  1 drivers
v0x7fabce3acd80_0 .var "result", 0 0;
v0x7fabce3ace20_0 .net "set", 0 0, L_0x7fabccc44270;  1 drivers
v0x7fabce3acec0_0 .net "sum", 0 0, L_0x7fabccc438f0;  1 drivers
E_0x7fabce3aac60/0 .event edge, v0x7fabce3acc40_0, v0x7fabce3ace20_0, v0x7fabce3acd80_0, v0x7fabce3acb90_0;
E_0x7fabce3aac60/1 .event edge, v0x7fabce3ac940_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3acaf0_0;
E_0x7fabce3aac60/2 .event edge, v0x7fabce3ac680_0, v0x7fabce3ac410_0;
E_0x7fabce3aac60 .event/or E_0x7fabce3aac60/0, E_0x7fabce3aac60/1, E_0x7fabce3aac60/2;
S_0x7fabce3ad070 .scope module, "alu26" "ALU_1" 3 43, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc436c0 .functor XOR 1, L_0x7fabccc45be0, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc43730 .functor XOR 1, L_0x7fabccc45d00, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc437e0 .functor AND 1, L_0x7fabccc436c0, L_0x7fabccc43730, C4<1>, C4<1>;
L_0x7fabccc44d00 .functor OR 1, L_0x7fabccc436c0, L_0x7fabccc43730, C4<0>, C4<0>;
L_0x7fabccc44d90 .functor XOR 1, L_0x7fabccc436c0, L_0x7fabccc43730, C4<0>, C4<0>;
L_0x7fabccc44f40 .functor XOR 1, L_0x7fabccc44d90, L_0x7fabccc44990, C4<0>, C4<0>;
L_0x7fabccc44ff0 .functor AND 1, L_0x7fabccc45be0, L_0x7fabccc45d00, C4<1>, C4<1>;
L_0x7fabccc45100 .functor NOT 1, L_0x7fabccc44990, C4<0>, C4<0>, C4<0>;
L_0x7fabccc451b0 .functor AND 1, L_0x7fabccc44ff0, L_0x7fabccc45100, C4<1>, C4<1>;
L_0x7fabccc452f0 .functor NOT 1, L_0x7fabccc45be0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc45360 .functor AND 1, L_0x7fabccc452f0, L_0x7fabccc45d00, C4<1>, C4<1>;
L_0x7fabccc45450 .functor AND 1, L_0x7fabccc45360, L_0x7fabccc44990, C4<1>, C4<1>;
L_0x7fabccc45520 .functor OR 1, L_0x7fabccc451b0, L_0x7fabccc45450, C4<0>, C4<0>;
L_0x7fabccc45680 .functor BUFZ 1, L_0x7fabccc44f40, C4<0>, C4<0>, C4<0>;
L_0x7fabccc45730 .functor AND 1, L_0x7fabccc436c0, L_0x7fabccc43730, C4<1>, C4<1>;
L_0x7fabccc45610 .functor AND 1, L_0x7fabccc436c0, L_0x7fabccc44990, C4<1>, C4<1>;
L_0x7fabccc458a0 .functor OR 1, L_0x7fabccc45730, L_0x7fabccc45610, C4<0>, C4<0>;
L_0x7fabccc459e0 .functor AND 1, L_0x7fabccc43730, L_0x7fabccc44990, C4<1>, C4<1>;
L_0x7fabccc45a50 .functor OR 1, L_0x7fabccc458a0, L_0x7fabccc459e0, C4<0>, C4<0>;
v0x7fabce3ad340_0 .net *"_s10", 0 0, L_0x7fabccc451b0;  1 drivers
v0x7fabce3ad400_0 .net *"_s12", 0 0, L_0x7fabccc452f0;  1 drivers
v0x7fabce3ad4b0_0 .net *"_s14", 0 0, L_0x7fabccc45360;  1 drivers
v0x7fabce3ad570_0 .net *"_s16", 0 0, L_0x7fabccc45450;  1 drivers
v0x7fabce3ad620_0 .net *"_s22", 0 0, L_0x7fabccc45730;  1 drivers
v0x7fabce3ad710_0 .net *"_s24", 0 0, L_0x7fabccc45610;  1 drivers
v0x7fabce3ad7c0_0 .net *"_s26", 0 0, L_0x7fabccc458a0;  1 drivers
v0x7fabce3ad870_0 .net *"_s28", 0 0, L_0x7fabccc459e0;  1 drivers
v0x7fabce3ad920_0 .net *"_s6", 0 0, L_0x7fabccc44ff0;  1 drivers
v0x7fabce3ada30_0 .net *"_s8", 0 0, L_0x7fabccc45100;  1 drivers
v0x7fabce3adae0_0 .net "a", 0 0, L_0x7fabccc45be0;  1 drivers
v0x7fabce3adb80_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3adc10_0 .net "aOperand", 0 0, L_0x7fabccc436c0;  1 drivers
v0x7fabce3adcb0_0 .net "adderResult", 0 0, L_0x7fabccc44f40;  1 drivers
v0x7fabce3add50_0 .net "b", 0 0, L_0x7fabccc45d00;  1 drivers
v0x7fabce3addf0_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3ade80_0 .net "bOperand", 0 0, L_0x7fabccc43730;  1 drivers
v0x7fabce3ae010_0 .net "carryIn", 0 0, L_0x7fabccc44990;  1 drivers
v0x7fabce3ae0a0_0 .net "carryOut", 0 0, L_0x7fabccc45a50;  1 drivers
v0x7fabce3ae130_0 .net "halfAdderResult", 0 0, L_0x7fabccc44d90;  1 drivers
L_0x7fabccd636c8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3ae1c0_0 .net "less", 0 0, L_0x7fabccd636c8;  1 drivers
v0x7fabce3ae260_0 .net "operation", 1 0, L_0x7fabccc44a30;  1 drivers
v0x7fabce3ae310_0 .net "overflow", 0 0, L_0x7fabccc45520;  1 drivers
v0x7fabce3ae3b0_0 .net "product", 0 0, L_0x7fabccc437e0;  1 drivers
v0x7fabce3ae450_0 .var "result", 0 0;
v0x7fabce3ae4f0_0 .net "set", 0 0, L_0x7fabccc45680;  1 drivers
v0x7fabce3ae590_0 .net "sum", 0 0, L_0x7fabccc44d00;  1 drivers
E_0x7fabce3ac330/0 .event edge, v0x7fabce3ae310_0, v0x7fabce3ae4f0_0, v0x7fabce3ae450_0, v0x7fabce3ae260_0;
E_0x7fabce3ac330/1 .event edge, v0x7fabce3ae010_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3ae1c0_0;
E_0x7fabce3ac330/2 .event edge, v0x7fabce3add50_0, v0x7fabce3adae0_0;
E_0x7fabce3ac330 .event/or E_0x7fabce3ac330/0, E_0x7fabce3ac330/1, E_0x7fabce3ac330/2;
S_0x7fabce3ae740 .scope module, "alu27" "ALU_1" 3 44, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc44ad0 .functor XOR 1, L_0x7fabccc46ff0, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc44b40 .functor XOR 1, L_0x7fabccc47110, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc44bf0 .functor AND 1, L_0x7fabccc44ad0, L_0x7fabccc44b40, C4<1>, C4<1>;
L_0x7fabccc46130 .functor OR 1, L_0x7fabccc44ad0, L_0x7fabccc44b40, C4<0>, C4<0>;
L_0x7fabccc461a0 .functor XOR 1, L_0x7fabccc44ad0, L_0x7fabccc44b40, C4<0>, C4<0>;
L_0x7fabccc46350 .functor XOR 1, L_0x7fabccc461a0, L_0x7fabccc45da0, C4<0>, C4<0>;
L_0x7fabccc46400 .functor AND 1, L_0x7fabccc46ff0, L_0x7fabccc47110, C4<1>, C4<1>;
L_0x7fabccc46510 .functor NOT 1, L_0x7fabccc45da0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc465c0 .functor AND 1, L_0x7fabccc46400, L_0x7fabccc46510, C4<1>, C4<1>;
L_0x7fabccc46700 .functor NOT 1, L_0x7fabccc46ff0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc46770 .functor AND 1, L_0x7fabccc46700, L_0x7fabccc47110, C4<1>, C4<1>;
L_0x7fabccc46860 .functor AND 1, L_0x7fabccc46770, L_0x7fabccc45da0, C4<1>, C4<1>;
L_0x7fabccc46930 .functor OR 1, L_0x7fabccc465c0, L_0x7fabccc46860, C4<0>, C4<0>;
L_0x7fabccc46a90 .functor BUFZ 1, L_0x7fabccc46350, C4<0>, C4<0>, C4<0>;
L_0x7fabccc46b40 .functor AND 1, L_0x7fabccc44ad0, L_0x7fabccc44b40, C4<1>, C4<1>;
L_0x7fabccc46a20 .functor AND 1, L_0x7fabccc44ad0, L_0x7fabccc45da0, C4<1>, C4<1>;
L_0x7fabccc46cb0 .functor OR 1, L_0x7fabccc46b40, L_0x7fabccc46a20, C4<0>, C4<0>;
L_0x7fabccc46df0 .functor AND 1, L_0x7fabccc44b40, L_0x7fabccc45da0, C4<1>, C4<1>;
L_0x7fabccc46e60 .functor OR 1, L_0x7fabccc46cb0, L_0x7fabccc46df0, C4<0>, C4<0>;
v0x7fabce3aea10_0 .net *"_s10", 0 0, L_0x7fabccc465c0;  1 drivers
v0x7fabce3aead0_0 .net *"_s12", 0 0, L_0x7fabccc46700;  1 drivers
v0x7fabce3aeb80_0 .net *"_s14", 0 0, L_0x7fabccc46770;  1 drivers
v0x7fabce3aec40_0 .net *"_s16", 0 0, L_0x7fabccc46860;  1 drivers
v0x7fabce3aecf0_0 .net *"_s22", 0 0, L_0x7fabccc46b40;  1 drivers
v0x7fabce3aede0_0 .net *"_s24", 0 0, L_0x7fabccc46a20;  1 drivers
v0x7fabce3aee90_0 .net *"_s26", 0 0, L_0x7fabccc46cb0;  1 drivers
v0x7fabce3aef40_0 .net *"_s28", 0 0, L_0x7fabccc46df0;  1 drivers
v0x7fabce3aeff0_0 .net *"_s6", 0 0, L_0x7fabccc46400;  1 drivers
v0x7fabce3af100_0 .net *"_s8", 0 0, L_0x7fabccc46510;  1 drivers
v0x7fabce3af1b0_0 .net "a", 0 0, L_0x7fabccc46ff0;  1 drivers
v0x7fabce3af250_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3af2e0_0 .net "aOperand", 0 0, L_0x7fabccc44ad0;  1 drivers
v0x7fabce3af380_0 .net "adderResult", 0 0, L_0x7fabccc46350;  1 drivers
v0x7fabce3af420_0 .net "b", 0 0, L_0x7fabccc47110;  1 drivers
v0x7fabce3af4c0_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3af550_0 .net "bOperand", 0 0, L_0x7fabccc44b40;  1 drivers
v0x7fabce3af6e0_0 .net "carryIn", 0 0, L_0x7fabccc45da0;  1 drivers
v0x7fabce3af770_0 .net "carryOut", 0 0, L_0x7fabccc46e60;  1 drivers
v0x7fabce3af800_0 .net "halfAdderResult", 0 0, L_0x7fabccc461a0;  1 drivers
L_0x7fabccd63710 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3af890_0 .net "less", 0 0, L_0x7fabccd63710;  1 drivers
v0x7fabce3af930_0 .net "operation", 1 0, L_0x7fabccc45e40;  1 drivers
v0x7fabce3af9e0_0 .net "overflow", 0 0, L_0x7fabccc46930;  1 drivers
v0x7fabce3afa80_0 .net "product", 0 0, L_0x7fabccc44bf0;  1 drivers
v0x7fabce3afb20_0 .var "result", 0 0;
v0x7fabce3afbc0_0 .net "set", 0 0, L_0x7fabccc46a90;  1 drivers
v0x7fabce3afc60_0 .net "sum", 0 0, L_0x7fabccc46130;  1 drivers
E_0x7fabce3ada00/0 .event edge, v0x7fabce3af9e0_0, v0x7fabce3afbc0_0, v0x7fabce3afb20_0, v0x7fabce3af930_0;
E_0x7fabce3ada00/1 .event edge, v0x7fabce3af6e0_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3af890_0;
E_0x7fabce3ada00/2 .event edge, v0x7fabce3af420_0, v0x7fabce3af1b0_0;
E_0x7fabce3ada00 .event/or E_0x7fabce3ada00/0, E_0x7fabce3ada00/1, E_0x7fabce3ada00/2;
S_0x7fabce3afe10 .scope module, "alu28" "ALU_1" 3 45, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc45ee0 .functor XOR 1, L_0x7fabccc48400, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc45f50 .functor XOR 1, L_0x7fabccc48520, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc46000 .functor AND 1, L_0x7fabccc45ee0, L_0x7fabccc45f50, C4<1>, C4<1>;
L_0x7fabccc47520 .functor OR 1, L_0x7fabccc45ee0, L_0x7fabccc45f50, C4<0>, C4<0>;
L_0x7fabccc475b0 .functor XOR 1, L_0x7fabccc45ee0, L_0x7fabccc45f50, C4<0>, C4<0>;
L_0x7fabccc47760 .functor XOR 1, L_0x7fabccc475b0, L_0x7fabccc471b0, C4<0>, C4<0>;
L_0x7fabccc47810 .functor AND 1, L_0x7fabccc48400, L_0x7fabccc48520, C4<1>, C4<1>;
L_0x7fabccc47920 .functor NOT 1, L_0x7fabccc471b0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc479d0 .functor AND 1, L_0x7fabccc47810, L_0x7fabccc47920, C4<1>, C4<1>;
L_0x7fabccc47b10 .functor NOT 1, L_0x7fabccc48400, C4<0>, C4<0>, C4<0>;
L_0x7fabccc47b80 .functor AND 1, L_0x7fabccc47b10, L_0x7fabccc48520, C4<1>, C4<1>;
L_0x7fabccc47c70 .functor AND 1, L_0x7fabccc47b80, L_0x7fabccc471b0, C4<1>, C4<1>;
L_0x7fabccc47d40 .functor OR 1, L_0x7fabccc479d0, L_0x7fabccc47c70, C4<0>, C4<0>;
L_0x7fabccc47ea0 .functor BUFZ 1, L_0x7fabccc47760, C4<0>, C4<0>, C4<0>;
L_0x7fabccc47f50 .functor AND 1, L_0x7fabccc45ee0, L_0x7fabccc45f50, C4<1>, C4<1>;
L_0x7fabccc47e30 .functor AND 1, L_0x7fabccc45ee0, L_0x7fabccc471b0, C4<1>, C4<1>;
L_0x7fabccc480c0 .functor OR 1, L_0x7fabccc47f50, L_0x7fabccc47e30, C4<0>, C4<0>;
L_0x7fabccc48200 .functor AND 1, L_0x7fabccc45f50, L_0x7fabccc471b0, C4<1>, C4<1>;
L_0x7fabccc48270 .functor OR 1, L_0x7fabccc480c0, L_0x7fabccc48200, C4<0>, C4<0>;
v0x7fabce3b00e0_0 .net *"_s10", 0 0, L_0x7fabccc479d0;  1 drivers
v0x7fabce3b01a0_0 .net *"_s12", 0 0, L_0x7fabccc47b10;  1 drivers
v0x7fabce3b0250_0 .net *"_s14", 0 0, L_0x7fabccc47b80;  1 drivers
v0x7fabce3b0310_0 .net *"_s16", 0 0, L_0x7fabccc47c70;  1 drivers
v0x7fabce3b03c0_0 .net *"_s22", 0 0, L_0x7fabccc47f50;  1 drivers
v0x7fabce3b04b0_0 .net *"_s24", 0 0, L_0x7fabccc47e30;  1 drivers
v0x7fabce3b0560_0 .net *"_s26", 0 0, L_0x7fabccc480c0;  1 drivers
v0x7fabce3b0610_0 .net *"_s28", 0 0, L_0x7fabccc48200;  1 drivers
v0x7fabce3b06c0_0 .net *"_s6", 0 0, L_0x7fabccc47810;  1 drivers
v0x7fabce3b07d0_0 .net *"_s8", 0 0, L_0x7fabccc47920;  1 drivers
v0x7fabce3b0880_0 .net "a", 0 0, L_0x7fabccc48400;  1 drivers
v0x7fabce3b0920_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3b09b0_0 .net "aOperand", 0 0, L_0x7fabccc45ee0;  1 drivers
v0x7fabce3b0a50_0 .net "adderResult", 0 0, L_0x7fabccc47760;  1 drivers
v0x7fabce3b0af0_0 .net "b", 0 0, L_0x7fabccc48520;  1 drivers
v0x7fabce3b0b90_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3b0c20_0 .net "bOperand", 0 0, L_0x7fabccc45f50;  1 drivers
v0x7fabce3b0db0_0 .net "carryIn", 0 0, L_0x7fabccc471b0;  1 drivers
v0x7fabce3b0e40_0 .net "carryOut", 0 0, L_0x7fabccc48270;  1 drivers
v0x7fabce3b0ed0_0 .net "halfAdderResult", 0 0, L_0x7fabccc475b0;  1 drivers
L_0x7fabccd63758 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3b0f60_0 .net "less", 0 0, L_0x7fabccd63758;  1 drivers
v0x7fabce3b1000_0 .net "operation", 1 0, L_0x7fabccc47250;  1 drivers
v0x7fabce3b10b0_0 .net "overflow", 0 0, L_0x7fabccc47d40;  1 drivers
v0x7fabce3b1150_0 .net "product", 0 0, L_0x7fabccc46000;  1 drivers
v0x7fabce3b11f0_0 .var "result", 0 0;
v0x7fabce3b1290_0 .net "set", 0 0, L_0x7fabccc47ea0;  1 drivers
v0x7fabce3b1330_0 .net "sum", 0 0, L_0x7fabccc47520;  1 drivers
E_0x7fabce3af0d0/0 .event edge, v0x7fabce3b10b0_0, v0x7fabce3b1290_0, v0x7fabce3b11f0_0, v0x7fabce3b1000_0;
E_0x7fabce3af0d0/1 .event edge, v0x7fabce3b0db0_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3b0f60_0;
E_0x7fabce3af0d0/2 .event edge, v0x7fabce3b0af0_0, v0x7fabce3b0880_0;
E_0x7fabce3af0d0 .event/or E_0x7fabce3af0d0/0, E_0x7fabce3af0d0/1, E_0x7fabce3af0d0/2;
S_0x7fabce3b14e0 .scope module, "alu29" "ALU_1" 3 46, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc472f0 .functor XOR 1, L_0x7fabccc49810, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc47360 .functor XOR 1, L_0x7fabccc49930, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc47410 .functor AND 1, L_0x7fabccc472f0, L_0x7fabccc47360, C4<1>, C4<1>;
L_0x7fabccc48950 .functor OR 1, L_0x7fabccc472f0, L_0x7fabccc47360, C4<0>, C4<0>;
L_0x7fabccc489c0 .functor XOR 1, L_0x7fabccc472f0, L_0x7fabccc47360, C4<0>, C4<0>;
L_0x7fabccc48b70 .functor XOR 1, L_0x7fabccc489c0, L_0x7fabccc485c0, C4<0>, C4<0>;
L_0x7fabccc48c20 .functor AND 1, L_0x7fabccc49810, L_0x7fabccc49930, C4<1>, C4<1>;
L_0x7fabccc48d30 .functor NOT 1, L_0x7fabccc485c0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc48de0 .functor AND 1, L_0x7fabccc48c20, L_0x7fabccc48d30, C4<1>, C4<1>;
L_0x7fabccc48f20 .functor NOT 1, L_0x7fabccc49810, C4<0>, C4<0>, C4<0>;
L_0x7fabccc48f90 .functor AND 1, L_0x7fabccc48f20, L_0x7fabccc49930, C4<1>, C4<1>;
L_0x7fabccc49080 .functor AND 1, L_0x7fabccc48f90, L_0x7fabccc485c0, C4<1>, C4<1>;
L_0x7fabccc49150 .functor OR 1, L_0x7fabccc48de0, L_0x7fabccc49080, C4<0>, C4<0>;
L_0x7fabccc492b0 .functor BUFZ 1, L_0x7fabccc48b70, C4<0>, C4<0>, C4<0>;
L_0x7fabccc49360 .functor AND 1, L_0x7fabccc472f0, L_0x7fabccc47360, C4<1>, C4<1>;
L_0x7fabccc49240 .functor AND 1, L_0x7fabccc472f0, L_0x7fabccc485c0, C4<1>, C4<1>;
L_0x7fabccc494d0 .functor OR 1, L_0x7fabccc49360, L_0x7fabccc49240, C4<0>, C4<0>;
L_0x7fabccc49610 .functor AND 1, L_0x7fabccc47360, L_0x7fabccc485c0, C4<1>, C4<1>;
L_0x7fabccc49680 .functor OR 1, L_0x7fabccc494d0, L_0x7fabccc49610, C4<0>, C4<0>;
v0x7fabce3b17b0_0 .net *"_s10", 0 0, L_0x7fabccc48de0;  1 drivers
v0x7fabce3b1870_0 .net *"_s12", 0 0, L_0x7fabccc48f20;  1 drivers
v0x7fabce3b1920_0 .net *"_s14", 0 0, L_0x7fabccc48f90;  1 drivers
v0x7fabce3b19e0_0 .net *"_s16", 0 0, L_0x7fabccc49080;  1 drivers
v0x7fabce3b1a90_0 .net *"_s22", 0 0, L_0x7fabccc49360;  1 drivers
v0x7fabce3b1b80_0 .net *"_s24", 0 0, L_0x7fabccc49240;  1 drivers
v0x7fabce3b1c30_0 .net *"_s26", 0 0, L_0x7fabccc494d0;  1 drivers
v0x7fabce3b1ce0_0 .net *"_s28", 0 0, L_0x7fabccc49610;  1 drivers
v0x7fabce3b1d90_0 .net *"_s6", 0 0, L_0x7fabccc48c20;  1 drivers
v0x7fabce3b1ea0_0 .net *"_s8", 0 0, L_0x7fabccc48d30;  1 drivers
v0x7fabce3b1f50_0 .net "a", 0 0, L_0x7fabccc49810;  1 drivers
v0x7fabce3b1ff0_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3b2080_0 .net "aOperand", 0 0, L_0x7fabccc472f0;  1 drivers
v0x7fabce3b2120_0 .net "adderResult", 0 0, L_0x7fabccc48b70;  1 drivers
v0x7fabce3b21c0_0 .net "b", 0 0, L_0x7fabccc49930;  1 drivers
v0x7fabce3b2260_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3b22f0_0 .net "bOperand", 0 0, L_0x7fabccc47360;  1 drivers
v0x7fabce3b2480_0 .net "carryIn", 0 0, L_0x7fabccc485c0;  1 drivers
v0x7fabce3b2510_0 .net "carryOut", 0 0, L_0x7fabccc49680;  1 drivers
v0x7fabce3b25a0_0 .net "halfAdderResult", 0 0, L_0x7fabccc489c0;  1 drivers
L_0x7fabccd637a0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3b2630_0 .net "less", 0 0, L_0x7fabccd637a0;  1 drivers
v0x7fabce3b26d0_0 .net "operation", 1 0, L_0x7fabccc48660;  1 drivers
v0x7fabce3b2780_0 .net "overflow", 0 0, L_0x7fabccc49150;  1 drivers
v0x7fabce3b2820_0 .net "product", 0 0, L_0x7fabccc47410;  1 drivers
v0x7fabce3b28c0_0 .var "result", 0 0;
v0x7fabce3b2960_0 .net "set", 0 0, L_0x7fabccc492b0;  1 drivers
v0x7fabce3b2a00_0 .net "sum", 0 0, L_0x7fabccc48950;  1 drivers
E_0x7fabce3b07a0/0 .event edge, v0x7fabce3b2780_0, v0x7fabce3b2960_0, v0x7fabce3b28c0_0, v0x7fabce3b26d0_0;
E_0x7fabce3b07a0/1 .event edge, v0x7fabce3b2480_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3b2630_0;
E_0x7fabce3b07a0/2 .event edge, v0x7fabce3b21c0_0, v0x7fabce3b1f50_0;
E_0x7fabce3b07a0 .event/or E_0x7fabce3b07a0/0, E_0x7fabce3b07a0/1, E_0x7fabce3b07a0/2;
S_0x7fabce3b2bb0 .scope module, "alu30" "ALU_1" 3 47, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc35570 .functor XOR 1, L_0x7fabccc4aa30, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc355e0 .functor XOR 1, L_0x7fabccc4ab50, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc35690 .functor AND 1, L_0x7fabccc35570, L_0x7fabccc355e0, C4<1>, C4<1>;
L_0x7fabccc48740 .functor OR 1, L_0x7fabccc35570, L_0x7fabccc355e0, C4<0>, C4<0>;
L_0x7fabccc487b0 .functor XOR 1, L_0x7fabccc35570, L_0x7fabccc355e0, C4<0>, C4<0>;
L_0x7fabccc488e0 .functor XOR 1, L_0x7fabccc487b0, L_0x7fabccc499d0, C4<0>, C4<0>;
L_0x7fabccc49e40 .functor AND 1, L_0x7fabccc4aa30, L_0x7fabccc4ab50, C4<1>, C4<1>;
L_0x7fabccc49f50 .functor NOT 1, L_0x7fabccc499d0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc4a000 .functor AND 1, L_0x7fabccc49e40, L_0x7fabccc49f50, C4<1>, C4<1>;
L_0x7fabccc4a140 .functor NOT 1, L_0x7fabccc4aa30, C4<0>, C4<0>, C4<0>;
L_0x7fabccc4a1b0 .functor AND 1, L_0x7fabccc4a140, L_0x7fabccc4ab50, C4<1>, C4<1>;
L_0x7fabccc4a2a0 .functor AND 1, L_0x7fabccc4a1b0, L_0x7fabccc499d0, C4<1>, C4<1>;
L_0x7fabccc4a370 .functor OR 1, L_0x7fabccc4a000, L_0x7fabccc4a2a0, C4<0>, C4<0>;
L_0x7fabccc4a4d0 .functor BUFZ 1, L_0x7fabccc488e0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc4a580 .functor AND 1, L_0x7fabccc35570, L_0x7fabccc355e0, C4<1>, C4<1>;
L_0x7fabccc4a460 .functor AND 1, L_0x7fabccc35570, L_0x7fabccc499d0, C4<1>, C4<1>;
L_0x7fabccc4a6f0 .functor OR 1, L_0x7fabccc4a580, L_0x7fabccc4a460, C4<0>, C4<0>;
L_0x7fabccc4a830 .functor AND 1, L_0x7fabccc355e0, L_0x7fabccc499d0, C4<1>, C4<1>;
L_0x7fabccc4a8a0 .functor OR 1, L_0x7fabccc4a6f0, L_0x7fabccc4a830, C4<0>, C4<0>;
v0x7fabce3b2e80_0 .net *"_s10", 0 0, L_0x7fabccc4a000;  1 drivers
v0x7fabce3b2f40_0 .net *"_s12", 0 0, L_0x7fabccc4a140;  1 drivers
v0x7fabce3b2ff0_0 .net *"_s14", 0 0, L_0x7fabccc4a1b0;  1 drivers
v0x7fabce3b30b0_0 .net *"_s16", 0 0, L_0x7fabccc4a2a0;  1 drivers
v0x7fabce3b3160_0 .net *"_s22", 0 0, L_0x7fabccc4a580;  1 drivers
v0x7fabce3b3250_0 .net *"_s24", 0 0, L_0x7fabccc4a460;  1 drivers
v0x7fabce3b3300_0 .net *"_s26", 0 0, L_0x7fabccc4a6f0;  1 drivers
v0x7fabce3b33b0_0 .net *"_s28", 0 0, L_0x7fabccc4a830;  1 drivers
v0x7fabce3b3460_0 .net *"_s6", 0 0, L_0x7fabccc49e40;  1 drivers
v0x7fabce3b3570_0 .net *"_s8", 0 0, L_0x7fabccc49f50;  1 drivers
v0x7fabce3b3620_0 .net "a", 0 0, L_0x7fabccc4aa30;  1 drivers
v0x7fabce3b36c0_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3b3750_0 .net "aOperand", 0 0, L_0x7fabccc35570;  1 drivers
v0x7fabce3b37f0_0 .net "adderResult", 0 0, L_0x7fabccc488e0;  1 drivers
v0x7fabce3b3890_0 .net "b", 0 0, L_0x7fabccc4ab50;  1 drivers
v0x7fabce3b3930_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3b39c0_0 .net "bOperand", 0 0, L_0x7fabccc355e0;  1 drivers
v0x7fabce3b3b50_0 .net "carryIn", 0 0, L_0x7fabccc499d0;  1 drivers
v0x7fabce3b3be0_0 .net "carryOut", 0 0, L_0x7fabccc4a8a0;  1 drivers
v0x7fabce3b3c70_0 .net "halfAdderResult", 0 0, L_0x7fabccc487b0;  1 drivers
L_0x7fabccd637e8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3b3d00_0 .net "less", 0 0, L_0x7fabccd637e8;  1 drivers
v0x7fabce3b3da0_0 .net "operation", 1 0, L_0x7fabccc49a70;  1 drivers
v0x7fabce3b3e50_0 .net "overflow", 0 0, L_0x7fabccc4a370;  1 drivers
v0x7fabce3b3ef0_0 .net "product", 0 0, L_0x7fabccc35690;  1 drivers
v0x7fabce3b3f90_0 .var "result", 0 0;
v0x7fabce3b4030_0 .net "set", 0 0, L_0x7fabccc4a4d0;  1 drivers
v0x7fabce3b40d0_0 .net "sum", 0 0, L_0x7fabccc48740;  1 drivers
E_0x7fabce3b1e70/0 .event edge, v0x7fabce3b3e50_0, v0x7fabce3b4030_0, v0x7fabce3b3f90_0, v0x7fabce3b3da0_0;
E_0x7fabce3b1e70/1 .event edge, v0x7fabce3b3b50_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3b3d00_0;
E_0x7fabce3b1e70/2 .event edge, v0x7fabce3b3890_0, v0x7fabce3b3620_0;
E_0x7fabce3b1e70 .event/or E_0x7fabce3b1e70/0, E_0x7fabce3b1e70/1, E_0x7fabce3b1e70/2;
S_0x7fabce3b4280 .scope module, "alu31" "ALU_1" 3 48, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc49b10 .functor XOR 1, L_0x7fabccc4be40, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc49b80 .functor XOR 1, L_0x7fabccc37c60, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc49c30 .functor AND 1, L_0x7fabccc49b10, L_0x7fabccc49b80, C4<1>, C4<1>;
L_0x7fabccc4afc0 .functor OR 1, L_0x7fabccc49b10, L_0x7fabccc49b80, C4<0>, C4<0>;
L_0x7fabccc4b030 .functor XOR 1, L_0x7fabccc49b10, L_0x7fabccc49b80, C4<0>, C4<0>;
L_0x7fabccc4b1a0 .functor XOR 1, L_0x7fabccc4b030, L_0x7fabccc37d00, C4<0>, C4<0>;
L_0x7fabccc4b250 .functor AND 1, L_0x7fabccc4be40, L_0x7fabccc37c60, C4<1>, C4<1>;
L_0x7fabccc4b360 .functor NOT 1, L_0x7fabccc37d00, C4<0>, C4<0>, C4<0>;
L_0x7fabccc4b410 .functor AND 1, L_0x7fabccc4b250, L_0x7fabccc4b360, C4<1>, C4<1>;
L_0x7fabccc4b550 .functor NOT 1, L_0x7fabccc4be40, C4<0>, C4<0>, C4<0>;
L_0x7fabccc4b5c0 .functor AND 1, L_0x7fabccc4b550, L_0x7fabccc37c60, C4<1>, C4<1>;
L_0x7fabccc4b6b0 .functor AND 1, L_0x7fabccc4b5c0, L_0x7fabccc37d00, C4<1>, C4<1>;
L_0x7fabccc4b780 .functor OR 1, L_0x7fabccc4b410, L_0x7fabccc4b6b0, C4<0>, C4<0>;
L_0x7fabccc4b8e0 .functor BUFZ 1, L_0x7fabccc4b1a0, C4<0>, C4<0>, C4<0>;
L_0x7fabccc4b990 .functor AND 1, L_0x7fabccc49b10, L_0x7fabccc49b80, C4<1>, C4<1>;
L_0x7fabccc4b870 .functor AND 1, L_0x7fabccc49b10, L_0x7fabccc37d00, C4<1>, C4<1>;
L_0x7fabccc4bb00 .functor OR 1, L_0x7fabccc4b990, L_0x7fabccc4b870, C4<0>, C4<0>;
L_0x7fabccc4bc40 .functor AND 1, L_0x7fabccc49b80, L_0x7fabccc37d00, C4<1>, C4<1>;
L_0x7fabccc4bcb0 .functor OR 1, L_0x7fabccc4bb00, L_0x7fabccc4bc40, C4<0>, C4<0>;
v0x7fabce3b4550_0 .net *"_s10", 0 0, L_0x7fabccc4b410;  1 drivers
v0x7fabce3b4610_0 .net *"_s12", 0 0, L_0x7fabccc4b550;  1 drivers
v0x7fabce3b46c0_0 .net *"_s14", 0 0, L_0x7fabccc4b5c0;  1 drivers
v0x7fabce3b4780_0 .net *"_s16", 0 0, L_0x7fabccc4b6b0;  1 drivers
v0x7fabce3b4830_0 .net *"_s22", 0 0, L_0x7fabccc4b990;  1 drivers
v0x7fabce3b4920_0 .net *"_s24", 0 0, L_0x7fabccc4b870;  1 drivers
v0x7fabce3b49d0_0 .net *"_s26", 0 0, L_0x7fabccc4bb00;  1 drivers
v0x7fabce3b4a80_0 .net *"_s28", 0 0, L_0x7fabccc4bc40;  1 drivers
v0x7fabce3b4b30_0 .net *"_s6", 0 0, L_0x7fabccc4b250;  1 drivers
v0x7fabce3b4c40_0 .net *"_s8", 0 0, L_0x7fabccc4b360;  1 drivers
v0x7fabce3b4cf0_0 .net "a", 0 0, L_0x7fabccc4be40;  1 drivers
v0x7fabce3b4d90_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3b4e20_0 .net "aOperand", 0 0, L_0x7fabccc49b10;  1 drivers
v0x7fabce3b4ec0_0 .net "adderResult", 0 0, L_0x7fabccc4b1a0;  1 drivers
v0x7fabce3b4f60_0 .net "b", 0 0, L_0x7fabccc37c60;  1 drivers
v0x7fabce3b5000_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce3b5090_0 .net "bOperand", 0 0, L_0x7fabccc49b80;  1 drivers
v0x7fabce3b5220_0 .net "carryIn", 0 0, L_0x7fabccc37d00;  1 drivers
v0x7fabce3b52b0_0 .net "carryOut", 0 0, L_0x7fabccc4bcb0;  1 drivers
v0x7fabce3b5340_0 .net "halfAdderResult", 0 0, L_0x7fabccc4b030;  1 drivers
L_0x7fabccd63830 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3b53d0_0 .net "less", 0 0, L_0x7fabccd63830;  1 drivers
v0x7fabce3b5470_0 .net "operation", 1 0, L_0x7fabccc37da0;  1 drivers
v0x7fabce3b5520_0 .net "overflow", 0 0, L_0x7fabccc4b780;  1 drivers
v0x7fabce3b55c0_0 .net "product", 0 0, L_0x7fabccc49c30;  1 drivers
v0x7fabce3b5660_0 .var "result", 0 0;
v0x7fabce3b5700_0 .net "set", 0 0, L_0x7fabccc4b8e0;  1 drivers
v0x7fabce3b57a0_0 .net "sum", 0 0, L_0x7fabccc4afc0;  1 drivers
E_0x7fabce3b3540/0 .event edge, v0x7fabce3b5520_0, v0x7fabce3b5700_0, v0x7fabce3b5660_0, v0x7fabce3b5470_0;
E_0x7fabce3b3540/1 .event edge, v0x7fabce3b5220_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3b53d0_0;
E_0x7fabce3b3540/2 .event edge, v0x7fabce3b4f60_0, v0x7fabce3b4cf0_0;
E_0x7fabce3b3540 .event/or E_0x7fabce3b3540/0, E_0x7fabce3b3540/1, E_0x7fabce3b3540/2;
S_0x7fabce3b5950 .scope module, "alu32" "ALU_1" 3 49, 4 1 0, S_0x7fabce38dda0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a"
    .port_info 1 /INPUT 1 "b"
    .port_info 2 /INPUT 1 "less"
    .port_info 3 /INPUT 1 "aInvert"
    .port_info 4 /INPUT 1 "bInvert"
    .port_info 5 /INPUT 1 "carryIn"
    .port_info 6 /INPUT 2 "operation"
    .port_info 7 /OUTPUT 1 "result"
    .port_info 8 /OUTPUT 1 "set"
    .port_info 9 /OUTPUT 1 "overflow"
    .port_info 10 /OUTPUT 1 "carryOut"
L_0x7fabccc37e40 .functor XOR 1, L_0x7fabccc4ce50, L_0x7fabce3b7910, C4<0>, C4<0>;
L_0x7fabccc37eb0 .functor XOR 1, L_0x7fabccc4cf70, L_0x7fabce3b79f0, C4<0>, C4<0>;
L_0x7fabccc37f60 .functor AND 1, L_0x7fabccc37e40, L_0x7fabccc37eb0, C4<1>, C4<1>;
L_0x7fabccc4abf0 .functor OR 1, L_0x7fabccc37e40, L_0x7fabccc37eb0, C4<0>, C4<0>;
L_0x7fabccc4ac80 .functor XOR 1, L_0x7fabccc37e40, L_0x7fabccc37eb0, C4<0>, C4<0>;
L_0x7fabccc4ae30 .functor XOR 1, L_0x7fabccc4ac80, L_0x7fabccc4bf60, C4<0>, C4<0>;
L_0x7fabccc4aee0 .functor AND 1, L_0x7fabccc4ce50, L_0x7fabccc4cf70, C4<1>, C4<1>;
L_0x7fabccc4c390 .functor NOT 1, L_0x7fabccc4bf60, C4<0>, C4<0>, C4<0>;
L_0x7fabccc4c440 .functor AND 1, L_0x7fabccc4aee0, L_0x7fabccc4c390, C4<1>, C4<1>;
L_0x7fabccc4c580 .functor NOT 1, L_0x7fabccc4ce50, C4<0>, C4<0>, C4<0>;
L_0x7fabccc4c5f0 .functor AND 1, L_0x7fabccc4c580, L_0x7fabccc4cf70, C4<1>, C4<1>;
L_0x7fabccc4c6e0 .functor AND 1, L_0x7fabccc4c5f0, L_0x7fabccc4bf60, C4<1>, C4<1>;
L_0x7fabccc4c7b0 .functor OR 1, L_0x7fabccc4c440, L_0x7fabccc4c6e0, C4<0>, C4<0>;
L_0x7fabccc4c910 .functor BUFZ 1, L_0x7fabccc4ae30, C4<0>, C4<0>, C4<0>;
L_0x7fabccc4c9c0 .functor AND 1, L_0x7fabccc37e40, L_0x7fabccc37eb0, C4<1>, C4<1>;
L_0x7fabccc4c8a0 .functor AND 1, L_0x7fabccc37e40, L_0x7fabccc4bf60, C4<1>, C4<1>;
L_0x7fabccc4cb30 .functor OR 1, L_0x7fabccc4c9c0, L_0x7fabccc4c8a0, C4<0>, C4<0>;
L_0x7fabccc4cc70 .functor AND 1, L_0x7fabccc37eb0, L_0x7fabccc4bf60, C4<1>, C4<1>;
L_0x7fabccc4cce0 .functor OR 1, L_0x7fabccc4cb30, L_0x7fabccc4cc70, C4<0>, C4<0>;
v0x7fabce3b5c20_0 .net *"_s10", 0 0, L_0x7fabccc4c440;  1 drivers
v0x7fabce3b5ce0_0 .net *"_s12", 0 0, L_0x7fabccc4c580;  1 drivers
v0x7fabce3b5d90_0 .net *"_s14", 0 0, L_0x7fabccc4c5f0;  1 drivers
v0x7fabce3b5e50_0 .net *"_s16", 0 0, L_0x7fabccc4c6e0;  1 drivers
v0x7fabce3b5f00_0 .net *"_s22", 0 0, L_0x7fabccc4c9c0;  1 drivers
v0x7fabce3b5ff0_0 .net *"_s24", 0 0, L_0x7fabccc4c8a0;  1 drivers
v0x7fabce3b60a0_0 .net *"_s26", 0 0, L_0x7fabccc4cb30;  1 drivers
v0x7fabce3b6150_0 .net *"_s28", 0 0, L_0x7fabccc4cc70;  1 drivers
v0x7fabce3b6200_0 .net *"_s6", 0 0, L_0x7fabccc4aee0;  1 drivers
v0x7fabce3b6310_0 .net *"_s8", 0 0, L_0x7fabccc4c390;  1 drivers
v0x7fabce3b63c0_0 .net "a", 0 0, L_0x7fabccc4ce50;  1 drivers
v0x7fabce3b6460_0 .net "aInvert", 0 0, L_0x7fabce3b7910;  alias, 1 drivers
v0x7fabce3b64f0_0 .net "aOperand", 0 0, L_0x7fabccc37e40;  1 drivers
v0x7fabce3b6590_0 .net "adderResult", 0 0, L_0x7fabccc4ae30;  1 drivers
v0x7fabce3b6630_0 .net "b", 0 0, L_0x7fabccc4cf70;  1 drivers
v0x7fabce3b66d0_0 .net "bInvert", 0 0, L_0x7fabce3b79f0;  alias, 1 drivers
v0x7fabce39f7e0_0 .net "bOperand", 0 0, L_0x7fabccc37eb0;  1 drivers
v0x7fabce3b6760_0 .net "carryIn", 0 0, L_0x7fabccc4bf60;  1 drivers
v0x7fabce3b67f0_0 .net "carryOut", 0 0, L_0x7fabccc4cce0;  1 drivers
v0x7fabce3b6880_0 .net "halfAdderResult", 0 0, L_0x7fabccc4ac80;  1 drivers
L_0x7fabccd63878 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7fabce3b6910_0 .net "less", 0 0, L_0x7fabccd63878;  1 drivers
v0x7fabce3b69a0_0 .net "operation", 1 0, L_0x7fabccc4c000;  1 drivers
v0x7fabce3b6a30_0 .net "overflow", 0 0, L_0x7fabccc4c7b0;  1 drivers
v0x7fabce3b6ac0_0 .net "product", 0 0, L_0x7fabccc37f60;  1 drivers
v0x7fabce3b6b50_0 .var "result", 0 0;
v0x7fabce3b6be0_0 .net "set", 0 0, L_0x7fabccc4c910;  alias, 1 drivers
v0x7fabce3b6c90_0 .net "sum", 0 0, L_0x7fabccc4abf0;  1 drivers
E_0x7fabce3b4c10/0 .event edge, v0x7fabce3b6a30_0, v0x7fabce35f200_0, v0x7fabce3b6b50_0, v0x7fabce3b69a0_0;
E_0x7fabce3b4c10/1 .event edge, v0x7fabce3b6760_0, v0x7fabce36a450_0, v0x7fabce36fd30_0, v0x7fabce3b6910_0;
E_0x7fabce3b4c10/2 .event edge, v0x7fabce3b6630_0, v0x7fabce3b63c0_0;
E_0x7fabce3b4c10 .event/or E_0x7fabce3b4c10/0, E_0x7fabce3b4c10/1, E_0x7fabce3b4c10/2;
    .scope S_0x7fabce389940;
T_0 ;
    %wait E_0x7fabce30bab0;
    %load/vec4 v0x7fabce35f290_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_0.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_0.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_0.2, 6;
    %load/vec4 v0x7fabce35f200_0;
    %store/vec4 v0x7fabce359920_0, 0, 1;
    %jmp T_0.4;
T_0.0 ;
    %load/vec4 v0x7fabce35e910_0;
    %store/vec4 v0x7fabce359920_0, 0, 1;
    %jmp T_0.4;
T_0.1 ;
    %load/vec4 v0x7fabce358fa0_0;
    %store/vec4 v0x7fabce359920_0, 0, 1;
    %jmp T_0.4;
T_0.2 ;
    %load/vec4 v0x7fabce36f3b0_0;
    %store/vec4 v0x7fabce359920_0, 0, 1;
    %jmp T_0.4;
T_0.4 ;
    %pop/vec4 1;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x7fabce354040;
T_1 ;
    %wait E_0x7fabce36a4e0;
    %load/vec4 v0x7fabce332180_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_1.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_1.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_1.2, 6;
    %load/vec4 v0x7fabce332b90_0;
    %store/vec4 v0x7fabce32d2b0_0, 0, 1;
    %jmp T_1.4;
T_1.0 ;
    %load/vec4 v0x7fabce32d220_0;
    %store/vec4 v0x7fabce32d2b0_0, 0, 1;
    %jmp T_1.4;
T_1.1 ;
    %load/vec4 v0x7fabce32c930_0;
    %store/vec4 v0x7fabce32d2b0_0, 0, 1;
    %jmp T_1.4;
T_1.2 ;
    %load/vec4 v0x7fabce33dcc0_0;
    %store/vec4 v0x7fabce32d2b0_0, 0, 1;
    %jmp T_1.4;
T_1.4 ;
    %pop/vec4 1;
    %jmp T_1;
    .thread T_1, $push;
    .scope S_0x7fabce327940;
T_2 ;
    %wait E_0x7fabce33d460;
    %load/vec4 v0x7fabce37d7c0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_2.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_2.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_2.2, 6;
    %load/vec4 v0x7fabce37d730_0;
    %store/vec4 v0x7fabce372570_0, 0, 1;
    %jmp T_2.4;
T_2.0 ;
    %load/vec4 v0x7fabce377ee0_0;
    %store/vec4 v0x7fabce372570_0, 0, 1;
    %jmp T_2.4;
T_2.1 ;
    %load/vec4 v0x7fabce36cc90_0;
    %store/vec4 v0x7fabce372570_0, 0, 1;
    %jmp T_2.4;
T_2.2 ;
    %load/vec4 v0x7fabce3115c0_0;
    %store/vec4 v0x7fabce372570_0, 0, 1;
    %jmp T_2.4;
T_2.4 ;
    %pop/vec4 1;
    %jmp T_2;
    .thread T_2, $push;
    .scope S_0x7fabce3673b0;
T_3 ;
    %wait E_0x7fabce310cd0;
    %load/vec4 v0x7fabce31f0e0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_3.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_3.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_3.2, 6;
    %load/vec4 v0x7fabce31f050_0;
    %store/vec4 v0x7fabce313e90_0, 0, 1;
    %jmp T_3.4;
T_3.0 ;
    %load/vec4 v0x7fabce319800_0;
    %store/vec4 v0x7fabce313e90_0, 0, 1;
    %jmp T_3.4;
T_3.1 ;
    %load/vec4 v0x7fabce30e520_0;
    %store/vec4 v0x7fabce313e90_0, 0, 1;
    %jmp T_3.4;
T_3.2 ;
    %load/vec4 v0x7fabce33acb0_0;
    %store/vec4 v0x7fabce313e90_0, 0, 1;
    %jmp T_3.4;
T_3.4 ;
    %pop/vec4 1;
    %jmp T_3;
    .thread T_3, $push;
    .scope S_0x7fabce30b250;
T_4 ;
    %wait E_0x7fabce32fc10;
    %load/vec4 v0x7fabce354420_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_4.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_4.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_4.2, 6;
    %load/vec4 v0x7fabce354390_0;
    %store/vec4 v0x7fabce34eb40_0, 0, 1;
    %jmp T_4.4;
T_4.0 ;
    %load/vec4 v0x7fabce34eab0_0;
    %store/vec4 v0x7fabce34eb40_0, 0, 1;
    %jmp T_4.4;
T_4.1 ;
    %load/vec4 v0x7fabce3491d0_0;
    %store/vec4 v0x7fabce34eb40_0, 0, 1;
    %jmp T_4.4;
T_4.2 ;
    %load/vec4 v0x7fabce364e30_0;
    %store/vec4 v0x7fabce34eb40_0, 0, 1;
    %jmp T_4.4;
T_4.4 ;
    %pop/vec4 1;
    %jmp T_4;
    .thread T_4, $push;
    .scope S_0x7fabce349260;
T_5 ;
    %wait E_0x7fabce351160;
    %load/vec4 v0x7fabce317280_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_5.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_5.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_5.2, 6;
    %load/vec4 v0x7fabce3171f0_0;
    %store/vec4 v0x7fabce30b650_0, 0, 1;
    %jmp T_5.4;
T_5.0 ;
    %load/vec4 v0x7fabce30b5c0_0;
    %store/vec4 v0x7fabce30b650_0, 0, 1;
    %jmp T_5.4;
T_5.1 ;
    %load/vec4 v0x7fabce30b770_0;
    %store/vec4 v0x7fabce30b650_0, 0, 1;
    %jmp T_5.4;
T_5.2 ;
    %load/vec4 v0x7fabce327c90_0;
    %store/vec4 v0x7fabce30b650_0, 0, 1;
    %jmp T_5.4;
T_5.4 ;
    %pop/vec4 1;
    %jmp T_5;
    .thread T_5, $push;
    .scope S_0x7fabce310f50;
T_6 ;
    %wait E_0x7fabce32a350;
    %load/vec4 v0x7fabce392d30_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_6.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_6.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_6.2, 6;
    %load/vec4 v0x7fabce392c90_0;
    %store/vec4 v0x7fabce392f20_0, 0, 1;
    %jmp T_6.4;
T_6.0 ;
    %load/vec4 v0x7fabce392e80_0;
    %store/vec4 v0x7fabce392f20_0, 0, 1;
    %jmp T_6.4;
T_6.1 ;
    %load/vec4 v0x7fabce393060_0;
    %store/vec4 v0x7fabce392f20_0, 0, 1;
    %jmp T_6.4;
T_6.2 ;
    %load/vec4 v0x7fabce392780_0;
    %store/vec4 v0x7fabce392f20_0, 0, 1;
    %jmp T_6.4;
T_6.4 ;
    %pop/vec4 1;
    %jmp T_6;
    .thread T_6, $push;
    .scope S_0x7fabce393210;
T_7 ;
    %wait E_0x7fabce3924d0;
    %load/vec4 v0x7fabce3944f0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_7.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_7.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_7.2, 6;
    %load/vec4 v0x7fabce394460_0;
    %store/vec4 v0x7fabce3946a0_0, 0, 1;
    %jmp T_7.4;
T_7.0 ;
    %load/vec4 v0x7fabce394610_0;
    %store/vec4 v0x7fabce3946a0_0, 0, 1;
    %jmp T_7.4;
T_7.1 ;
    %load/vec4 v0x7fabce3947c0_0;
    %store/vec4 v0x7fabce3946a0_0, 0, 1;
    %jmp T_7.4;
T_7.2 ;
    %load/vec4 v0x7fabce393e50_0;
    %store/vec4 v0x7fabce3946a0_0, 0, 1;
    %jmp T_7.4;
T_7.4 ;
    %pop/vec4 1;
    %jmp T_7;
    .thread T_7, $push;
    .scope S_0x7fabce394960;
T_8 ;
    %wait E_0x7fabce393ba0;
    %load/vec4 v0x7fabce395c50_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_8.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_8.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_8.2, 6;
    %load/vec4 v0x7fabce395bc0_0;
    %store/vec4 v0x7fabce395e00_0, 0, 1;
    %jmp T_8.4;
T_8.0 ;
    %load/vec4 v0x7fabce395d70_0;
    %store/vec4 v0x7fabce395e00_0, 0, 1;
    %jmp T_8.4;
T_8.1 ;
    %load/vec4 v0x7fabce395f40_0;
    %store/vec4 v0x7fabce395e00_0, 0, 1;
    %jmp T_8.4;
T_8.2 ;
    %load/vec4 v0x7fabce3956d0_0;
    %store/vec4 v0x7fabce395e00_0, 0, 1;
    %jmp T_8.4;
T_8.4 ;
    %pop/vec4 1;
    %jmp T_8;
    .thread T_8, $push;
    .scope S_0x7fabce3960f0;
T_9 ;
    %wait E_0x7fabce395330;
    %load/vec4 v0x7fabce3972e0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_9.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_9.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_9.2, 6;
    %load/vec4 v0x7fabce397240_0;
    %store/vec4 v0x7fabce3974d0_0, 0, 1;
    %jmp T_9.4;
T_9.0 ;
    %load/vec4 v0x7fabce397430_0;
    %store/vec4 v0x7fabce3974d0_0, 0, 1;
    %jmp T_9.4;
T_9.1 ;
    %load/vec4 v0x7fabce397610_0;
    %store/vec4 v0x7fabce3974d0_0, 0, 1;
    %jmp T_9.4;
T_9.2 ;
    %load/vec4 v0x7fabce396d30_0;
    %store/vec4 v0x7fabce3974d0_0, 0, 1;
    %jmp T_9.4;
T_9.4 ;
    %pop/vec4 1;
    %jmp T_9;
    .thread T_9, $push;
    .scope S_0x7fabce3977c0;
T_10 ;
    %wait E_0x7fabce396a80;
    %load/vec4 v0x7fabce3989b0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_10.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_10.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_10.2, 6;
    %load/vec4 v0x7fabce398910_0;
    %store/vec4 v0x7fabce398ba0_0, 0, 1;
    %jmp T_10.4;
T_10.0 ;
    %load/vec4 v0x7fabce398b00_0;
    %store/vec4 v0x7fabce398ba0_0, 0, 1;
    %jmp T_10.4;
T_10.1 ;
    %load/vec4 v0x7fabce398ce0_0;
    %store/vec4 v0x7fabce398ba0_0, 0, 1;
    %jmp T_10.4;
T_10.2 ;
    %load/vec4 v0x7fabce398400_0;
    %store/vec4 v0x7fabce398ba0_0, 0, 1;
    %jmp T_10.4;
T_10.4 ;
    %pop/vec4 1;
    %jmp T_10;
    .thread T_10, $push;
    .scope S_0x7fabce398e90;
T_11 ;
    %wait E_0x7fabce398150;
    %load/vec4 v0x7fabce39a080_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_11.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_11.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_11.2, 6;
    %load/vec4 v0x7fabce399fe0_0;
    %store/vec4 v0x7fabce39a270_0, 0, 1;
    %jmp T_11.4;
T_11.0 ;
    %load/vec4 v0x7fabce39a1d0_0;
    %store/vec4 v0x7fabce39a270_0, 0, 1;
    %jmp T_11.4;
T_11.1 ;
    %load/vec4 v0x7fabce39a3b0_0;
    %store/vec4 v0x7fabce39a270_0, 0, 1;
    %jmp T_11.4;
T_11.2 ;
    %load/vec4 v0x7fabce399ad0_0;
    %store/vec4 v0x7fabce39a270_0, 0, 1;
    %jmp T_11.4;
T_11.4 ;
    %pop/vec4 1;
    %jmp T_11;
    .thread T_11, $push;
    .scope S_0x7fabce39a560;
T_12 ;
    %wait E_0x7fabce399820;
    %load/vec4 v0x7fabce39b750_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_12.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_12.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_12.2, 6;
    %load/vec4 v0x7fabce39b6b0_0;
    %store/vec4 v0x7fabce39b940_0, 0, 1;
    %jmp T_12.4;
T_12.0 ;
    %load/vec4 v0x7fabce39b8a0_0;
    %store/vec4 v0x7fabce39b940_0, 0, 1;
    %jmp T_12.4;
T_12.1 ;
    %load/vec4 v0x7fabce39ba80_0;
    %store/vec4 v0x7fabce39b940_0, 0, 1;
    %jmp T_12.4;
T_12.2 ;
    %load/vec4 v0x7fabce39b1a0_0;
    %store/vec4 v0x7fabce39b940_0, 0, 1;
    %jmp T_12.4;
T_12.4 ;
    %pop/vec4 1;
    %jmp T_12;
    .thread T_12, $push;
    .scope S_0x7fabce39bc30;
T_13 ;
    %wait E_0x7fabce39aef0;
    %load/vec4 v0x7fabce39ce20_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_13.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_13.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_13.2, 6;
    %load/vec4 v0x7fabce39cd80_0;
    %store/vec4 v0x7fabce39d010_0, 0, 1;
    %jmp T_13.4;
T_13.0 ;
    %load/vec4 v0x7fabce39cf70_0;
    %store/vec4 v0x7fabce39d010_0, 0, 1;
    %jmp T_13.4;
T_13.1 ;
    %load/vec4 v0x7fabce39d150_0;
    %store/vec4 v0x7fabce39d010_0, 0, 1;
    %jmp T_13.4;
T_13.2 ;
    %load/vec4 v0x7fabce39c870_0;
    %store/vec4 v0x7fabce39d010_0, 0, 1;
    %jmp T_13.4;
T_13.4 ;
    %pop/vec4 1;
    %jmp T_13;
    .thread T_13, $push;
    .scope S_0x7fabce39d300;
T_14 ;
    %wait E_0x7fabce39c5c0;
    %load/vec4 v0x7fabce39e4f0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_14.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_14.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_14.2, 6;
    %load/vec4 v0x7fabce39e450_0;
    %store/vec4 v0x7fabce39e6e0_0, 0, 1;
    %jmp T_14.4;
T_14.0 ;
    %load/vec4 v0x7fabce39e640_0;
    %store/vec4 v0x7fabce39e6e0_0, 0, 1;
    %jmp T_14.4;
T_14.1 ;
    %load/vec4 v0x7fabce39e820_0;
    %store/vec4 v0x7fabce39e6e0_0, 0, 1;
    %jmp T_14.4;
T_14.2 ;
    %load/vec4 v0x7fabce39df40_0;
    %store/vec4 v0x7fabce39e6e0_0, 0, 1;
    %jmp T_14.4;
T_14.4 ;
    %pop/vec4 1;
    %jmp T_14;
    .thread T_14, $push;
    .scope S_0x7fabce39e9d0;
T_15 ;
    %wait E_0x7fabce39dc90;
    %load/vec4 v0x7fabce39fd20_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_15.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_15.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_15.2, 6;
    %load/vec4 v0x7fabce39fc90_0;
    %store/vec4 v0x7fabce39fed0_0, 0, 1;
    %jmp T_15.4;
T_15.0 ;
    %load/vec4 v0x7fabce39fe40_0;
    %store/vec4 v0x7fabce39fed0_0, 0, 1;
    %jmp T_15.4;
T_15.1 ;
    %load/vec4 v0x7fabce39fff0_0;
    %store/vec4 v0x7fabce39fed0_0, 0, 1;
    %jmp T_15.4;
T_15.2 ;
    %load/vec4 v0x7fabce39f610_0;
    %store/vec4 v0x7fabce39fed0_0, 0, 1;
    %jmp T_15.4;
T_15.4 ;
    %pop/vec4 1;
    %jmp T_15;
    .thread T_15, $push;
    .scope S_0x7fabce3a01a0;
T_16 ;
    %wait E_0x7fabce39f360;
    %load/vec4 v0x7fabce3a1540_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_16.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_16.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_16.2, 6;
    %load/vec4 v0x7fabce3a14b0_0;
    %store/vec4 v0x7fabce3a1700_0, 0, 1;
    %jmp T_16.4;
T_16.0 ;
    %load/vec4 v0x7fabce3a1660_0;
    %store/vec4 v0x7fabce3a1700_0, 0, 1;
    %jmp T_16.4;
T_16.1 ;
    %load/vec4 v0x7fabce3a1840_0;
    %store/vec4 v0x7fabce3a1700_0, 0, 1;
    %jmp T_16.4;
T_16.2 ;
    %load/vec4 v0x7fabce3a0fc0_0;
    %store/vec4 v0x7fabce3a1700_0, 0, 1;
    %jmp T_16.4;
T_16.4 ;
    %pop/vec4 1;
    %jmp T_16;
    .thread T_16, $push;
    .scope S_0x7fabce3a19f0;
T_17 ;
    %wait E_0x7fabce3a0bb0;
    %load/vec4 v0x7fabce3a2be0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_17.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_17.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_17.2, 6;
    %load/vec4 v0x7fabce3a2b40_0;
    %store/vec4 v0x7fabce3a2dd0_0, 0, 1;
    %jmp T_17.4;
T_17.0 ;
    %load/vec4 v0x7fabce3a2d30_0;
    %store/vec4 v0x7fabce3a2dd0_0, 0, 1;
    %jmp T_17.4;
T_17.1 ;
    %load/vec4 v0x7fabce3a2f10_0;
    %store/vec4 v0x7fabce3a2dd0_0, 0, 1;
    %jmp T_17.4;
T_17.2 ;
    %load/vec4 v0x7fabce3a2630_0;
    %store/vec4 v0x7fabce3a2dd0_0, 0, 1;
    %jmp T_17.4;
T_17.4 ;
    %pop/vec4 1;
    %jmp T_17;
    .thread T_17, $push;
    .scope S_0x7fabce3a30c0;
T_18 ;
    %wait E_0x7fabce3a2380;
    %load/vec4 v0x7fabce3a42b0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_18.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_18.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_18.2, 6;
    %load/vec4 v0x7fabce3a4210_0;
    %store/vec4 v0x7fabce3a44a0_0, 0, 1;
    %jmp T_18.4;
T_18.0 ;
    %load/vec4 v0x7fabce3a4400_0;
    %store/vec4 v0x7fabce3a44a0_0, 0, 1;
    %jmp T_18.4;
T_18.1 ;
    %load/vec4 v0x7fabce3a45e0_0;
    %store/vec4 v0x7fabce3a44a0_0, 0, 1;
    %jmp T_18.4;
T_18.2 ;
    %load/vec4 v0x7fabce3a3d00_0;
    %store/vec4 v0x7fabce3a44a0_0, 0, 1;
    %jmp T_18.4;
T_18.4 ;
    %pop/vec4 1;
    %jmp T_18;
    .thread T_18, $push;
    .scope S_0x7fabce3a4790;
T_19 ;
    %wait E_0x7fabce3a3a50;
    %load/vec4 v0x7fabce3a5980_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_19.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_19.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_19.2, 6;
    %load/vec4 v0x7fabce3a58e0_0;
    %store/vec4 v0x7fabce3a5b70_0, 0, 1;
    %jmp T_19.4;
T_19.0 ;
    %load/vec4 v0x7fabce3a5ad0_0;
    %store/vec4 v0x7fabce3a5b70_0, 0, 1;
    %jmp T_19.4;
T_19.1 ;
    %load/vec4 v0x7fabce3a5cb0_0;
    %store/vec4 v0x7fabce3a5b70_0, 0, 1;
    %jmp T_19.4;
T_19.2 ;
    %load/vec4 v0x7fabce3a53d0_0;
    %store/vec4 v0x7fabce3a5b70_0, 0, 1;
    %jmp T_19.4;
T_19.4 ;
    %pop/vec4 1;
    %jmp T_19;
    .thread T_19, $push;
    .scope S_0x7fabce3a5e60;
T_20 ;
    %wait E_0x7fabce3a5120;
    %load/vec4 v0x7fabce3a7050_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_20.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_20.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_20.2, 6;
    %load/vec4 v0x7fabce3a6fb0_0;
    %store/vec4 v0x7fabce3a7240_0, 0, 1;
    %jmp T_20.4;
T_20.0 ;
    %load/vec4 v0x7fabce3a71a0_0;
    %store/vec4 v0x7fabce3a7240_0, 0, 1;
    %jmp T_20.4;
T_20.1 ;
    %load/vec4 v0x7fabce3a7380_0;
    %store/vec4 v0x7fabce3a7240_0, 0, 1;
    %jmp T_20.4;
T_20.2 ;
    %load/vec4 v0x7fabce3a6aa0_0;
    %store/vec4 v0x7fabce3a7240_0, 0, 1;
    %jmp T_20.4;
T_20.4 ;
    %pop/vec4 1;
    %jmp T_20;
    .thread T_20, $push;
    .scope S_0x7fabce3a7530;
T_21 ;
    %wait E_0x7fabce3a67f0;
    %load/vec4 v0x7fabce3a8720_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_21.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_21.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_21.2, 6;
    %load/vec4 v0x7fabce3a8680_0;
    %store/vec4 v0x7fabce3a8910_0, 0, 1;
    %jmp T_21.4;
T_21.0 ;
    %load/vec4 v0x7fabce3a8870_0;
    %store/vec4 v0x7fabce3a8910_0, 0, 1;
    %jmp T_21.4;
T_21.1 ;
    %load/vec4 v0x7fabce3a8a50_0;
    %store/vec4 v0x7fabce3a8910_0, 0, 1;
    %jmp T_21.4;
T_21.2 ;
    %load/vec4 v0x7fabce3a8170_0;
    %store/vec4 v0x7fabce3a8910_0, 0, 1;
    %jmp T_21.4;
T_21.4 ;
    %pop/vec4 1;
    %jmp T_21;
    .thread T_21, $push;
    .scope S_0x7fabce3a8c00;
T_22 ;
    %wait E_0x7fabce3a7ec0;
    %load/vec4 v0x7fabce3a9df0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_22.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_22.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_22.2, 6;
    %load/vec4 v0x7fabce3a9d50_0;
    %store/vec4 v0x7fabce3a9fe0_0, 0, 1;
    %jmp T_22.4;
T_22.0 ;
    %load/vec4 v0x7fabce3a9f40_0;
    %store/vec4 v0x7fabce3a9fe0_0, 0, 1;
    %jmp T_22.4;
T_22.1 ;
    %load/vec4 v0x7fabce3aa120_0;
    %store/vec4 v0x7fabce3a9fe0_0, 0, 1;
    %jmp T_22.4;
T_22.2 ;
    %load/vec4 v0x7fabce3a9840_0;
    %store/vec4 v0x7fabce3a9fe0_0, 0, 1;
    %jmp T_22.4;
T_22.4 ;
    %pop/vec4 1;
    %jmp T_22;
    .thread T_22, $push;
    .scope S_0x7fabce3aa2d0;
T_23 ;
    %wait E_0x7fabce3a9590;
    %load/vec4 v0x7fabce3ab4c0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_23.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_23.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_23.2, 6;
    %load/vec4 v0x7fabce3ab420_0;
    %store/vec4 v0x7fabce3ab6b0_0, 0, 1;
    %jmp T_23.4;
T_23.0 ;
    %load/vec4 v0x7fabce3ab610_0;
    %store/vec4 v0x7fabce3ab6b0_0, 0, 1;
    %jmp T_23.4;
T_23.1 ;
    %load/vec4 v0x7fabce3ab7f0_0;
    %store/vec4 v0x7fabce3ab6b0_0, 0, 1;
    %jmp T_23.4;
T_23.2 ;
    %load/vec4 v0x7fabce3aaf10_0;
    %store/vec4 v0x7fabce3ab6b0_0, 0, 1;
    %jmp T_23.4;
T_23.4 ;
    %pop/vec4 1;
    %jmp T_23;
    .thread T_23, $push;
    .scope S_0x7fabce3ab9a0;
T_24 ;
    %wait E_0x7fabce3aac60;
    %load/vec4 v0x7fabce3acb90_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_24.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_24.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_24.2, 6;
    %load/vec4 v0x7fabce3acaf0_0;
    %store/vec4 v0x7fabce3acd80_0, 0, 1;
    %jmp T_24.4;
T_24.0 ;
    %load/vec4 v0x7fabce3acce0_0;
    %store/vec4 v0x7fabce3acd80_0, 0, 1;
    %jmp T_24.4;
T_24.1 ;
    %load/vec4 v0x7fabce3acec0_0;
    %store/vec4 v0x7fabce3acd80_0, 0, 1;
    %jmp T_24.4;
T_24.2 ;
    %load/vec4 v0x7fabce3ac5e0_0;
    %store/vec4 v0x7fabce3acd80_0, 0, 1;
    %jmp T_24.4;
T_24.4 ;
    %pop/vec4 1;
    %jmp T_24;
    .thread T_24, $push;
    .scope S_0x7fabce3ad070;
T_25 ;
    %wait E_0x7fabce3ac330;
    %load/vec4 v0x7fabce3ae260_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_25.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_25.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_25.2, 6;
    %load/vec4 v0x7fabce3ae1c0_0;
    %store/vec4 v0x7fabce3ae450_0, 0, 1;
    %jmp T_25.4;
T_25.0 ;
    %load/vec4 v0x7fabce3ae3b0_0;
    %store/vec4 v0x7fabce3ae450_0, 0, 1;
    %jmp T_25.4;
T_25.1 ;
    %load/vec4 v0x7fabce3ae590_0;
    %store/vec4 v0x7fabce3ae450_0, 0, 1;
    %jmp T_25.4;
T_25.2 ;
    %load/vec4 v0x7fabce3adcb0_0;
    %store/vec4 v0x7fabce3ae450_0, 0, 1;
    %jmp T_25.4;
T_25.4 ;
    %pop/vec4 1;
    %jmp T_25;
    .thread T_25, $push;
    .scope S_0x7fabce3ae740;
T_26 ;
    %wait E_0x7fabce3ada00;
    %load/vec4 v0x7fabce3af930_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_26.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_26.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_26.2, 6;
    %load/vec4 v0x7fabce3af890_0;
    %store/vec4 v0x7fabce3afb20_0, 0, 1;
    %jmp T_26.4;
T_26.0 ;
    %load/vec4 v0x7fabce3afa80_0;
    %store/vec4 v0x7fabce3afb20_0, 0, 1;
    %jmp T_26.4;
T_26.1 ;
    %load/vec4 v0x7fabce3afc60_0;
    %store/vec4 v0x7fabce3afb20_0, 0, 1;
    %jmp T_26.4;
T_26.2 ;
    %load/vec4 v0x7fabce3af380_0;
    %store/vec4 v0x7fabce3afb20_0, 0, 1;
    %jmp T_26.4;
T_26.4 ;
    %pop/vec4 1;
    %jmp T_26;
    .thread T_26, $push;
    .scope S_0x7fabce3afe10;
T_27 ;
    %wait E_0x7fabce3af0d0;
    %load/vec4 v0x7fabce3b1000_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_27.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_27.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_27.2, 6;
    %load/vec4 v0x7fabce3b0f60_0;
    %store/vec4 v0x7fabce3b11f0_0, 0, 1;
    %jmp T_27.4;
T_27.0 ;
    %load/vec4 v0x7fabce3b1150_0;
    %store/vec4 v0x7fabce3b11f0_0, 0, 1;
    %jmp T_27.4;
T_27.1 ;
    %load/vec4 v0x7fabce3b1330_0;
    %store/vec4 v0x7fabce3b11f0_0, 0, 1;
    %jmp T_27.4;
T_27.2 ;
    %load/vec4 v0x7fabce3b0a50_0;
    %store/vec4 v0x7fabce3b11f0_0, 0, 1;
    %jmp T_27.4;
T_27.4 ;
    %pop/vec4 1;
    %jmp T_27;
    .thread T_27, $push;
    .scope S_0x7fabce3b14e0;
T_28 ;
    %wait E_0x7fabce3b07a0;
    %load/vec4 v0x7fabce3b26d0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_28.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_28.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_28.2, 6;
    %load/vec4 v0x7fabce3b2630_0;
    %store/vec4 v0x7fabce3b28c0_0, 0, 1;
    %jmp T_28.4;
T_28.0 ;
    %load/vec4 v0x7fabce3b2820_0;
    %store/vec4 v0x7fabce3b28c0_0, 0, 1;
    %jmp T_28.4;
T_28.1 ;
    %load/vec4 v0x7fabce3b2a00_0;
    %store/vec4 v0x7fabce3b28c0_0, 0, 1;
    %jmp T_28.4;
T_28.2 ;
    %load/vec4 v0x7fabce3b2120_0;
    %store/vec4 v0x7fabce3b28c0_0, 0, 1;
    %jmp T_28.4;
T_28.4 ;
    %pop/vec4 1;
    %jmp T_28;
    .thread T_28, $push;
    .scope S_0x7fabce3b2bb0;
T_29 ;
    %wait E_0x7fabce3b1e70;
    %load/vec4 v0x7fabce3b3da0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_29.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_29.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_29.2, 6;
    %load/vec4 v0x7fabce3b3d00_0;
    %store/vec4 v0x7fabce3b3f90_0, 0, 1;
    %jmp T_29.4;
T_29.0 ;
    %load/vec4 v0x7fabce3b3ef0_0;
    %store/vec4 v0x7fabce3b3f90_0, 0, 1;
    %jmp T_29.4;
T_29.1 ;
    %load/vec4 v0x7fabce3b40d0_0;
    %store/vec4 v0x7fabce3b3f90_0, 0, 1;
    %jmp T_29.4;
T_29.2 ;
    %load/vec4 v0x7fabce3b37f0_0;
    %store/vec4 v0x7fabce3b3f90_0, 0, 1;
    %jmp T_29.4;
T_29.4 ;
    %pop/vec4 1;
    %jmp T_29;
    .thread T_29, $push;
    .scope S_0x7fabce3b4280;
T_30 ;
    %wait E_0x7fabce3b3540;
    %load/vec4 v0x7fabce3b5470_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_30.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_30.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_30.2, 6;
    %load/vec4 v0x7fabce3b53d0_0;
    %store/vec4 v0x7fabce3b5660_0, 0, 1;
    %jmp T_30.4;
T_30.0 ;
    %load/vec4 v0x7fabce3b55c0_0;
    %store/vec4 v0x7fabce3b5660_0, 0, 1;
    %jmp T_30.4;
T_30.1 ;
    %load/vec4 v0x7fabce3b57a0_0;
    %store/vec4 v0x7fabce3b5660_0, 0, 1;
    %jmp T_30.4;
T_30.2 ;
    %load/vec4 v0x7fabce3b4ec0_0;
    %store/vec4 v0x7fabce3b5660_0, 0, 1;
    %jmp T_30.4;
T_30.4 ;
    %pop/vec4 1;
    %jmp T_30;
    .thread T_30, $push;
    .scope S_0x7fabce3b5950;
T_31 ;
    %wait E_0x7fabce3b4c10;
    %load/vec4 v0x7fabce3b69a0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_31.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_31.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_31.2, 6;
    %load/vec4 v0x7fabce3b6910_0;
    %store/vec4 v0x7fabce3b6b50_0, 0, 1;
    %jmp T_31.4;
T_31.0 ;
    %load/vec4 v0x7fabce3b6ac0_0;
    %store/vec4 v0x7fabce3b6b50_0, 0, 1;
    %jmp T_31.4;
T_31.1 ;
    %load/vec4 v0x7fabce3b6c90_0;
    %store/vec4 v0x7fabce3b6b50_0, 0, 1;
    %jmp T_31.4;
T_31.2 ;
    %load/vec4 v0x7fabce3b6590_0;
    %store/vec4 v0x7fabce3b6b50_0, 0, 1;
    %jmp T_31.4;
T_31.4 ;
    %pop/vec4 1;
    %jmp T_31;
    .thread T_31, $push;
    .scope S_0x7fabce38f220;
T_32 ;
    %delay 0, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x7fabce3b74f0_0, 0, 32;
    %pushi/vec4 32, 0, 32;
    %store/vec4 v0x7fabce3b75a0_0, 0, 32;
    %pushi/vec4 2, 0, 4;
    %store/vec4 v0x7fabce3b7630_0, 0, 4;
    %delay 100000, 0;
    %pushi/vec4 20, 0, 32;
    %store/vec4 v0x7fabce3b74f0_0, 0, 32;
    %vpi_call 2 15 "$display", "result = %h", v0x7fabce3b77b0_0 {0 0 0};
    %delay 100000, 0;
    %vpi_call 2 16 "$display", "result = %h", v0x7fabce3b77b0_0 {0 0 0};
    %end;
    .thread T_32;
    .scope S_0x7fabce38f220;
T_33 ;
    %delay 500000, 0;
    %vpi_call 2 19 "$finish" {0 0 0};
    %end;
    .thread T_33;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "ALU_32_Sim.v";
    "./ALU_32.v";
    "./ALU_1.v";
